<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TaoBlog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liaotao421.github.io/"/>
  <updated>2020-12-05T09:13:26.873Z</updated>
  <id>https://liaotao421.github.io/</id>
  
  <author>
    <name>廖涛</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>谷粒学院开发day18</title>
    <link href="https://liaotao421.github.io/posts/cc559e96/"/>
    <id>https://liaotao421.github.io/posts/cc559e96/</id>
    <published>2020-12-05T09:12:00.000Z</published>
    <updated>2020-12-05T09:13:26.873Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Day18 内容介绍</p><p>1、整合spring security 权限框架</p><p>2、整合权限管理前端页面</p><p>3、Nacos配置中心</p><p>4、提交项目到远程git仓库</p></blockquote><a id="more"></a><h2 id="1、整合spring-security-权限框架"><a href="#1、整合spring-security-权限框架" class="headerlink" title="1、整合spring security 权限框架"></a>1、整合spring security 权限框架</h2><h3 id="1、spring-security-简介"><a href="#1、spring-security-简介" class="headerlink" title="1、spring security 简介"></a>1、spring security 简介</h3><blockquote><p>Spring 是一个非常流行和成功的 Java 应用开发框架。Spring Security 基于 Spring 框架，提供了一套 Web 应用安全性的完整解决方案。一般来说，Web 应用的安全性包括<strong>用户认证</strong>（<strong>Authentication</strong>）和用户授权（<strong>Authorization</strong>）两个部分。</p><p>（1）用户认证指的是：验证某个用户是否为系统中的合法主体，也就是说用户能否访问该系统。用户认证一般要求用户提供用户名和密码。系统通过校验用户名和密码来完成认证过程。</p><p>（2）用户授权指的是验证某个用户是否有权限执行某个操作。在一个系统中，不同用户所具有的权限是不同的。比如对一个文件来说，有的用户只能进行读取，而有的用户可以进行修改。一般来说，系统会为不同的用户分配不同的角色，而每个角色则对应一系列的权限。</p><p><strong>Spring Security其实就是用filter，多请求的路径进行过滤。</strong></p><p>（1）如果是基于Session，那么Spring-security会对cookie里的sessionid进行解析，找到服务器存储的sesion信息，然后判断当前用户是否符合请求的要求。</p><p>（2）如果是token，则是解析出token，然后将当前请求加入到Spring-security管理的权限信息中去</p></blockquote><p><strong>认证与授权实现思路</strong>：（面试）</p><p>如果系统的模块众多，每个模块都需要就行授权与认证，所以我们选择<strong>基于token</strong>的形式进行授权与认证，用户根据用户名密码认证成功，然后获取当前用户角色的一系列权限值，并<strong>以用户名为key</strong>，<strong>权限列表为value</strong>的形式存入<strong>redis缓存</strong>中，根据用户名相关信息生成token返回，浏览器将token记录到<strong>cookie</strong>中，每次调用api接口都默认将<strong>token携带到header请求头</strong>中，Spring-security解析header头获取token信息，解析token获取当前用户名，根据用户名就可以从redis中获取权限列表，这样Spring-security就能够判断当前请求是否有权限访问</p><p><img src="https://i.loli.net/2020/12/05/uE4kM6nLwWIO1iH.png" alt=""></p><h3 id="2、后端整合"><a href="#2、后端整合" class="headerlink" title="2、后端整合"></a>2、后端整合</h3><p><strong>cv操作 -&gt; 大概看看代码是干什么的</strong></p><p><img src="C:%5CUsers%5Cadmin%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201205115006138.png" alt=""></p><p><strong>在service_acl引入spring security依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyfwlp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring_security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>编写 UserDetailsService 实现类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span>(<span class="string">"userDetailsService"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDetailsServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserDetailsService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PermissionService permissionService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 根据账号获取用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username:</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>: org.springframework.security.core.userdetails.UserDetails</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDetails <span class="title">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException </span>&#123;</span><br><span class="line">        <span class="comment">// 从数据库中取出用户信息</span></span><br><span class="line">        User user = userService.selectByUsername(username);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断用户是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == user)&#123;</span><br><span class="line">            <span class="comment">//throw new UsernameNotFoundException("用户名不存在！");</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 返回UserDetails实现类</span></span><br><span class="line">        User curUser = <span class="keyword">new</span> User();</span><br><span class="line">        BeanUtils.copyProperties(user,curUser);</span><br><span class="line"></span><br><span class="line">        List&lt;String&gt; authorities = permissionService.selectPermissionValueByUserId(user.getId());</span><br><span class="line"><span class="comment">//        SecurityUser securityUser = new SecurityUser(curUser);</span></span><br><span class="line"><span class="comment">//        securityUser.setPermissionValueList(authorities);</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、页面整合"><a href="#3、页面整合" class="headerlink" title="3、页面整合"></a>3、页面整合</h3><p>CV操作 这老师好像最后不细了，可能是时间不多了，这一点暂停了自己好好研究研究</p><p>不行啊这，得去好好研究研究 spring security 才行 <img src="https://i.loli.net/2020/12/05/cltgHs3VFRQPC9G.jpg" style="zoom:33%;" /></p><h2 id="2、nacos配置中心"><a href="#2、nacos配置中心" class="headerlink" title="2、nacos配置中心"></a>2、nacos配置中心</h2><p>在系统开发过程中，开发者通常会将一些需要变更的参数、变量等从代码中分离出来独立管理，以独立的配置文件的形式存在。目的是让静态的系统工件或者交付物（如 WAR，JAR 包等）更好地和实际的物理运行环境进行适配。配置管理一般包含在系统部署的过程中，由系统管理员或者运维人员完成。配置变更是调整系统运行时的行为的有效手段。</p><p>如果微服务架构中没有使用统一配置中心时，所存在的问题：</p><p>- 配置文件分散在各个项目里，不方便维护</p><p>- 配置内容安全与权限</p><p>- 更新配置后，项目需要重启</p><p>nacos配置中心：系统配置的集中管理（编辑、存储、分发）、动态更新不重启、回滚配置（变更管理、历史版本管理、变更审计）等所有与配置相关的活动。</p><p>项目中我们使用<strong>nacos</strong>实现配置中心替代原生的 spring cloud config</p><p><img src="https://i.loli.net/2020/12/05/yjDbvs1Bo3WOG6A.png" alt=""></p><h3 id="1、创建配置文件"><a href="#1、创建配置文件" class="headerlink" title="1、创建配置文件"></a>1、创建配置文件</h3><p>在nacos里创建配置文件，点击操作即可</p><p><img src="https://i.loli.net/2020/12/05/3klzmTbEAJ7UC8L.png" alt=""></p><p><strong>补充知识：</strong></p><p>bootstrap与application</p><p><img src="https://i.loli.net/2020/12/05/5Tl6IYWJt2ndr14.png" alt=""></p><p><strong>（1）加载顺序</strong><br>这里主要是说明application和bootstrap的加载顺序。</p><p>bootstrap.yml（bootstrap.properties）先加载<br>application.yml（application.properties）后加载<br>bootstrap.yml 用于应用程序上下文的引导阶段。</p><p>bootstrap.yml 由父Spring ApplicationContext加载。</p><p>父ApplicationContext 被加载到使用 application.yml 的之前。</p><p><strong>（2）配置区别</strong><br>bootstrap.yml 和application.yml 都可以用来配置参数。</p><p>bootstrap.yml 可以理解成系统级别的一些参数配置，这些参数一般是不会变动的。<br>application.yml 可以用来定义应用级别的。</p><h3 id="2、在bootstrap-properties中配置"><a href="#2、在bootstrap-properties中配置" class="headerlink" title="2、在bootstrap.properties中配置"></a>2、在bootstrap.properties中配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#注册中心地址</span><br><span class="line">spring.cloud.nacos.config.server-addr=127.0.0.1:8848</span><br><span class="line"></span><br><span class="line">spring.profiles.active=dev</span><br><span class="line"></span><br><span class="line"># 该配置影响统一配置中心中的dataId，之前已经配置过</span><br><span class="line">spring.application.name=service-sta</span><br></pre></td></tr></table></figure><p>若开启 spring.profiles.active=dev 配置</p><p>需要在nacos添加配置文件 service-sta-dev.properties才能找到配置文件</p><h3 id="3、nacos命名空间"><a href="#3、nacos命名空间" class="headerlink" title="3、nacos命名空间"></a>3、nacos命名空间</h3><p>常见的环境 dev test prod</p><p>在命名空间添加常用的环境</p><p><img src="https://i.loli.net/2020/12/05/kv9DjLTHehRx76c.png" alt=""></p><p>根据名称空间切换</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#注册中心地址</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.server-addr</span>=<span class="string">127.0.0.1:8848</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.profiles.active</span>=<span class="string">dev</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 该配置影响统一配置中心中的dataId，之前已经配置过</span></span><br><span class="line"><span class="meta">spring.application.name</span>=<span class="string">service-sta</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.namespace</span>=<span class="string">17b81064-200c-4908-864f-1be97ce5b9e3</span></span><br></pre></td></tr></table></figure><h3 id="4、加载多个配置文件"><a href="#4、加载多个配置文件" class="headerlink" title="4、加载多个配置文件"></a>4、加载多个配置文件</h3><p>在nacos创建多个配置文件</p><p><img src="https://i.loli.net/2020/12/05/HaEy9pm1FTBNrYK.png" alt=""></p><p>修改bootstrap配置文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#注册中心地址</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.server-addr</span>=<span class="string">127.0.0.1:8848</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.profiles.active</span>=<span class="string">dev</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 该配置影响统一配置中心中的dataId，之前已经配置过</span></span><br><span class="line"><span class="meta">spring.application.name</span>=<span class="string">service-sta</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置nacos命名空间</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.namespace</span>=<span class="string">17b81064-200c-4908-864f-1be97ce5b9e3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 多个配置文件</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.ext-config[0].data-id</span>=<span class="string">port.properties</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启动态刷新配置，否则配置文件修改，工程无法感知</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.ext-config[0].refresh</span>=<span class="string">tr</span></span><br></pre></td></tr></table></figure><h2 id="3、git"><a href="#3、git" class="headerlink" title="3、git"></a>3、git</h2><h3 id="1、git提交过程"><a href="#1、git提交过程" class="headerlink" title="1、git提交过程"></a>1、git提交过程</h3><p><img src="https://i.loli.net/2020/12/05/ZGFQHYhCKIbwTaq.png" alt=""></p><h3 id="2、码云（gitee）"><a href="#2、码云（gitee）" class="headerlink" title="2、码云（gitee）"></a>2、码云（gitee）</h3><p>idea整合gitee 在之前开发魔方比赛系统已经使用过，感觉问题不大</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Day18 内容介绍&lt;/p&gt;
&lt;p&gt;1、整合spring security 权限框架&lt;/p&gt;
&lt;p&gt;2、整合权限管理前端页面&lt;/p&gt;
&lt;p&gt;3、Nacos配置中心&lt;/p&gt;
&lt;p&gt;4、提交项目到远程git仓库&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术分享" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="谷粒学院项目" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>谷粒学院开发day17</title>
    <link href="https://liaotao421.github.io/posts/5cea8307/"/>
    <id>https://liaotao421.github.io/posts/5cea8307/</id>
    <published>2020-12-04T06:51:00.000Z</published>
    <updated>2020-12-04T07:14:48.643Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要</p><p>canal、Gateway网关、权限管理</p></blockquote><a id="more"></a><p><img src="https://i.loli.net/2020/12/04/fFmQWDb3u1YNHgJ.png" alt=""></p><h2 id="一、canal"><a href="#一、canal" class="headerlink" title="一、canal"></a>一、canal</h2><h3 id="1、应用场景-–-远程库中内容同步到本地库"><a href="#1、应用场景-–-远程库中内容同步到本地库" class="headerlink" title="1、应用场景 – 远程库中内容同步到本地库"></a>1、应用场景 – 远程库中内容同步到本地库</h3><p>​        在前面的统计分析功能中，我们采取了服务调用获取统计数据，这样耦合度高，效率相对较低，目前我采取另一种实现方式，通过实时同步数据库表的方式实现，例如我们要统计每天注册与登录人数，我们只需把会员表同步到统计库中，实现本地统计就可以了，这样效率更高，耦合度更低，Canal就是一个很好的数据库同步工具。canal是阿里巴巴旗下的一款开源项目，纯Java开发。基于数据库增量日志解析，提供增量数据订阅&amp;消费，目前主要支持了MySQL。</p><h3 id="2、Canal环境搭建"><a href="#2、Canal环境搭建" class="headerlink" title="2、Canal环境搭建"></a>2、Canal环境搭建</h3><p><img src="https://i.loli.net/2020/12/02/7khyz3nmOPvlg6E.png" alt=""></p><p>linux 使用虚拟机  mysql安装使用docker <a href="https://liaotao421.github.io/posts/7ff872e6/">docker使用</a></p><p><strong>canal的原理是基于mysql binlog技术，所以这里一定需要开启mysql的binlog写入功能</strong></p><h4 id="（1）进入容器"><a href="#（1）进入容器" class="headerlink" title="（1）进入容器"></a>（1）进入容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it 7e3c363677fe /bin/bash</span><br></pre></td></tr></table></figure><h4 id="（2）检查binlog功能是否开启（OFF为未开启）"><a href="#（2）检查binlog功能是否开启（OFF为未开启）" class="headerlink" title="（2）检查binlog功能是否开启（OFF为未开启）"></a>（2）检查binlog功能是否开启（OFF为未开启）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show variables like <span class="string">'log_bin'</span>;</span></span><br><span class="line"></span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| log_bin       | OFF   |</span><br><span class="line">+---------------+-------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>docker安装vim</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install vim</span><br></pre></td></tr></table></figure><h4 id="（3）修改配置文件开启binlog"><a href="#（3）修改配置文件开启binlog" class="headerlink" title="（3）修改配置文件开启binlog"></a>（3）修改配置文件开启binlog</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1，修改 mysql 的配置文件 conf.d</span><br><span class="line">vi /etc/mysql/conf.d/</span><br><span class="line"></span><br><span class="line">追加内容：</span><br><span class="line">log-bin=mysql-bin     #binlog文件名</span><br><span class="line">binlog_format=ROW     #选择row模式</span><br><span class="line">server_id=1           #mysql实例id,不能和canal的slaveId重复</span><br><span class="line"></span><br><span class="line">2，重启 mysql：</span><br><span class="line">docker restart [容器id]</span><br><span class="line"></span><br><span class="line">3，登录 mysql 客户端，查看 log_bin 变量</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show variables like <span class="string">'log_bin'</span>;</span></span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| log_bin       | ON|</span><br><span class="line">+---------------+-------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">————————————————</span><br><span class="line">如果显示状态为ON表示该功能已开启</span><br></pre></td></tr></table></figure><blockquote><p>这一步搞了好久，发现还是对linux相关知识欠缺，太弱了</p></blockquote><h4 id="（4）下载安装Canal服务"><a href="#（4）下载安装Canal服务" class="headerlink" title="（4）下载安装Canal服务"></a>（4）下载安装Canal服务</h4><p>下载地址：</p><p><a href="https://github.com/alibaba/canal/releases">https://github.com/alibaba/canal/releases</a></p><p><strong>下载之后，放到目录中，解压文件</strong></p><p>cd <code>/usr/local/canal</code></p><p>canal.deployer-1.1.4.tar.gz</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf canal.deployer-1.1.4.tar.gz</span><br></pre></td></tr></table></figure><p><strong>修改配置文件</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi conf/example/instance.properties</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#需要改成自己的数据库信息</span><br><span class="line">canal.instance.master.address&#x3D;192.168.44.132:3306</span><br><span class="line">#需要改成自己的数据库用户名与密码</span><br><span class="line">canal.instance.dbUsername&#x3D;canal</span><br><span class="line">canal.instance.dbPassword&#x3D;canal</span><br><span class="line">#需要改成同步的数据库表规则，例如只是同步一下表</span><br><span class="line">#canal.instance.filter.regex&#x3D;.*\\..*</span><br><span class="line">canal.instance.filter.regex&#x3D;guli_ucenter.ucenter_member</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql 数据解析关注的表，Perl正则表达式.</span><br><span class="line">多个正则之间以逗号(,)分隔，转义符需要双斜杠(\\) </span><br><span class="line">常见例子：</span><br><span class="line">1.  所有表：.*   or  .*\\..*</span><br><span class="line">2.  canal schema下所有表： canal\\..*</span><br><span class="line">3.  canal下的以canal打头的表：canal\\.canal.*</span><br><span class="line">4.  canal schema下的一张表：canal.test1</span><br><span class="line">5.  多个规则组合使用：canal\\..*,mysql.test1,mysql.test2 (逗号分隔)</span><br><span class="line">注意：此过滤条件只针对row模式的数据有效(ps. mixed&#x2F;statement因为不解析sql，所以无法准确提取tableName进行过滤)</span><br></pre></td></tr></table></figure><p><strong>进入bin目录下启动</strong></p><p>(需要java环境，选择直接在宝塔上装个tomcat，自动按照java环境)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh bin/startup.sh</span><br></pre></td></tr></table></figure><p>这里又启动不了，<img src="https://i.loli.net/2020/12/03/yFawjW1PquZnsoe.gif" alt="img" style="zoom:33%;" /></p><p><img src="https://i.loli.net/2020/12/03/FAJUin7RfoyaPSV.png" alt=""></p><p>也不知道为啥，就按照教程一步一步来的、</p><p><strong>最后决定把canal运行再本地，操作本地服务器和云服务器，可算是成功了</strong></p><p><img src="https://i.loli.net/2020/12/03/dure8W4RsNQPh2l.png" alt=""></p><h4 id="（5）写代码实现同步过程"><a href="#（5）写代码实现同步过程" class="headerlink" title="（5）写代码实现同步过程"></a>（5）写代码实现同步过程</h4><p>创建新模块 canalclent</p><p>1、引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--mysql--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.otter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>canal.client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、配置文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 服务端口</span></span><br><span class="line"><span class="meta">server.port</span>=<span class="string">10000</span></span><br><span class="line"><span class="comment"># 服务名</span></span><br><span class="line"><span class="meta">spring.application.name</span>=<span class="string">canal-client</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 环境设置：dev、test、prod</span></span><br><span class="line"><span class="meta">spring.profiles.active</span>=<span class="string">dev</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql数据库连接</span></span><br><span class="line"><span class="meta">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><p>3、编写canal客户端类（直接复制）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.otter.canal.client.CanalConnector;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.otter.canal.client.CanalConnectors;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.otter.canal.protocol.CanalEntry.*;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.otter.canal.protocol.Message;</span><br><span class="line"><span class="keyword">import</span> com.google.protobuf.InvalidProtocolBufferException;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.DbUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.QueryRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Queue;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentLinkedQueue;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CanalClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//sql队列</span></span><br><span class="line">    <span class="keyword">private</span> Queue&lt;String&gt; SQL_QUEUE = <span class="keyword">new</span> ConcurrentLinkedQueue&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * canal入库方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        CanalConnector connector = CanalConnectors.newSingleConnector(<span class="keyword">new</span> InetSocketAddress(<span class="string">"192.168.44.132"</span>,</span><br><span class="line">                <span class="number">11111</span>), <span class="string">"example"</span>, <span class="string">""</span>, <span class="string">""</span>);</span><br><span class="line">        <span class="keyword">int</span> batchSize = <span class="number">1000</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connector.connect();</span><br><span class="line">            connector.subscribe(<span class="string">".*\\..*"</span>);</span><br><span class="line">            connector.rollback();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                    <span class="comment">//尝试从master那边拉去数据batchSize条记录，有多少取多少</span></span><br><span class="line">                    Message message = connector.getWithoutAck(batchSize);</span><br><span class="line">                    <span class="keyword">long</span> batchId = message.getId();</span><br><span class="line">                    <span class="keyword">int</span> size = message.getEntries().size();</span><br><span class="line">                    <span class="keyword">if</span> (batchId == -<span class="number">1</span> || size == <span class="number">0</span>) &#123;</span><br><span class="line">                        Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        dataHandle(message.getEntries());</span><br><span class="line">                    &#125;</span><br><span class="line">                    connector.ack(batchId);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//当队列里面堆积的sql大于一定数值的时候就模拟执行</span></span><br><span class="line">                    <span class="keyword">if</span> (SQL_QUEUE.size() &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">                        executeQueueSql();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InvalidProtocolBufferException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            connector.disconnect();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 模拟执行队列里面的sql语句</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">executeQueueSql</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> size = SQL_QUEUE.size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">            String sql = SQL_QUEUE.poll();</span><br><span class="line">            System.out.println(<span class="string">"[sql]----&gt; "</span> + sql);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.execute(sql.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数据处理</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entrys</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dataHandle</span><span class="params">(List&lt;Entry&gt; entrys)</span> <span class="keyword">throws</span> InvalidProtocolBufferException </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Entry entry : entrys) &#123;</span><br><span class="line">            <span class="keyword">if</span> (EntryType.ROWDATA == entry.getEntryType()) &#123;</span><br><span class="line">                RowChange rowChange = RowChange.parseFrom(entry.getStoreValue());</span><br><span class="line">                EventType eventType = rowChange.getEventType();</span><br><span class="line">                <span class="keyword">if</span> (eventType == EventType.DELETE) &#123;</span><br><span class="line">                    saveDeleteSql(entry);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (eventType == EventType.UPDATE) &#123;</span><br><span class="line">                    saveUpdateSql(entry);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (eventType == EventType.INSERT) &#123;</span><br><span class="line">                    saveInsertSql(entry);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存更新语句</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entry</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">saveUpdateSql</span><span class="params">(Entry entry)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            RowChange rowChange = RowChange.parseFrom(entry.getStoreValue());</span><br><span class="line">            List&lt;RowData&gt; rowDatasList = rowChange.getRowDatasList();</span><br><span class="line">            <span class="keyword">for</span> (RowData rowData : rowDatasList) &#123;</span><br><span class="line">                List&lt;Column&gt; newColumnList = rowData.getAfterColumnsList();</span><br><span class="line">                StringBuffer sql = <span class="keyword">new</span> StringBuffer(<span class="string">"update "</span> + entry.getHeader().getTableName() + <span class="string">" set "</span>);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; newColumnList.size(); i++) &#123;</span><br><span class="line">                    sql.append(<span class="string">" "</span> + newColumnList.get(i).getName()</span><br><span class="line">                            + <span class="string">" = '"</span> + newColumnList.get(i).getValue() + <span class="string">"'"</span>);</span><br><span class="line">                    <span class="keyword">if</span> (i != newColumnList.size() - <span class="number">1</span>) &#123;</span><br><span class="line">                        sql.append(<span class="string">","</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                sql.append(<span class="string">" where "</span>);</span><br><span class="line">                List&lt;Column&gt; oldColumnList = rowData.getBeforeColumnsList();</span><br><span class="line">                <span class="keyword">for</span> (Column column : oldColumnList) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (column.getIsKey()) &#123;</span><br><span class="line">                        <span class="comment">//暂时只支持单一主键</span></span><br><span class="line">                        sql.append(column.getName() + <span class="string">"="</span> + column.getValue());</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                SQL_QUEUE.add(sql.toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidProtocolBufferException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存删除语句</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entry</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">saveDeleteSql</span><span class="params">(Entry entry)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            RowChange rowChange = RowChange.parseFrom(entry.getStoreValue());</span><br><span class="line">            List&lt;RowData&gt; rowDatasList = rowChange.getRowDatasList();</span><br><span class="line">            <span class="keyword">for</span> (RowData rowData : rowDatasList) &#123;</span><br><span class="line">                List&lt;Column&gt; columnList = rowData.getBeforeColumnsList();</span><br><span class="line">                StringBuffer sql = <span class="keyword">new</span> StringBuffer(<span class="string">"delete from "</span> + entry.getHeader().getTableName() + <span class="string">" where "</span>);</span><br><span class="line">                <span class="keyword">for</span> (Column column : columnList) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (column.getIsKey()) &#123;</span><br><span class="line">                        <span class="comment">//暂时只支持单一主键</span></span><br><span class="line">                        sql.append(column.getName() + <span class="string">"="</span> + column.getValue());</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                SQL_QUEUE.add(sql.toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidProtocolBufferException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存插入语句</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entry</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">saveInsertSql</span><span class="params">(Entry entry)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            RowChange rowChange = RowChange.parseFrom(entry.getStoreValue());</span><br><span class="line">            List&lt;RowData&gt; rowDatasList = rowChange.getRowDatasList();</span><br><span class="line">            <span class="keyword">for</span> (RowData rowData : rowDatasList) &#123;</span><br><span class="line">                List&lt;Column&gt; columnList = rowData.getAfterColumnsList();</span><br><span class="line">                StringBuffer sql = <span class="keyword">new</span> StringBuffer(<span class="string">"insert into "</span> + entry.getHeader().getTableName() + <span class="string">" ("</span>);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; columnList.size(); i++) &#123;</span><br><span class="line">                    sql.append(columnList.get(i).getName());</span><br><span class="line">                    <span class="keyword">if</span> (i != columnList.size() - <span class="number">1</span>) &#123;</span><br><span class="line">                        sql.append(<span class="string">","</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                sql.append(<span class="string">") VALUES ("</span>);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; columnList.size(); i++) &#123;</span><br><span class="line">                    sql.append(<span class="string">"'"</span> + columnList.get(i).getValue() + <span class="string">"'"</span>);</span><br><span class="line">                    <span class="keyword">if</span> (i != columnList.size() - <span class="number">1</span>) &#123;</span><br><span class="line">                        sql.append(<span class="string">","</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                sql.append(<span class="string">")"</span>);</span><br><span class="line">                SQL_QUEUE.add(sql.toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidProtocolBufferException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 入库</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(String sql)</span> </span>&#123;</span><br><span class="line">        Connection con = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">null</span> == sql) <span class="keyword">return</span>;</span><br><span class="line">            con = dataSource.getConnection();</span><br><span class="line">            QueryRunner qr = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">            <span class="keyword">int</span> row = qr.execute(con, sql);</span><br><span class="line">            System.out.println(<span class="string">"update: "</span>+ row);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            DbUtils.closeQuietly(con);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、编写启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CanalApplication</span> <span class="keyword">implements</span> <span class="title">CommandLineRunner</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> CanalClient canalClient;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(CanalApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String... strings)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//项目启动，执行canal客户端监听</span></span><br><span class="line">        canalClient.run();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、GataWay-网关"><a href="#二、GataWay-网关" class="headerlink" title="二、GataWay 网关"></a>二、GataWay 网关</h2><h3 id="1、网关"><a href="#1、网关" class="headerlink" title="1、网关"></a>1、网关</h3><p>API 网关是介于客户端和服务器端之间的中间层，所有的外部请求都会先经过 API 网关这一层。也就是说，API 的实现方面更多的考虑业务逻辑，而安全、性能、监控可以交由 API 网关来做，这样既提高业务灵活性又不缺安全性</p><h3 id="2、Spring-Cloud-Gateway"><a href="#2、Spring-Cloud-Gateway" class="headerlink" title="2、Spring Cloud Gateway"></a>2、Spring Cloud Gateway</h3><p><strong>Spring cloud gateway</strong>是spring官方基于Spring 5.0、Spring Boot2.0和Project Reactor等技术开发的网关，Spring Cloud Gateway旨在为微服务架构提供简单、有效和统一的API路由管理方式，Spring Cloud Gateway作为Spring Cloud生态系统中的网关，目标是替代Netflix Zuul，其不仅提供统一的路由方式，并且还基于Filer链的方式提供了网关基本的功能，例如：安全、监控/埋点、限流等。</p><p><img src="https://i.loli.net/2020/12/03/DCU9ZAkqPKx3wyH.jpg" alt=""></p><h3 id="3、Spring-Cloud-Gateway核心概念"><a href="#3、Spring-Cloud-Gateway核心概念" class="headerlink" title="3、Spring Cloud Gateway核心概念"></a>3、Spring Cloud Gateway核心概念</h3><p>网关提供API全托管服务，丰富的API管理功能，辅助企业管理大规模的API，以降低管理成本和安全风险，包括协议适配、协议转发、安全策略、防刷、流量、监控日志等贡呢。一般来说网关对外暴露的URL或者接口信息，我们统称为路由信息。如果研发过网关中间件或者使用过Zuul的人，会知道网关的核心是Filter以及Filter Chain（Filter责任链）。Sprig Cloud Gateway也具有路由和Filter的概念。下面介绍一下Spring Cloud Gateway中几个重要的概念。</p><p>（1）路由。路由是网关最基础的部分，路由信息有一个ID、一个目的URL、一组断言和一组Filter组成。如果断言路由为真，则说明请求的URL和配置匹配</p><p>（2）断言。Java8中的断言函数。Spring Cloud Gateway中的断言函数输入类型是Spring5.0框架中的ServerWebExchange。Spring Cloud Gateway中的断言函数允许开发者去定义匹配来自于http request中的任何信息，比如请求头和参数等。</p><p>（3）过滤器。一个标准的Spring webFilter。Spring cloud gateway中的filter分为两种类型的Filter，分别是Gateway Filter和Global Filter。过滤器Filter将会对请求和响应进行修改处理</p><p><img src="https://i.loli.net/2020/12/03/EkxuGz2JP7bFc3t.jpg" alt=""></p><p>如上图所示，Spring cloud Gateway发出请求。然后再由Gateway Handler Mapping中找到与请求相匹配的路由，将其发送到Gateway web handler。Handler再通过指定的过滤器链将请求发送到我们实际的服务执行业务逻辑，然后返回。</p><h3 id="4、实现请求转发"><a href="#4、实现请求转发" class="headerlink" title="4、实现请求转发"></a>4、实现请求转发</h3><p><strong>（1）引入依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common_utils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--gson--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--服务调用--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>（2）配置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 服务端口</span></span><br><span class="line"><span class="meta">server.port</span>=<span class="string">8222</span></span><br><span class="line"><span class="comment"># 服务名</span></span><br><span class="line"><span class="meta">spring.application.name</span>=<span class="string">service-gateway</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nacos服务地址</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.discovery.server-addr</span>=<span class="string">127.0.0.1:8848</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用服务发现路由</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.discovery.locator.enabled</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">#服务路由名小写</span></span><br><span class="line"><span class="comment">#spring.cloud.gateway.discovery.locator.lower-case-service-id=true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#这不知道干啥的，但是不能删了...</span></span><br><span class="line"><span class="comment">#设置路由id</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[0].id</span>=<span class="string">service-acl</span></span><br><span class="line"><span class="comment">#设置路由的uri</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[0].uri</span>=<span class="string">lb://service-acl</span></span><br><span class="line"><span class="comment">#设置路由断言,代理servicerId为auth-service的/auth/路径</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[0].predicates</span>= <span class="string">Path=/*/acl/**</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置service-edu服务</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[1].id</span>=<span class="string">service-edu</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[1].uri</span>=<span class="string">lb://service-edu</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[1].predicates</span>= <span class="string">Path=/eduservice/**</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置service-ucenter服务</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[2].id</span>=<span class="string">service-ucenter</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[2].uri</span>=<span class="string">lb://service-ucenter</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[2].predicates</span>= <span class="string">Path=/ucenterservice/**</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置service-ucenter服务</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[3].id</span>=<span class="string">service-cms</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[3].uri</span>=<span class="string">lb://service-cms</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[3].predicates</span>= <span class="string">Path=/cmsservice/**</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[4].id</span>=<span class="string">service-msm</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[4].uri</span>=<span class="string">lb://service-msm</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[4].predicates</span>= <span class="string">Path=/edumsm/**</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[5].id</span>=<span class="string">service-order</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[5].uri</span>=<span class="string">lb://service-order</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[5].predicates</span>= <span class="string">Path=/orderservice/**</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[6].id</span>=<span class="string">service-order</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[6].uri</span>=<span class="string">lb://service-order</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[6].predicates</span>= <span class="string">Path=/orderservice/**</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[7].id</span>=<span class="string">service-oss</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[7].uri</span>=<span class="string">lb://service-oss</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[7].predicates</span>= <span class="string">Path=/eduoss/**</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[8].id</span>=<span class="string">service-statistic</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[8].uri</span>=<span class="string">lb://service-statistic</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[8].predicates</span>= <span class="string">Path=/staservice/**</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[9].id</span>=<span class="string">service-vod</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[9].uri</span>=<span class="string">lb://service-vod</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[9].predicates</span>= <span class="string">Path=/eduvod/**</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[10].id</span>=<span class="string">service-edu</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[10].uri</span>=<span class="string">lb://service-edu</span></span><br><span class="line"><span class="meta">spring.cloud.gateway.routes[10].predicates</span>= <span class="string">Path=/eduuser/**</span></span><br></pre></td></tr></table></figure><h3 id="5、实现负载均衡"><a href="#5、实现负载均衡" class="headerlink" title="5、实现负载均衡"></a>5、实现负载均衡</h3><p><img src="https://i.loli.net/2020/12/03/E4tIzdawTFWnrZH.png" alt=""></p><h3 id="6、解决跨域等其他配置"><a href="#6、解决跨域等其他配置" class="headerlink" title="6、解决跨域等其他配置"></a>6、解决跨域等其他配置</h3><p>cv操作 保存好老师的代码，以后开发直接修改使用</p><p><strong>1、网关解决跨域问题</strong></p><p><strong>（1）创建配置类</strong></p><p><img src="https://i.loli.net/2020/12/03/pNtRlBavVUinkEG.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CorsConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CorsWebFilter <span class="title">corsFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        CorsConfiguration config = <span class="keyword">new</span> CorsConfiguration();</span><br><span class="line">        config.addAllowedMethod(<span class="string">"*"</span>);</span><br><span class="line">        config.addAllowedOrigin(<span class="string">"*"</span>);</span><br><span class="line">        config.addAllowedHeader(<span class="string">"*"</span>);</span><br><span class="line">        UrlBasedCorsConfigurationSource source = <span class="keyword">new</span> UrlBasedCorsConfigurationSource(<span class="keyword">new</span> PathPatternParser());</span><br><span class="line">        source.registerCorsConfiguration(<span class="string">"/**"</span>, config);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> CorsWebFilter(source);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2、全局Filter，统一处理会员登录与外部不允许访问的服务</strong></p><p><img src="https://i.loli.net/2020/12/03/pNtRlBavVUinkEG.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.google.gson.JsonObject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.gateway.filter.GatewayFilterChain;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.gateway.filter.GlobalFilter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.Ordered;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.buffer.DataBuffer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.server.reactive.ServerHttpRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.server.reactive.ServerHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.AntPathMatcher;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.server.ServerWebExchange;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 全局Filter，统一处理会员登录与外部不允许访问的服务</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthGlobalFilter</span> <span class="keyword">implements</span> <span class="title">GlobalFilter</span>, <span class="title">Ordered</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> AntPathMatcher antPathMatcher = <span class="keyword">new</span> AntPathMatcher();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;Void&gt; <span class="title">filter</span><span class="params">(ServerWebExchange exchange, GatewayFilterChain chain)</span> </span>&#123;</span><br><span class="line">        ServerHttpRequest request = exchange.getRequest();</span><br><span class="line">        String path = request.getURI().getPath();</span><br><span class="line">        <span class="comment">//谷粒学院api接口，校验用户必须登录</span></span><br><span class="line">        <span class="keyword">if</span>(antPathMatcher.match(<span class="string">"/api/**/auth/**"</span>, path)) &#123;</span><br><span class="line">            List&lt;String&gt; tokenList = request.getHeaders().get(<span class="string">"token"</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">null</span> == tokenList) &#123;</span><br><span class="line">                ServerHttpResponse response = exchange.getResponse();</span><br><span class="line">                <span class="keyword">return</span> out(response);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//                Boolean isCheck = JwtUtils.checkToken(tokenList.get(0));</span></span><br><span class="line"><span class="comment">//                if(!isCheck) &#123;</span></span><br><span class="line">                    ServerHttpResponse response = exchange.getResponse();</span><br><span class="line">                    <span class="keyword">return</span> out(response);</span><br><span class="line"><span class="comment">//                &#125;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//内部服务接口，不允许外部访问</span></span><br><span class="line">        <span class="keyword">if</span>(antPathMatcher.match(<span class="string">"/**/inner/**"</span>, path)) &#123;</span><br><span class="line">            ServerHttpResponse response = exchange.getResponse();</span><br><span class="line">            <span class="keyword">return</span> out(response);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> chain.filter(exchange);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> Mono&lt;Void&gt; <span class="title">out</span><span class="params">(ServerHttpResponse response)</span> </span>&#123;</span><br><span class="line">        JsonObject message = <span class="keyword">new</span> JsonObject();</span><br><span class="line">        message.addProperty(<span class="string">"success"</span>, <span class="keyword">false</span>);</span><br><span class="line">        message.addProperty(<span class="string">"code"</span>, <span class="number">28004</span>);</span><br><span class="line">        message.addProperty(<span class="string">"data"</span>, <span class="string">"鉴权失败"</span>);</span><br><span class="line">        <span class="keyword">byte</span>[] bits = message.toString().getBytes(StandardCharsets.UTF_8);</span><br><span class="line">        DataBuffer buffer = response.bufferFactory().wrap(bits);</span><br><span class="line">        <span class="comment">//response.setStatusCode(HttpStatus.UNAUTHORIZED);</span></span><br><span class="line">        <span class="comment">//指定编码，否则在浏览器中会中文乱码</span></span><br><span class="line">        response.getHeaders().add(<span class="string">"Content-Type"</span>, <span class="string">"application/json;charset=UTF-8"</span>);</span><br><span class="line">        <span class="keyword">return</span> response.writeWith(Mono.just(buffer));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3、自定义异常处理</strong></p><p>服务网关调用服务时可能会有一些异常或服务不可用，它返回错误信息不友好，需要我们覆盖处理</p><p><img src="https://i.loli.net/2020/12/03/pNtRlBavVUinkEG.png" alt=""></p><p>ErrorHandlerConfig：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.ObjectProvider;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.web.ResourceProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.web.ServerProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.EnableConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.reactive.error.ErrorAttributes;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.Ordered;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.Order;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.codec.ServerCodecConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.result.view.ViewResolver;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 覆盖默认的异常处理</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties</span>(&#123;ServerProperties<span class="class">.<span class="keyword">class</span>, <span class="title">ResourceProperties</span>.<span class="title">class</span>&#125;)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">ErrorHandlerConfig</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ServerProperties serverProperties;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ApplicationContext applicationContext;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ResourceProperties resourceProperties;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> List&lt;ViewResolver&gt; viewResolvers;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ServerCodecConfigurer serverCodecConfigurer;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ErrorHandlerConfig</span><span class="params">(ServerProperties serverProperties,</span></span></span><br><span class="line"><span class="function"><span class="params">                                     ResourceProperties resourceProperties,</span></span></span><br><span class="line"><span class="function"><span class="params">                                     ObjectProvider&lt;List&lt;ViewResolver&gt;&gt; viewResolversProvider,</span></span></span><br><span class="line"><span class="function"><span class="params">                                        ServerCodecConfigurer serverCodecConfigurer,</span></span></span><br><span class="line"><span class="function"><span class="params">                                     ApplicationContext applicationContext)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.serverProperties = serverProperties;</span><br><span class="line">        <span class="keyword">this</span>.applicationContext = applicationContext;</span><br><span class="line">        <span class="keyword">this</span>.resourceProperties = resourceProperties;</span><br><span class="line">        <span class="keyword">this</span>.viewResolvers = viewResolversProvider.getIfAvailable(Collections::emptyList);</span><br><span class="line">        <span class="keyword">this</span>.serverCodecConfigurer = serverCodecConfigurer;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Order</span>(Ordered.HIGHEST_PRECEDENCE)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ErrorWebExceptionHandler <span class="title">errorWebExceptionHandler</span><span class="params">(ErrorAttributes errorAttributes)</span> </span>&#123;</span><br><span class="line">        JsonExceptionHandler exceptionHandler = <span class="keyword">new</span> JsonExceptionHandler(</span><br><span class="line">                errorAttributes,</span><br><span class="line">                <span class="keyword">this</span>.resourceProperties,</span><br><span class="line">                <span class="keyword">this</span>.serverProperties.getError(),</span><br><span class="line">                <span class="keyword">this</span>.applicationContext);</span><br><span class="line">        exceptionHandler.setViewResolvers(<span class="keyword">this</span>.viewResolvers);</span><br><span class="line">        exceptionHandler.setMessageWriters(<span class="keyword">this</span>.serverCodecConfigurer.getWriters());</span><br><span class="line">        exceptionHandler.setMessageReaders(<span class="keyword">this</span>.serverCodecConfigurer.getReaders());</span><br><span class="line">        <span class="keyword">return</span> exceptionHandler;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JsonExceptionHandler：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.web.ErrorProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.web.ResourceProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.reactive.error.ErrorAttributes;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.function.server.*;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义异常处理</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;异常时用JSON代替HTML异常信息&lt;p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JsonExceptionHandler</span> <span class="keyword">extends</span> <span class="title">DefaultErrorWebExceptionHandler</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">JsonExceptionHandler</span><span class="params">(ErrorAttributes errorAttributes, ResourceProperties resourceProperties,</span></span></span><br><span class="line"><span class="function"><span class="params">                                ErrorProperties errorProperties, ApplicationContext applicationContext)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(errorAttributes, resourceProperties, errorProperties, applicationContext);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取异常属性</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Map&lt;String, Object&gt; <span class="title">getErrorAttributes</span><span class="params">(ServerRequest request, <span class="keyword">boolean</span> includeStackTrace)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">"success"</span>, <span class="keyword">false</span>);</span><br><span class="line">        map.put(<span class="string">"code"</span>, <span class="number">20005</span>);</span><br><span class="line">        map.put(<span class="string">"message"</span>, <span class="string">"网关失败"</span>);</span><br><span class="line">        map.put(<span class="string">"data"</span>, <span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 指定响应处理方法为JSON处理的方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> errorAttributes</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> RouterFunction&lt;ServerResponse&gt; <span class="title">getRoutingFunction</span><span class="params">(ErrorAttributes errorAttributes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> RouterFunctions.route(RequestPredicates.all(), <span class="keyword">this</span>::renderErrorResponse);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据code获取对应的HttpStatus</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> errorAttributes</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> HttpStatus <span class="title">getHttpStatus</span><span class="params">(Map&lt;String, Object&gt; errorAttributes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> HttpStatus.OK;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、权限管理"><a href="#三、权限管理" class="headerlink" title="三、权限管理"></a>三、权限管理</h2><p>需求分析：</p><p><img src="https://i.loli.net/2020/12/03/ahSQRvFfMLVtrEW.png" alt=""></p><p>表和表之间的关系：</p><p><img src="https://i.loli.net/2020/12/03/F6ynDGvkxtWBif4.png" alt=""></p><h3 id="1、整合代码（无需敲）"><a href="#1、整合代码（无需敲）" class="headerlink" title="1、整合代码（无需敲）"></a>1、整合代码（无需敲）</h3><p><strong>1、引入依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring_security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>2、复制权限管理接口代码</strong></p><p>cv 操作，导包</p><p><strong>3、复制spring-security代码</strong></p><p>cv操作，导包</p><blockquote><p>保留老师代码，以后开发再次cv操作使用</p></blockquote><h3 id="2、接口开发"><a href="#2、接口开发" class="headerlink" title="2、接口开发"></a>2、接口开发</h3><p><strong>1、查询所有菜单接口</strong></p><p>弃用以前的方法（封装实体类，遍历组装），使用<strong>递归实现</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 遍历查询所有菜单</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Permission <span class="title">guliQueryAllMenuGuli</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.查询所有菜单</span></span><br><span class="line">        QueryWrapper&lt;Permission&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        wrapper.orderByDesc(<span class="string">"id"</span>);</span><br><span class="line">        List&lt;Permission&gt; list = baseMapper.selectList(wrapper);</span><br><span class="line">        <span class="comment">//2.进行封装</span></span><br><span class="line">        Permission result = buildPermission(list);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Permission <span class="title">buildPermission</span><span class="params">(List&lt;Permission&gt; list)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建list集合用于数据最后封装</span></span><br><span class="line">       Permission finalNode = <span class="keyword">new</span> Permission();</span><br><span class="line">        <span class="comment">//1.遍历得到顶层菜单，设置level为1</span></span><br><span class="line">        <span class="keyword">for</span> (Permission permissionNode : list) &#123;</span><br><span class="line">            <span class="keyword">if</span> (permissionNode.getPid().equals(<span class="string">"0"</span>)) &#123;</span><br><span class="line">                permissionNode.setLevel(<span class="number">1</span>);</span><br><span class="line">                <span class="comment">//根据顶层菜单向下查询</span></span><br><span class="line">                finalNode = guliSelectChildren(permissionNode,list);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> finalNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 递归方法 (秒啊~)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> permissionNode 当前节点</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list 所有节点</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Permission <span class="title">guliSelectChildren</span><span class="params">(Permission permissionNode, List&lt;Permission&gt; list)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.向一级菜单放二层菜单</span></span><br><span class="line">        permissionNode.setChildren(<span class="keyword">new</span> ArrayList&lt;&gt;());</span><br><span class="line">        <span class="comment">//2.遍历所有进行比较</span></span><br><span class="line">        <span class="keyword">for</span> (Permission permission : list) &#123;</span><br><span class="line">            <span class="keyword">if</span> (permissionNode.getId().equals(permission.getPid())) &#123;</span><br><span class="line">                <span class="comment">//进行封装</span></span><br><span class="line">                permission.setLevel(permissionNode.getLevel() + <span class="number">1</span>);</span><br><span class="line">                <span class="comment">//查询到的菜单放到上一级目录</span></span><br><span class="line">                permissionNode.getChildren().add(guliSelectChildren(permission,list));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> permissionNode;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2、递归删除菜单</strong></p><p>核心就是递归查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 递归删除菜单 -&gt; 关键完成递归查询</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">guliRemoveChildByIdGuli</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    ArrayList&lt;String&gt; idList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    idList.add(id);</span><br><span class="line"></span><br><span class="line">    MySelectChildListById(id,idList);</span><br><span class="line"></span><br><span class="line">    baseMapper.deleteBatchIds(idList);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MySelectChildListById</span><span class="params">(String id, ArrayList&lt;String&gt; idList)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    QueryWrapper&lt;Permission&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.eq(<span class="string">"pId"</span>,id);</span><br><span class="line">    wrapper.select(<span class="string">"id"</span>);</span><br><span class="line">    List&lt;Permission&gt; childList = baseMapper.selectList(wrapper);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//取出childList加到idList并封装</span></span><br><span class="line">    childList.forEach(item-&gt; &#123;</span><br><span class="line">        idList.add(item.getId());</span><br><span class="line">        MySelectChildListById(item.getId(),idList);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3、授予权限</strong></p><p>较为简单，节省篇幅</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要&lt;/p&gt;
&lt;p&gt;canal、Gateway网关、权限管理&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术分享" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="谷粒学院项目" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>自己搭建ssr代理</title>
    <link href="https://liaotao421.github.io/posts/25bd3e2a/"/>
    <id>https://liaotao421.github.io/posts/25bd3e2a/</id>
    <published>2020-12-03T16:37:00.000Z</published>
    <updated>2020-12-04T07:15:17.585Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前几天因为网络赚钱上头购买的国外vps还闲置着，还有那些YouTube上什么小说，视频，成人站广告引流赚钱看看就行，不能说绝对是被割韭菜，一部分人纯碎是凭借视频的播放量加上传授所谓的内购项目来牟利，想一想，如果你发现了一个被动赚钱的项目，你会闷声发大财还是公之于众，再加上我国网络监管的力度，还是把心思放在正道上为妙！ <img src="https://i.loli.net/2020/12/03/1SLFatPoX7mv64M.jpg" alt="img" style="zoom: 33%;" />        ，记录一篇使用<strong>国外vps</strong>“科学上网”的方法</p></blockquote><a id="more"></a><h2 id="一、一些我也分不清的概念"><a href="#一、一些我也分不清的概念" class="headerlink" title="一、一些我也分不清的概念"></a>一、一些我也分不清的概念</h2><h3 id="VPN"><a href="#VPN" class="headerlink" title="VPN:"></a>VPN:</h3><p>VPN可谓是经常说了，平时自己折腾折腾的也知道大概可以用来科学上网，要是问我什么是VPN，大概就是知道中文虚拟专用网络（Virtual Private Network），也就说不出个所以然了（计算机网络学过一点，搞忘了），网上扒一段作用</p><blockquote><p>“vpn作用：提供安全可靠的通信渠道，一般而言企业使用较多。延伸作用：科学上网。说明：VPN的出现并不是为了“科学上网”，二是在公网上建立加密的通信渠道。例如，公司员工出差或者在寝室，想要登录公司内网邮箱怎么办？这时VPN就派上用场了，可以通过第三方连接工具进行远程连接，比如思科就有相应的工具。”</p></blockquote><h3 id="VPS，虚拟主机，云服务器，服务器"><a href="#VPS，虚拟主机，云服务器，服务器" class="headerlink" title="VPS，虚拟主机，云服务器，服务器"></a>VPS，虚拟主机，云服务器，服务器</h3><p>这些概念还是可以区分下，</p><p>服务器：就是看得见摸得着的服务器，可以理解性能更佳的主机，等以后或许可以搞一台放家里，emmmmm</p><p>云服务器（Elastic Compute Service 简称ESC）：接触到是疫情期间阿里云的白嫖活动，开启了新世界的大门啊哈哈，目前我就主要使用腾讯云推出的腾讯云学生服务器，一年120还是很划算（辣鸡腾讯客服忽悠我买了三年），用途就可以自己部署部署项目，建小型站点什么的</p><p>虚拟主机：当时因为分不清云服务器与虚拟主机，看便宜就买了一台，虽然是香港的不需要备案，但便宜的太离谱，一年好像40多，访问啥的贼慢，已经弃置，虚拟主机就是弱化版的云服务器，也可以进行建站，但性能不如云服务器，而且没有操作系统，自然不能安装java环境啥的</p><p>VPS:就是把服务器虚拟化成一个一个，没部分都有独立的ip，操作系统，之前我都不知道有这玩意，买了一台发现性能比腾讯云的学生稍好，多一个核，价格又差不多（就离谱），推荐网站 <a href="https://pacificrack.com/">https://pacificrack.com/</a> ，有各种价位的套餐，可以使用支付宝支付</p><h3 id="SSR-SS"><a href="#SSR-SS" class="headerlink" title="SSR,SS"></a>SSR,SS</h3><p>一样是知道名字，但细说说不出个所以然，扒一段解释继续</p><blockquote><p>SS全称shadowsocks，一开始为个人独立开发并用作“科学上网”，后被大家所熟知和广泛使用。再后来，据说作者被请去“喝茶”，停止了该项目。</p></blockquote><blockquote><p>SSR全称shadowsocks-R。SSR作者声称SS不够隐匿，容易被防火墙检测到，SSR在改进了混淆和协议，更难被防火墙检测到。简单地说，SSR是SS的改进版。</p></blockquote><p>底层原理就不去探究了，步入正题，开始搭建自己的SSR代理！</p><p>ps : 以上各种观点均个人理解，可能漏洞百出，勿喷<img src="https://i.loli.net/2020/12/03/HYzmwS8DZjOaWJu.jpg" alt="img" style="zoom:50%;" /></p><h2 id="二、步骤"><a href="#二、步骤" class="headerlink" title="二、步骤"></a>二、步骤</h2><p>其实网上一搜找个教程照着做就行，还是自己写写，记录记录踩到的坑啥的</p><h3 id="1、拥有一台国外VPS"><a href="#1、拥有一台国外VPS" class="headerlink" title="1、拥有一台国外VPS"></a>1、拥有一台国外VPS</h3><p>买 就完事了，性能差不多就行应该，应该吧 <a href="[https://pacificrack.com/](https://pacificrack.com/)">推荐网站</a></p><h3 id="2、连接到终端进行操作"><a href="#2、连接到终端进行操作" class="headerlink" title="2、连接到终端进行操作"></a>2、连接到终端进行操作</h3><p>连接我用的xshell，当然各种工具都行，默认这些工具读者都会了，回头在b站发一个从零开始教程</p><p><strong>移动到你选择的目录，一键安装，运行</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget</span><br><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/CecilWu/SSR-Chinese/master/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/12/03/N25FYZmcOMQrIJL.png" alt="image-20201203221555870"></p><p><strong>相信各位已经看出，现在只需要配置就可以了</strong></p><p>安装网上的方法，加密协议选10，输入自己的密码，一路默认回车，有Y输入y</p><p>（安装的东西还是挺多感觉）</p><p><img src="https://i.loli.net/2020/12/03/Evl8CdHXsKTIe5P.png" alt="image-20201203225800326"></p><p>安装中… …</p><p><img src="https://i.loli.net/2020/12/04/nucqHyvDOw47xGj.png" alt="image-20201204002348669"></p><p>这样就安装完成</p><h3 id="3、安装Shadowsocks"><a href="#3、安装Shadowsocks" class="headerlink" title="3、安装Shadowsocks"></a>3、安装Shadowsocks</h3><p>（得下这个蓝飞机，我电脑上的红飞机不得行不知道为什么）</p><p><a href="https://github.com/shadowsocks/shadowsocks-windows/releases/download/4.1.7.1/Shadowsocks-4.1.7.1.zip">下载地址</a></p><p>打开，将配置修改为自己的ssr配置信息</p><p><img src="https://i.loli.net/2020/12/04/iAqg6cPfjVZ59Mn.png" alt="image-20201204002536886"></p><p>即可开始“科学上网”</p><p><img src="https://i.loli.net/2020/12/04/d4jPGJF1MxzAbIp.png" alt="image-20201204002611903"></p><h2 id="三、效果测试"><a href="#三、效果测试" class="headerlink" title="三、效果测试"></a>三、效果测试</h2><p><img src="https://i.loli.net/2020/12/04/pyXHcaBg5qnfVZ3.png" alt="image-20201204002745794"></p><blockquote><p>速度自然是没有每月15的机场快，看视频上很难替代，但谷歌搜索，推特等使用还行，提高vps性能可以加快速度</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前几天因为网络赚钱上头购买的国外vps还闲置着，还有那些YouTube上什么小说，视频，成人站广告引流赚钱看看就行，不能说绝对是被割韭菜，一部分人纯碎是凭借视频的播放量加上传授所谓的内购项目来牟利，想一想，如果你发现了一个被动赚钱的项目，你会闷声发大财还是公之于众，再加上我国网络监管的力度，还是把心思放在正道上为妙！ &lt;img src=&quot;https://i.loli.net/2020/12/03/1SLFatPoX7mv64M.jpg&quot; alt=&quot;img&quot; style=&quot;zoom: 33%;&quot; /&gt;        ，记录一篇使用&lt;strong&gt;国外vps&lt;/strong&gt;“科学上网”的方法&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术分享" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>谷粒学院开发day16</title>
    <link href="https://liaotao421.github.io/posts/2bedb391/"/>
    <id>https://liaotao421.github.io/posts/2bedb391/</id>
    <published>2020-12-01T13:40:00.000Z</published>
    <updated>2020-12-04T07:14:54.039Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：</p><p>统计分析模块</p><p>定时任务、ECharts</p></blockquote><a id="more"></a><p><img src="https://i.loli.net/2020/12/01/6w3dukNq4JVb8rE.png" alt="image-20201201103531438"></p><h2 id="一、课程详情界面立即观看和立即购买完善"><a href="#一、课程详情界面立即观看和立即购买完善" class="headerlink" title="一、课程详情界面立即观看和立即购买完善"></a>一、课程详情界面立即观看和立即购买完善</h2><p>小细节：<strong>对于参数带了requet的请求，不要点击再让浏览器发送请求去判断返回数据是否正确</strong></p><p>如这个请求返回isBuy为true</p><p><img src="https://i.loli.net/2020/12/01/o1us5SNywPe7Xqx.png" alt="image-20201201123322641"></p><p>但点击后</p><p><img src="https://i.loli.net/2020/12/01/vR95TPSlGYnAXCJ.png" alt="image-20201201123352948"></p><p><img src="https://i.loli.net/2020/12/01/bEqNi92HTlyIMtU.png" alt="image-20201201124332720"></p><p>同时触发远程调用熔断器，以后注意这种小错误</p><h2 id="二、后台-统计模块"><a href="#二、后台-统计模块" class="headerlink" title="二、后台-统计模块"></a>二、后台-统计模块</h2><h3 id="1、添加定时任务"><a href="#1、添加定时任务" class="headerlink" title="1、添加定时任务"></a>1、添加定时任务</h3><p>生活中：闹钟</p><p><strong>需求：每天凌晨一点统计前一天的数据添加到数据库</strong></p><p>1、启动类添加注解 @EnableScheduling</p><p>2、创建定时任务类，在类里边使用表达式（=&gt; cron表达式）设置什么时候去执行</p><p><strong>cron表达式 （七子表达式）</strong>springboot里只支持六位，默认当前年</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScheduledTask</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StatisticsDailyService dailyService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试</span></span><br><span class="line"><span class="comment">     * 每天七点到二十三点每五秒执行一次</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Scheduled</span>(cron = <span class="string">"0/5 * * * * ?"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">task1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"*********++++++++++++*****执行了"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 每天凌晨1点执行定时</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Scheduled</span>(cron = <span class="string">"0 0 1 * * ?"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">task2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取上一天的日期</span></span><br><span class="line">        String day = DateUtil.formatDate(DateUtil.addDays(<span class="keyword">new</span> Date(), -<span class="number">1</span>));</span><br><span class="line">        dailyService.createStatisticsByDay(day);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、在线生成cron表法式  <a href="http://cron.qqe2.com/">http://cron.qqe2.com/</a></p><h3 id="2、ECharts"><a href="#2、ECharts" class="headerlink" title="2、ECharts"></a>2、ECharts</h3><blockquote><p>简介：ECharts是百度的一个项目，后来百度把Echart捐给apache，用于图表展示，提供了常规的<a href="https://echarts.baidu.com/option.html#series-line">折线图</a>、<a href="https://echarts.baidu.com/option.html#series-line">柱状图</a>、<a href="https://echarts.baidu.com/option.html#series-scatter">散点图</a>、<a href="https://echarts.baidu.com/option.html#series-pie">饼图</a>、<a href="https://echarts.baidu.com/option.html#series-candlestick">K线图</a>，用于统计的<a href="https://echarts.baidu.com/option.html#series-boxplot">盒形图</a>，用于地理数据可视化的<a href="https://echarts.baidu.com/option.html#series-map">地图</a>、<a href="https://echarts.baidu.com/option.html#series-heatmap">热力图</a>、<a href="https://echarts.baidu.com/option.html#series-lines">线图</a>，用于关系数据可视化的<a href="https://echarts.baidu.com/option.html#series-graph">关系图</a>、<a href="https://echarts.baidu.com/option.html#series-treemap">treemap</a>、<a href="https://echarts.baidu.com/option.html#series-sunburst">旭日图</a>，多维数据可视化的<a href="https://echarts.baidu.com/option.html#series-parallel">平行坐标</a>，还有用于 BI 的<a href="https://echarts.baidu.com/option.html#series-funnel">漏斗图</a>，<a href="https://echarts.baidu.com/option.html#series-gauge">仪表盘</a>，并且支持图与图之间的混搭。</p><p>官网：<a href="https://echarts.apache.org/zh/index.html">https://echarts.apache.org/zh/index.html</a></p></blockquote><p>快速使用</p><p>1、安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -<span class="literal">-save</span> echarts@<span class="number">4.1</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure><p>2、前端整合</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"app-container"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--表单--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">:inline</span>=<span class="string">"true"</span> <span class="attr">class</span>=<span class="string">"demo-form-inline"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">"searchObj.type"</span> <span class="attr">clearable</span> <span class="attr">placeholder</span>=<span class="string">"请选择"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">"学员登录数统计"</span> <span class="attr">value</span>=<span class="string">"login_num"</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">"学员注册数统计"</span> <span class="attr">value</span>=<span class="string">"register_num"</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">"课程播放数统计"</span> <span class="attr">value</span>=<span class="string">"video_view_num"</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">"每日课程数统计"</span> <span class="attr">value</span>=<span class="string">"course_num"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-date-picker</span></span></span><br><span class="line"><span class="tag">          <span class="attr">v-model</span>=<span class="string">"searchObj.begin"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">"date"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">"选择开始日期"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">value-format</span>=<span class="string">"yyyy-MM-dd"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-date-picker</span></span></span><br><span class="line"><span class="tag">          <span class="attr">v-model</span>=<span class="string">"searchObj.end"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">"date"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">"选择截止日期"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">value-format</span>=<span class="string">"yyyy-MM-dd"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:disabled</span>=<span class="string">"btnDisabled"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">type</span>=<span class="string">"primary"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">icon</span>=<span class="string">"el-icon-search"</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">click</span>=<span class="string">"showChart()"</span>&gt;</span>查询<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"chart-container"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"chart"</span> <span class="attr">class</span>=<span class="string">"chart"</span> <span class="attr">style</span>=<span class="string">"height:500px;width:100%"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> echarts <span class="keyword">from</span> <span class="string">'echarts'</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> staApi <span class="keyword">from</span> <span class="string">'@/api/sta'</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line">    data() &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line">            searchObj:&#123;&#125;,</span><br><span class="line"><span class="actionscript">            btnDisabled:<span class="literal">false</span>,</span></span><br><span class="line">            xData:[],</span><br><span class="line">            yData:[]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    methods:&#123;</span><br><span class="line">        showChart() &#123;</span><br><span class="line"><span class="actionscript">            staApi.getStaData(<span class="keyword">this</span>.searchObj)</span></span><br><span class="line"><span class="javascript">                .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.xData = response.data.date</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.yData = response.data.data</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.setChart()</span></span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        setChart() &#123;</span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'chart'</span>));</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> option = &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//x轴是类目轴（离散数据）,必须通过data设置类目数据</span></span></span><br><span class="line">                xAxis: &#123;</span><br><span class="line"><span class="actionscript">                    type: <span class="string">'category'</span>,</span></span><br><span class="line"><span class="actionscript">                    data: <span class="keyword">this</span>.xData</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                <span class="comment">//y轴是数据轴（连续数据）</span></span></span><br><span class="line">                yAxis: &#123;</span><br><span class="line"><span class="actionscript">                    type: <span class="string">'value'</span></span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                <span class="comment">//系列列表。每个系列通过 type 决定自己的图表类型</span></span></span><br><span class="line">                series: [&#123;</span><br><span class="line"><span class="actionscript">                    <span class="comment">//系列中的数据内容数组</span></span></span><br><span class="line"><span class="actionscript">                    data: <span class="keyword">this</span>.yData,</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//折线图</span></span></span><br><span class="line"><span class="actionscript">                    type: <span class="string">'line'</span></span></span><br><span class="line">                &#125;],</span><br><span class="line">                title: &#123;</span><br><span class="line"><span class="actionscript">                    text: <span class="string">"数据统计"</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                tooltip: &#123;</span><br><span class="line"><span class="actionscript">                    trigger: <span class="string">'axis'</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                dataZoom: [&#123;</span><br><span class="line"><span class="actionscript">                show: <span class="literal">true</span>,</span></span><br><span class="line">                height: 30,</span><br><span class="line">                xAxisIndex: [</span><br><span class="line">                    0</span><br><span class="line">                ],</span><br><span class="line">                bottom: 30,</span><br><span class="line">                start: 10,</span><br><span class="line">                end: 80,</span><br><span class="line"><span class="actionscript">                handleIcon: <span class="string">'path://M306.1,413c0,2.2-1.8,4-4,4h-59.8c-2.2,0-4-1.8-4-4V200.8c0-2.2,1.8-4,4-4h59.8c2.2,0,4,1.8,4,4V413z'</span>,</span></span><br><span class="line"><span class="actionscript">                handleSize: <span class="string">'110%'</span>,</span></span><br><span class="line">                handleStyle: &#123;</span><br><span class="line"><span class="actionscript">                    color: <span class="string">'#d3dee5'</span></span></span><br><span class="line"></span><br><span class="line">                &#125;,</span><br><span class="line">                textStyle: &#123;</span><br><span class="line"><span class="actionscript">                    color: <span class="string">'#fff'</span></span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                borderColor: <span class="string">'#90979c'</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line"><span class="actionscript">                type: <span class="string">'inside'</span>,</span></span><br><span class="line"><span class="actionscript">                show: <span class="literal">true</span>,</span></span><br><span class="line">                height: 15,</span><br><span class="line">                start: 1,</span><br><span class="line">                end: 35</span><br><span class="line">                &#125;]</span><br><span class="line"></span><br><span class="line">            &#125;;</span><br><span class="line">            myChart.setOption(option);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>参考配置手册：<a href="https://echarts.baidu.com/option.html#title">https://echarts.baidu.com/option.html#title</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：&lt;/p&gt;
&lt;p&gt;统计分析模块&lt;/p&gt;
&lt;p&gt;定时任务、ECharts&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术分享" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="谷粒学院项目" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>谷粒学院开发day15</title>
    <link href="https://liaotao421.github.io/posts/b2e4e22b/"/>
    <id>https://liaotao421.github.io/posts/b2e4e22b/</id>
    <published>2020-11-30T14:15:00.000Z</published>
    <updated>2020-12-04T07:14:56.928Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：</p><p>微信支付</p></blockquote> <a id="more"></a><p><img src="https://i.loli.net/2020/11/23/cq6hOFN1XnIkL8l.png" alt="image-20201123153114343"></p><h2 id="一、根据文档独立开发评论功能"><a href="#一、根据文档独立开发评论功能" class="headerlink" title="一、根据文档独立开发评论功能"></a>一、根据文档独立开发评论功能</h2><h3 id="1、代码生成器生成代码"><a href="#1、代码生成器生成代码" class="headerlink" title="1、代码生成器生成代码"></a>1、代码生成器生成代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CodeGenerator</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建代码生成器</span></span><br><span class="line">        AutoGenerator mpg = <span class="keyword">new</span> AutoGenerator();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、全局配置</span></span><br><span class="line">        GlobalConfig gc = <span class="keyword">new</span> GlobalConfig();</span><br><span class="line">        <span class="comment">/*String projectPath = System.getProperty("user.dir");*/</span></span><br><span class="line">        <span class="comment">//推荐使用绝对路径</span></span><br><span class="line">        gc.setOutputDir(<span class="string">"G:\\idea_project\\guli\\service\\service_edu"</span> + <span class="string">"/src/main/java"</span>);</span><br><span class="line">        gc.setAuthor(<span class="string">"liaotao"</span>);</span><br><span class="line">        gc.setOpen(<span class="keyword">false</span>); <span class="comment">//生成后是否打开资源管理器</span></span><br><span class="line">        gc.setFileOverride(<span class="keyword">false</span>); <span class="comment">//重新生成时文件是否覆盖</span></span><br><span class="line">        gc.setServiceName(<span class="string">"%sService"</span>);<span class="comment">//去掉Service接口的首字母I</span></span><br><span class="line">        gc.setIdType(IdType.ID_WORKER); <span class="comment">//主键策略</span></span><br><span class="line">        gc.setDateType(DateType.ONLY_DATE);<span class="comment">//定义生成的实体类中日期类型</span></span><br><span class="line">        gc.setSwagger2(<span class="keyword">true</span>);<span class="comment">//开启Swagger2模式</span></span><br><span class="line"></span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、数据源配置</span></span><br><span class="line">        DataSourceConfig dsc = <span class="keyword">new</span> DataSourceConfig();</span><br><span class="line">        dsc.setUrl(<span class="string">"jdbc:mysql://localhost:3306/guli?serverTimezone=Asia/Shanghai"</span>);</span><br><span class="line">        dsc.setDriverName(<span class="string">"com.mysql.cj.jdbc.Driver"</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">"root"</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">"123456"</span>);</span><br><span class="line">        dsc.setDbType(DbType.MYSQL);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、包配置</span></span><br><span class="line">        PackageConfig pc = <span class="keyword">new</span> PackageConfig();</span><br><span class="line">        pc.setModuleName(<span class="string">"eduservice"</span>); <span class="comment">//模块名</span></span><br><span class="line">        pc.setParent(<span class="string">"com.cyfwlp"</span>);</span><br><span class="line">        <span class="comment">//生成 com.cyfwlp.eduservice</span></span><br><span class="line">        pc.setController(<span class="string">"controller"</span>);</span><br><span class="line">        pc.setEntity(<span class="string">"entity"</span>);</span><br><span class="line">        pc.setService(<span class="string">"service"</span>);</span><br><span class="line">        pc.setMapper(<span class="string">"mapper"</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5、策略配置</span></span><br><span class="line">        StrategyConfig strategy = <span class="keyword">new</span> StrategyConfig();</span><br><span class="line">        <span class="comment">//加表的名称</span></span><br><span class="line">        strategy.setInclude(<span class="string">"edu_comment"</span>);</span><br><span class="line"></span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);<span class="comment">//数据库表映射到实体的命名策略</span></span><br><span class="line">        strategy.setTablePrefix(pc.getModuleName() + <span class="string">"_"</span>); <span class="comment">//生成实体时去掉表前缀</span></span><br><span class="line"></span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);<span class="comment">//数据库表字段映射到实体的命名策略</span></span><br><span class="line">        strategy.setEntityLombokModel(<span class="keyword">true</span>); <span class="comment">// lombok 模型 @Accessors(chain = true) setter链式操作</span></span><br><span class="line"></span><br><span class="line">        strategy.setRestControllerStyle(<span class="keyword">true</span>); <span class="comment">//restful api风格控制器</span></span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="keyword">true</span>); <span class="comment">//url中驼峰转连字符</span></span><br><span class="line"></span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6、执行</span></span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、添加实体类注解，自动填充，逻辑删除"><a href="#2、添加实体类注解，自动填充，逻辑删除" class="headerlink" title="2、添加实体类注解，自动填充，逻辑删除"></a>2、添加实体类注解，自动填充，逻辑删除</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiModelProperty</span>(value = <span class="string">"逻辑删除 1（true）已删除， 0（false）未删除"</span>)</span><br><span class="line"><span class="meta">@TableLogic</span></span><br><span class="line"><span class="keyword">private</span> Boolean isDeleted;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiModelProperty</span>(value = <span class="string">"创建时间"</span>)</span><br><span class="line"><span class="meta">@TableField</span>(fill = FieldFill.INSERT)</span><br><span class="line"><span class="keyword">private</span> Date gmtCreate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiModelProperty</span>(value = <span class="string">"更新时间"</span>)</span><br><span class="line"><span class="meta">@TableField</span>(fill = FieldFill.INSERT_UPDATE)</span><br><span class="line"><span class="keyword">private</span> Date gmtModified;</span><br></pre></td></tr></table></figure><p>前面已经配置逻辑删除插件和自动填充</p><h3 id="3、创建分页查询评论、评论接口"><a href="#3、创建分页查询评论、评论接口" class="headerlink" title="3、创建分页查询评论、评论接口"></a>3、创建分页查询评论、评论接口</h3><p>需使用到微服务调用 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation</span>(<span class="string">"分页查询评论"</span>)</span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"getComment/&#123;current&#125;/&#123;limit&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">getComment</span><span class="params">(@PathVariable Long current, @PathVariable Long limit)</span> </span>&#123;</span><br><span class="line">    Map&lt;String,Object&gt; map = commentService.getComment(current,limit);</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(map);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiOperation</span>(<span class="string">"评论"</span>)</span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/makeComment"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">makeComment</span><span class="params">(@RequestBody EduComment comment, HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//1.获取用户id</span></span><br><span class="line">    String id = JwtUtils.getMemberIdByJwtToken(request);</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isEmpty(id)) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error().code(<span class="number">28004</span>).message(<span class="string">"请登录"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    comment.setMemberId(id);</span><br><span class="line">    <span class="comment">//2.微服务调用获取用户其他信息</span></span><br><span class="line">    R result = ucenterClient.getUserInfo(request);</span><br><span class="line">    Map&lt;String, Object&gt; data = result.getData();</span><br><span class="line">    UcenterMember ucenterMember  = (UcenterMember) data.get(<span class="string">"userInfo"</span>);</span><br><span class="line">    comment.setAvatar(ucenterMember.getAvatar());</span><br><span class="line">    comment.setNickname(ucenterMember.getNickname());</span><br><span class="line">    <span class="comment">//3.保存评论信息</span></span><br><span class="line">    commentService.save(comment);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、前端整合"><a href="#4、前端整合" class="headerlink" title="4、前端整合"></a>4、前端整合</h3><p>…大概就那种，主要cv操作</p><h2 id="二、微信支付"><a href="#二、微信支付" class="headerlink" title="二、微信支付"></a>二、微信支付</h2><p><a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=6_1">官方文档</a></p><p>准备工作，个人无法申请，使用老师提供</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">weixin:</span></span><br><span class="line">  <span class="attr">pay:</span></span><br><span class="line">    <span class="comment">#关联的公众号appid</span></span><br><span class="line">    <span class="attr">appid:</span> <span class="string">wx74862e0dfcf69954</span></span><br><span class="line">    <span class="comment">#商户号</span></span><br><span class="line">    <span class="attr">partner:</span> <span class="number">1558950191</span></span><br><span class="line">    <span class="comment">#商户key</span></span><br><span class="line">    <span class="attr">partnerkey:</span> <span class="string">T6m9iK73b0kn9g5v426MKfHQH7X8rKwb</span></span><br><span class="line">    <span class="comment">#回调地址</span></span><br><span class="line">    <span class="attr">notifyurl:</span> <span class="string">http://guli.shop/api/order/weixinPay/weixinNotify</span></span><br></pre></td></tr></table></figure><p><strong>1、引入依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.wxpay<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>wxpay-sdk<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>2、生成二维码代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">createNative</span><span class="params">(String orderNo)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//1.根据订单号查询订单信息</span></span><br><span class="line">        QueryWrapper&lt;Order&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        wrapper.eq(<span class="string">"order_no"</span>,orderNo);</span><br><span class="line">        Order order = orderService.getOne(wrapper);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.设置生成二维码需要参数</span></span><br><span class="line">        Map&lt;String,String&gt; params = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        params.put(<span class="string">"appid"</span>, <span class="string">"wx74862e0dfcf69954"</span>);</span><br><span class="line">        params.put(<span class="string">"mch_id"</span>, <span class="string">"1558950191"</span>);</span><br><span class="line">        params.put(<span class="string">"nonce_str"</span>, WXPayUtil.generateNonceStr());</span><br><span class="line">        params.put(<span class="string">"body"</span>, order.getCourseTitle());</span><br><span class="line">        params.put(<span class="string">"out_trade_no"</span>, orderNo);</span><br><span class="line">        params.put(<span class="string">"total_fee"</span>, order.getTotalFee().multiply(<span class="keyword">new</span> BigDecimal(<span class="string">"100"</span>)).longValue()+<span class="string">""</span>);</span><br><span class="line">        params.put(<span class="string">"spbill_create_ip"</span>, <span class="string">"127.0.0.1"</span>);</span><br><span class="line">        params.put(<span class="string">"notify_url"</span>, <span class="string">"http://guli.shop/api/order/weixinPay/weixinNotify\n"</span>);</span><br><span class="line">        params.put(<span class="string">"trade_type"</span>, <span class="string">"NATIVE"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.httpClient请求，传递xml格式参数</span></span><br><span class="line">        HttpClient httpClient = <span class="keyword">new</span> HttpClient(<span class="string">"https://api.mch.weixin.qq.com/pay/unifiedorder"</span>);</span><br><span class="line"></span><br><span class="line">        httpClient.setXmlParam(WXPayUtil.generateSignedXml(params,<span class="string">"T6m9iK73b0kn9g5v426MKfHQH7X8rKwb"</span>));</span><br><span class="line">        httpClient.setHttps(<span class="keyword">true</span>); <span class="comment">//开启支持https访问</span></span><br><span class="line"></span><br><span class="line">        httpClient.post();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.得到发送请求返回的结果</span></span><br><span class="line">        String content = httpClient.getContent(); <span class="comment">//返回xml格式</span></span><br><span class="line"></span><br><span class="line">        Map&lt;String,String&gt; result = WXPayUtil.xmlToMap(content);</span><br><span class="line"></span><br><span class="line">        Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        map.put(<span class="string">"out_trade_no"</span>, orderNo);</span><br><span class="line">        map.put(<span class="string">"course_id"</span>, order.getCourseId());</span><br><span class="line">        map.put(<span class="string">"total_fee"</span>, order.getTotalFee());</span><br><span class="line">        map.put(<span class="string">"result_code"</span>, result.get(<span class="string">"result_code"</span>));</span><br><span class="line">        map.put(<span class="string">"code_url"</span>, result.get(<span class="string">"code_url"</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>,<span class="string">"生成二维码失败"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3、</strong>查询支付状态代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询订单状态</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, String&gt; <span class="title">queryPayStatus</span><span class="params">(String orderNo)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//1、封装参数</span></span><br><span class="line">        Map&lt;String,String&gt; m = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        m.put(<span class="string">"appid"</span>, <span class="string">"wx74862e0dfcf69954"</span>);</span><br><span class="line">        m.put(<span class="string">"mch_id"</span>, <span class="string">"1558950191"</span>);</span><br><span class="line">        m.put(<span class="string">"out_trade_no"</span>, orderNo);</span><br><span class="line">        m.put(<span class="string">"nonce_str"</span>, WXPayUtil.generateNonceStr());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2、设置请求</span></span><br><span class="line">        HttpClient client = <span class="keyword">new</span> HttpClient(<span class="string">"https://api.mch.weixin.qq.com/pay/orderquery"</span>);</span><br><span class="line">        client.setXmlParam(WXPayUtil.generateSignedXml(m, <span class="string">"T6m9iK73b0kn9g5v426MKfHQH7X8rKwb"</span>));</span><br><span class="line">        client.setHttps(<span class="keyword">true</span>);</span><br><span class="line">        client.post();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3、返回第三方的数据</span></span><br><span class="line">        String xml = client.getContent();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//7、转成Map,返回</span></span><br><span class="line">        <span class="keyword">return</span> WXPayUtil.xmlToMap(xml);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这几天先是博客迁移搞了几天又是比赛玩了两天，进度有点慢，现在应该没什么事情了，冲冲冲</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：&lt;/p&gt;
&lt;p&gt;微信支付&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术分享" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="谷粒学院项目" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>电商系统源码分享</title>
    <link href="https://liaotao421.github.io/posts/e0cd336a/"/>
    <id>https://liaotao421.github.io/posts/e0cd336a/</id>
    <published>2020-11-27T07:29:00.000Z</published>
    <updated>2020-12-04T07:15:09.164Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>话不多说，一套模仿京东淘宝的电商系统源码，快来带走吧</p></blockquote><a id="more"></a><p><a href="https://www.bilibili.com/video/BV1qD4y1D7Vw">b站链接</a></p><p><a href="https://github.com/liaotao421/xiruisi">github链接</a></p><p><a href="https://lanzous.com/b00tlwh7c">项目源码</a></p><p><strong>项目为大二工程实践完成项目，说是组队开发实际为一人开发，前端使用<a href="https://github.com/ycf001/youpinngou">黑马品优购界面</a> + javaex框架，后端使用ssm框架，使用短信验证，支付宝沙箱支付等功能吗，现在看来代码写的并不是很好，供学习借鉴指正！</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;话不多说，一套模仿京东淘宝的电商系统源码，快来带走吧&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="资源分享" scheme="https://liaotao421.github.io/categories/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>谷粒学院开发day13</title>
    <link href="https://liaotao421.github.io/posts/5b87471e/"/>
    <id>https://liaotao421.github.io/posts/5b87471e/</id>
    <published>2020-11-23T07:28:04.000Z</published>
    <updated>2020-11-25T15:45:09.478Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：</p><p>微信扫码登录</p></blockquote><a id="more"></a><p><img src="https://i.loli.net/2020/11/18/FVdwictgJeoY4qm.png" alt="image-20201118130243341"></p><h2 id="一、登录前端整合"><a href="#一、登录前端整合" class="headerlink" title="一、登录前端整合"></a>一、登录前端整合</h2><p><img src="https://i.loli.net/2020/11/18/DBVjGa8qrtdisOe.png" alt="image-20201118131003847"></p><h2 id="二、微信扫码登录"><a href="#二、微信扫码登录" class="headerlink" title="二、微信扫码登录"></a>二、微信扫码登录</h2><h3 id="1、OAuth2"><a href="#1、OAuth2" class="headerlink" title="1、OAuth2"></a>1、OAuth2</h3><p>OAuth2是针对特定问题的一种解决方案 OAuth2主要解决两个问题</p><ol><li><p>开放系统间授权 照片拥有者想要在云冲印服务上打印照片，云冲印服务需要访问云存储服务上的资源 <img src="https://i.loli.net/2020/11/18/KYapl3snERfQmbM.jpg" alt="img"></p></li><li><p>分布式访问问题 （单点登录） <img src="https://i.loli.net/2020/11/18/Cwym6JcPhN2FQ7k.png" alt="image-20201118193813408"></p></li></ol><h3 id="2、微信扫码登录"><a href="#2、微信扫码登录" class="headerlink" title="2、微信扫码登录"></a>2、微信扫码登录</h3><p><img src="https://i.loli.net/2020/11/18/BvuMT1zNldRJr8H.png" alt="image-20201118205508930"> <strong>问题：cookie怎么都设置不了</strong> <strong>就离谱</strong> <strong>解决 ： localhost 和 127.0.0.1 在设置cookie domain属性是不一样</strong> 1、申请成为微信开发者 网址：<a href="https://open.weixin.qq.com/">https://open.weixin.qq.com/</a> 添加网站项目，得到相关参数</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">wx:</span></span><br><span class="line">  <span class="attr">open:</span></span><br><span class="line">    <span class="comment"># 微信开放平台 appid</span></span><br><span class="line">    <span class="attr">appid:</span> <span class="string">wxed9954c01bb89b47</span></span><br><span class="line">    <span class="comment"># 微信开放平台 appsecret</span></span><br><span class="line">    <span class="attr">appsecret:</span> <span class="string">a7482517235173ddb4083788de60b90e</span></span><br><span class="line">    <span class="comment"># 微信开放平台 重定向url（guli.shop需要在微信开放平台配置）</span></span><br><span class="line">    <span class="attr">redirecturl:</span> <span class="string">http://guli.shop/api/ucenter/wx/callback</span></span><br></pre></td></tr></table></figure><p>2、显示二维码界面 第三方使用网站应用授权登录前请注意已获取相应网页授权作用域（scope=snsapi_login），则可以通过在PC端打开以下链接： <a href="https://open.weixin.qq.com/connect/qrconnect?appid=APPID&amp;redirect\_uri=REDIRECT\_URI&amp;response\_type=code&amp;scope=SCOPE&amp;state=STATE#wechat\_redirect">https://open.weixin.qq.com/connect/qrconnect?appid=APPID&amp;redirect\_uri=REDIRECT\_URI&amp;response\_type=code&amp;scope=SCOPE&amp;state=STATE#wechat\_redirect</a> 若提示“该链接无法访问”，请检查参数是否填写错误，如redirect_uri的域名与审核时填写的授权域名不一致或scope不为snsapi_login。 <strong>参数说明</strong></p><p>参数</p><p>是否必须</p><p>说明</p><p>appid</p><p>是</p><p>应用唯一标识</p><p>redirect_uri</p><p>是</p><p>请使用urlEncode对链接进行处理</p><p>response_type</p><p>是</p><p>填code</p><p>scope</p><p>是</p><p>应用授权作用域，拥有多个作用域用逗号（,）分隔，网页应用目前仅填写snsapi_login</p><p>state</p><p>否</p><p>用于保持请求和回调的状态，授权请求后原样带回给第三方。该参数可用于防止csrf攻击（跨站请求伪造攻击），建议第三方带上该参数，可设置为简单的随机数加session进行校验</p><p><strong>返回说明</strong> 用户允许授权后，将会重定向到redirect_uri的网址上，并且带上code和state参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redirect_uri?code&#x3D;CODE&amp;state&#x3D;STATE</span><br></pre></td></tr></table></figure><p>若用户禁止授权，则重定向后不会带上code参数，仅会带上state参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redirect_uri?state&#x3D;STATE</span><br></pre></td></tr></table></figure><p>在controller里实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation</span>(<span class="string">"生成微信扫描二维码"</span>)</span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/login"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getWxCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 微信开放平台授权baseUrl</span></span><br><span class="line">    String baseUrl = <span class="string">"https://open.weixin.qq.com/connect/qrconnect"</span> +</span><br><span class="line">        <span class="string">"?appid=%s"</span> +</span><br><span class="line">        <span class="string">"&amp;redirect_uri=%s"</span> +</span><br><span class="line">        <span class="string">"&amp;response_type=code"</span> +</span><br><span class="line">        <span class="string">"&amp;scope=snsapi_login"</span> +</span><br><span class="line">        <span class="string">"&amp;state=%s"</span> +</span><br><span class="line">        <span class="string">"#wechat_redirect"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 回调地址</span></span><br><span class="line">    String redirectUrl = WxConfig.WX_OPEN_REDIRECT_URL; <span class="comment">//获取业务服务器重定向地址</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        redirectUrl = URLEncoder.encode(redirectUrl, <span class="string">"UTF-8"</span>); <span class="comment">//url编码</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>, e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 防止csrf攻击（跨站请求伪造攻击）</span></span><br><span class="line">    <span class="comment">//String state = UUID.randomUUID().toString().replaceAll("-", "");//一般情况下会使用一个随机数</span></span><br><span class="line">    String state = <span class="string">"imhelen"</span>;<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 采用redis等进行缓存state 使用sessionId为key 30分钟后过期，可配置</span></span><br><span class="line">    <span class="comment">//键："wechar-open-state-" + httpServletRequest.getSession().getId()</span></span><br><span class="line">    <span class="comment">//值：satte</span></span><br><span class="line">    <span class="comment">//过期时间：30分钟</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//生成qrcodeUrl</span></span><br><span class="line">    String qrcodeUrl = String.format(</span><br><span class="line">        baseUrl,</span><br><span class="line">        WxConfig.WX_OPEN_APP_ID,</span><br><span class="line">        redirectUrl,</span><br><span class="line">        state);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"redirect:"</span> + qrcodeUrl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、用户扫码后得到用户信息，保存数据库</p><blockquote><p>使用技术httpclient 模拟浏览器发送请求，接收返回值</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> code 类似于手机的验证码，随机唯一，每次不一样</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> state 原样传递</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiOperation</span>(<span class="string">"微信登录回调方法"</span>)</span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/callback"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">callBack</span><span class="params">(String code,String state)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//1.根据code 请求微信api 得到access_token 和openid</span></span><br><span class="line">        <span class="comment">//向认证服务器发送请求换取access_token</span></span><br><span class="line">        String baseAccessTokenUrl = <span class="string">"https://api.weixin.qq.com/sns/oauth2/access_token"</span> +</span><br><span class="line">                <span class="string">"?appid=%s"</span> +</span><br><span class="line">                <span class="string">"&amp;secret=%s"</span> +</span><br><span class="line">                <span class="string">"&amp;code=%s"</span> +</span><br><span class="line">                <span class="string">"&amp;grant_type=authorization_code"</span>;</span><br><span class="line">        <span class="comment">//拼接参数</span></span><br><span class="line">        baseAccessTokenUrl = String.format(baseAccessTokenUrl,</span><br><span class="line">                WxConfig.WX_OPEN_APP_ID,</span><br><span class="line">                WxConfig.WX_OPEN_APP_SECRET,</span><br><span class="line">                code);</span><br><span class="line">        <span class="comment">//请求这个拼接好的地址，得到返回的值</span></span><br><span class="line">        <span class="comment">// ? 如何在程序中请求地址 =》 httpclient</span></span><br><span class="line">        String result = HttpClientUtils.get(baseAccessTokenUrl);</span><br><span class="line">        <span class="comment">//进行json解析</span></span><br><span class="line">        Gson gson = <span class="keyword">new</span> Gson();</span><br><span class="line">        HashMap map = gson.fromJson(result, HashMap<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        String access_token = (String) map.get(<span class="string">"access_token"</span>);</span><br><span class="line">        String openid = (String) map.get(<span class="string">"openid"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断是否需要注册</span></span><br><span class="line">        UcenterMember member = memberService.getOpenIdMember(openid);</span><br><span class="line">        <span class="keyword">if</span> (member == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//再请求微信提供的地址获取扫码人的信息</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//访问微信的资源服务器，获取用户信息</span></span><br><span class="line">            String baseUserInfoUrl = <span class="string">"https://api.weixin.qq.com/sns/userinfo"</span> +</span><br><span class="line">                    <span class="string">"?access_token=%s"</span> +</span><br><span class="line">                    <span class="string">"&amp;openid=%s"</span>;</span><br><span class="line">            String userInfoUrl = String.format(baseUserInfoUrl, access_token, openid);</span><br><span class="line"></span><br><span class="line">            String resultUserInfo = <span class="keyword">null</span>;</span><br><span class="line">            resultUserInfo = HttpClientUtils.get(userInfoUrl);</span><br><span class="line">            <span class="comment">//解析json</span></span><br><span class="line">            HashMap mapUserInfo = gson.fromJson(resultUserInfo, HashMap<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            String nickname = (String)mapUserInfo.get(<span class="string">"nickname"</span>); <span class="comment">//昵称</span></span><br><span class="line">            String headimgurl = (String)mapUserInfo.get(<span class="string">"headimgurl"</span>); <span class="comment">//头像</span></span><br><span class="line">            <span class="comment">//自动注册</span></span><br><span class="line">            member = <span class="keyword">new</span> UcenterMember();</span><br><span class="line">            member.setOpenid(openid);</span><br><span class="line">            member.setAvatar(headimgurl);</span><br><span class="line">            member.setNickname(nickname);</span><br><span class="line">            memberService.save(member);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//cookie存放用户信息 （X）</span></span><br><span class="line">        <span class="comment">//问题：cookie无法实现跨域</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据微信信息使用jwt生成token，把token字符串传递到首页面</span></span><br><span class="line">        String token = JwtUtils.getJwtToken(member.getId(), member.getNickname());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:http://localhost:3000?token="</span> + token;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>,e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、QQ扫码登录"><a href="#三、QQ扫码登录" class="headerlink" title="三、QQ扫码登录"></a>三、QQ扫码登录</h2><p>审核成为腾讯开发者，回头再添加这个功能 过了几天，这审核也太慢了，回头再说吧 过了几天，审核给我拒绝了，算了，不搞这个功能了</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：&lt;/p&gt;
&lt;p&gt;微信扫码登录&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术分享" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="谷粒学院项目" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>谷粒学院开发day14</title>
    <link href="https://liaotao421.github.io/posts/c5e3d2bd/"/>
    <id>https://liaotao421.github.io/posts/c5e3d2bd/</id>
    <published>2020-11-22T07:28:38.000Z</published>
    <updated>2020-11-25T15:45:29.708Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：</p><p>阿里云视频播放器整合</p><p>项目开发</p></blockquote><a id="more"></a><p><img src="https://i.loli.net/2020/11/19/PLvHat8ukRwSZNo.png" alt="image-20201119152200748"></p><h2 id="一、名师-列表-详情"><a href="#一、名师-列表-详情" class="headerlink" title="一、名师 列表 详情"></a>一、名师 列表 详情</h2><p>正常的开发流程 后端接口 - 前端调用 - 数据展示</p><h2 id="二、课程-列表-详情"><a href="#二、课程-列表-详情" class="headerlink" title="二、课程 列表 详情"></a>二、课程 列表 详情</h2><p>正常的开发流程 后端接口 - 前端调用 - 数据展示</p><h2 id="三、阿里云视频播放器"><a href="#三、阿里云视频播放器" class="headerlink" title="三、阿里云视频播放器"></a>三、阿里云视频播放器</h2><p>参考文档：<a href="https://help.aliyun.com/document\_detail/51991.html">https://help.aliyun.com/document\_detail/51991.html</a> 参考 【<strong>播放器简单使用说明】</strong>一节 引入脚本文件和css文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;g.alicdn.com&#x2F;de&#x2F;prismplayer&#x2F;2.8.1&#x2F;skins&#x2F;default&#x2F;aliplayer-min.css&quot; &#x2F;&gt;</span><br><span class="line">&lt;script charset&#x3D;&quot;utf-8&quot; type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;https:&#x2F;&#x2F;g.alicdn.com&#x2F;de&#x2F;prismplayer&#x2F;2.8.1&#x2F;aliplayer-min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>初始化视频播放器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div  class&#x3D;&quot;prism-player&quot; id&#x3D;&quot;J_prismPlayer&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var player &#x3D; new Aliplayer(&#123;</span><br><span class="line">            id: &#39;J_prismPlayer&#39;,</span><br><span class="line">            width: &#39;100%&#39;,</span><br><span class="line">            autoplay: false,</span><br><span class="line">            cover: &#39;http:&#x2F;&#x2F;liveroom-img.oss-cn-qingdao.aliyuncs.com&#x2F;logo.png&#39;,  </span><br><span class="line">            &#x2F;&#x2F;播放配置</span><br><span class="line">        &#125;,function(player)&#123;</span><br><span class="line">            console.log(&#39;播放器创建好了。&#39;)</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure><p><strong>播放地址播放</strong>： 在Aliplayer的配置参数中添加如下属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//播放方式一：支持播放地址播放,此播放优先级最高，此种方式不能播放加密视频</span></span><br><span class="line">source : <span class="string">'你的视频播放地址'</span>,</span><br></pre></td></tr></table></figure><p>启动浏览器运行，测试视频的播放 <strong>播放凭证播放：</strong> 阿里云播放器支持通过播放凭证自动换取播放地址进行播放，接入方式更为简单，且安全性更高。播放凭证默认时效为100秒（最大为3000秒），只能用于获取指定视频的播放地址，不能混用或重复使用。如果凭证过期则无法获取播放地址，需要重新获取凭证。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">encryptType:<span class="string">'1'</span>,<span class="comment">//如果播放加密视频，则需设置encryptType=1，非加密视频无需设置此项</span></span><br><span class="line">vid : <span class="string">'视频id'</span>,</span><br><span class="line">playauth : <span class="string">'视频授权码'</span>,</span><br></pre></td></tr></table></figure><p>注意：播放凭证有过期时间，默认值：100秒 。取值范围：<strong>100~3000</strong>。 设置播放凭证的有效期 在获取播放凭证的测试用例中添加如下代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.setAuthInfoTimeout(<span class="number">200L</span>);</span><br></pre></td></tr></table></figure><p>在线配置参考：<a href="https://player.alicdn.com/aliplayer/setting/setting.html?spm=a2c4g.11186623.2.16.242c6782Kdc4Za">https://player.alicdn.com/aliplayer/setting/setting.html</a></p><blockquote><p>发现播放凭证播放会报错</p></blockquote><p><img src="https://i.loli.net/2020/11/23/G4TNAPDLIU5yYrQ.png" alt="image-20201123123336462"> 查询官方文档得知可能是转码加密的问题 解决： 上传时不使用加密模板，只是在HTML里没有显示的写上播放地址，而是使用id和auth获取，防止盗链</p><blockquote><p>created里赋给data的值在mounted里取不到</p></blockquote><p>watch函数 解决这个问题</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> vod <span class="keyword">from</span> <span class="string">'@/api/vod'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    layout: <span class="string">'video'</span>,<span class="comment">//应用video布局</span></span><br><span class="line">    data()&#123;</span><br><span class="line">        <span class="keyword">return</span>&#123;</span><br><span class="line">            videoId:<span class="string">''</span>,</span><br><span class="line">            auth:<span class="string">''</span>,</span><br><span class="line">            flag:<span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    created() &#123;</span><br><span class="line">        <span class="keyword">this</span>.videoId = <span class="keyword">this</span>.$route.params.vid</span><br><span class="line">        <span class="keyword">this</span>.getAuth()</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    watch:&#123;</span><br><span class="line">        auth(newName, oldName) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'auth= '</span> + <span class="keyword">this</span>.auth);</span><br><span class="line">            <span class="keyword">var</span> player = <span class="keyword">new</span> Aliplayer(&#123;</span><br><span class="line">            <span class="string">"id"</span>: <span class="string">"player-con"</span>,</span><br><span class="line">            <span class="string">"vid"</span>: <span class="keyword">this</span>.videoId,</span><br><span class="line">            <span class="string">"playauth"</span>: <span class="keyword">this</span>.auth,</span><br><span class="line">            <span class="string">"qualitySort"</span>: <span class="string">"asc"</span>,</span><br><span class="line">            <span class="string">"format"</span>: <span class="string">"mp4"</span>,</span><br><span class="line">            <span class="string">"mediaType"</span>: <span class="string">"video"</span>,</span><br><span class="line">            <span class="string">"width"</span>: <span class="string">"100%"</span>,</span><br><span class="line">            <span class="string">"height"</span>: <span class="string">"500px"</span>,</span><br><span class="line">            <span class="string">"autoplay"</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">"isLive"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"rePlay"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"playsinline"</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">"preload"</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">"controlBarVisibility"</span>: <span class="string">"hover"</span>,</span><br><span class="line">            <span class="string">"useH5Prism"</span>: <span class="literal">true</span></span><br><span class="line">                &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">player</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">"The player is created"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            );  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    methods:&#123;</span><br><span class="line">        getAuth() &#123;</span><br><span class="line">            vod.getPlayAuth(<span class="keyword">this</span>.videoId)</span><br><span class="line">                .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">this</span>.auth = response.data.data.auth</span><br><span class="line">                    <span class="keyword">this</span>.flag = <span class="literal">true</span></span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：&lt;/p&gt;
&lt;p&gt;阿里云视频播放器整合&lt;/p&gt;
&lt;p&gt;项目开发&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术分享" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="谷粒学院项目" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>谷粒学院开发day12</title>
    <link href="https://liaotao421.github.io/posts/2c807788/"/>
    <id>https://liaotao421.github.io/posts/2c807788/</id>
    <published>2020-11-17T14:44:45.000Z</published>
    <updated>2020-11-30T07:05:05.014Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：</p><p>单点登录</p><p>阿里云短信服务</p></blockquote><a id="more"></a><p><img src="https://i.loli.net/2020/11/16/vIjk9S5CxDr8eiO.png" alt="image-20201116191037824"></p><h2 id="一、用户登录业务介绍"><a href="#一、用户登录业务介绍" class="headerlink" title="一、用户登录业务介绍"></a>一、用户登录业务介绍</h2><h3 id="1、单一服务器模式"><a href="#1、单一服务器模式" class="headerlink" title="1、单一服务器模式"></a>1、单一服务器模式</h3><p><img src="https://i.loli.net/2020/11/16/2RPbAjoz9sNDFvi.gif" alt="img"> 前面web项目的开发使用这种模式，将用户登录信息存储在session，登录成功将用户信息存在session，根据session里的用户信息判断用户是否登录</p><h3 id="2、集群部署"><a href="#2、集群部署" class="headerlink" title="2、集群部署"></a>2、集群部署</h3><p><img src="https://i.loli.net/2020/11/16/jamTbrM2I6ovtLO.png" alt="image-20201116192140898"> 此时显然不能使用session <strong>单点登录（single sign on，SSO）</strong> 单点登录常见三种方式</p><ol><li>session广播机制 – session复制</li><li>cookie + redis实现 <img src="https://i.loli.net/2020/11/16/Oz9AFpZXfIoK41s.png" alt="image-20201116194236390"></li><li>token实现 <strong>项目选用token实现</strong></li></ol><p>token是什么？ 按照一定的规则生成的字符串，生成字符串里包含用户信息 <img src="https://i.loli.net/2020/11/16/gHwDkI2oPBeR3Sr.gif" alt="img"> <img src="https://i.loli.net/2020/11/16/9FpoK1LyPfOV5vD.png" alt="image-20201116195202885"></p><h2 id="二、JWT"><a href="#二、JWT" class="headerlink" title="二、JWT"></a>二、JWT</h2><h3 id="1、什么是jwt"><a href="#1、什么是jwt" class="headerlink" title="1、什么是jwt"></a>1、什么是jwt</h3><p><img src="https://i.loli.net/2020/11/16/NmGp37zYvAQ1hW9.png" alt="image-20201116200013151"> 典型的，一个JWT看起来如下图： <img src="https://i.loli.net/2020/11/16/yu5BMwNLYFKXi6C.png" alt="img"> 该对象为一个很长的字符串，字符之间通过”.”分隔符分为三个子串。 每一个子串表示了一个功能块，总共有以下三个部分：JWT头、有效载荷和签名 <strong>JWT头</strong> JWT头部分是一个描述JWT元数据的JSON对象，通常如下所示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;alg&quot;: &quot;HS256&quot;,</span><br><span class="line">  &quot;typ&quot;: &quot;JWT&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上面的代码中，alg属性表示签名使用的算法，默认为HMAC SHA256（写为HS256）；typ属性表示令牌的类型，JWT令牌统一写为JWT。最后，使用Base64 URL算法将上述JSON对象转换为字符串保存。 <strong>有效载荷</strong> 有效载荷部分，是JWT的主体内容部分，也是一个JSON对象，包含需要传递的数据。 JWT指定七个默认字段供选择。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">iss：发行人</span><br><span class="line">exp：到期时间</span><br><span class="line">sub：主题</span><br><span class="line">aud：用户</span><br><span class="line">nbf：在此之前不可用</span><br><span class="line">iat：发布时间</span><br><span class="line">jti：JWT ID用于标识该JWT</span><br></pre></td></tr></table></figure><p>除以上默认字段外，我们还可以自定义私有字段，如下例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;sub&quot;: &quot;1234567890&quot;,</span><br><span class="line">  &quot;name&quot;: &quot;Helen&quot;,</span><br><span class="line">  &quot;admin&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请注意，默认情况下JWT是未加密的，任何人都可以解读其内容，因此不要构建隐私信息字段，存放保密信息，以防止信息泄露。 JSON对象也使用Base64 URL算法转换为字符串保存。 <strong>签名哈希</strong> 签名哈希部分是对上面两部分数据签名，通过指定的算法生成哈希，以确保数据不会被篡改。 首先，需要指定一个密码（secret）。该密码仅仅为保存在服务器中，并且不能向用户公开。然后，使用标头中指定的签名算法（默认情况下为HMAC SHA256）根据以下公式生成签名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HMACSHA256(base64UrlEncode(header) + &quot;.&quot; + base64UrlEncode(claims), secret)</span><br></pre></td></tr></table></figure><p>在计算出签名哈希后，JWT头，有效载荷和签名哈希的三个部分组合成一个字符串，每个部分用”.”分隔，就构成整个JWT对象。 <strong>Base64URL算法</strong> 如前所述，JWT头和有效载荷序列化的算法都用到了Base64URL。该算法和常见Base64算法类似，稍有差别。 作为令牌的JWT可以放在URL中（例如api.example/?token=xxx）。 Base64中用的三个字符是”+”，”/“和”=”，由于在URL中有特殊含义，因此Base64URL中对他们做了替换：”=”去掉，”+”用”-“替换，”/“用”_“替换，这就是Base64URL算法。</p><h3 id="2、项目中使用jwt"><a href="#2、项目中使用jwt" class="headerlink" title="2、项目中使用jwt"></a>2、项目中使用jwt</h3><p>1、引入依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- JWT--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.jsonwebtoken&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jjwt&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>2、复制工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyfwlp.servicebase.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.Claims;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.Jws;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.Jwts;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.SignatureAlgorithm;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> helen</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2019/10/16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JwtUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//常量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> EXPIRE = <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>; <span class="comment">//设置token过期时间</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String APP_SECRET = <span class="string">"ukc8BDbRigUDaY6pZFfWus2jZWLPHO"</span>; <span class="comment">//秘钥</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getJwtToken</span><span class="params">(String id, String nickname)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        String JwtToken = Jwts.builder()</span><br><span class="line">                .setHeaderParam(<span class="string">"typ"</span>, <span class="string">"JWT"</span>)</span><br><span class="line">                .setHeaderParam(<span class="string">"alg"</span>, <span class="string">"HS256"</span>)</span><br><span class="line">                .setSubject(<span class="string">"guli-user"</span>)</span><br><span class="line">                .setIssuedAt(<span class="keyword">new</span> Date())</span><br><span class="line">                .setExpiration(<span class="keyword">new</span> Date(System.currentTimeMillis() + EXPIRE))</span><br><span class="line">                .claim(<span class="string">"id"</span>, id)</span><br><span class="line">                .claim(<span class="string">"nickname"</span>, nickname)</span><br><span class="line">                .signWith(SignatureAlgorithm.HS256, APP_SECRET)</span><br><span class="line">                .compact();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> JwtToken;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断token是否存在与有效</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jwtToken</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">checkToken</span><span class="params">(String jwtToken)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isEmpty(jwtToken)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Jwts.parser().setSigningKey(APP_SECRET).parseClaimsJws(jwtToken);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断token是否存在与有效</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">checkToken</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String jwtToken = request.getHeader(<span class="string">"token"</span>);</span><br><span class="line">            <span class="keyword">if</span>(StringUtils.isEmpty(jwtToken)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            Jwts.parser().setSigningKey(APP_SECRET).parseClaimsJws(jwtToken);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据token获取会员id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getMemberIdByJwtToken</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        String jwtToken = request.getHeader(<span class="string">"token"</span>);</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isEmpty(jwtToken)) <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        Jws&lt;Claims&gt; claimsJws = Jwts.parser().setSigningKey(APP_SECRET).parseClaimsJws(jwtToken);</span><br><span class="line">        Claims claims = claimsJws.getBody();</span><br><span class="line">        <span class="keyword">return</span> (String)claims.get(<span class="string">"id"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、阿里云短息服务"><a href="#三、阿里云短息服务" class="headerlink" title="三、阿里云短息服务"></a>三、阿里云短息服务</h2><p>申请<strong>模板</strong>与<strong>签名</strong> <a href="https://help.aliyun.com/product/44282.html?spm=5176.10629532.0.0.38311cbeYzBm73">官方文档</a> <strong>1、引入依赖</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;fastjson&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.aliyun&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;aliyun-java-sdk-core&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure><p><strong>2、发送短信方法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//发送短信方法</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Boolean <span class="title">send</span><span class="params">(Map&lt;String, Object&gt; param, String phone)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(StringUtils.isEmpty(phone)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    DefaultProfile profile =</span><br><span class="line">        DefaultProfile.getProfile(<span class="string">"default"</span>, <span class="string">"LTAI4G7UBH87zGL5jp5sbX"</span>, <span class="string">"0J5xk6K0ftTbyrqlJq7iEt4KJm7T"</span>);</span><br><span class="line">    IAcsClient client = <span class="keyword">new</span> DefaultAcsClient(profile);</span><br><span class="line"></span><br><span class="line">    CommonRequest request = <span class="keyword">new</span> CommonRequest();</span><br><span class="line">    <span class="comment">//request.setProtocol(ProtocolType.HTTPS);</span></span><br><span class="line">    request.setMethod(MethodType.POST);</span><br><span class="line">    request.setDomain(<span class="string">"dysmsapi.aliyuncs.com"</span>);</span><br><span class="line">    request.setVersion(<span class="string">"2017-05-25"</span>);</span><br><span class="line">    request.setAction(<span class="string">"SendSms"</span>);</span><br><span class="line"></span><br><span class="line">    request.putQueryParameter(<span class="string">"PhoneNumbers"</span>, phone);</span><br><span class="line">    request.putQueryParameter(<span class="string">"SignName"</span>, <span class="string">"cyfwlp在线教育网站"</span>);</span><br><span class="line">    request.putQueryParameter(<span class="string">"TemplateCode"</span>, <span class="string">"SMS_205473183"</span>);</span><br><span class="line">    request.putQueryParameter(<span class="string">"TemplateParam"</span>, JSONObject.toJSONString(param));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        CommonResponse response = client.getCommonResponse(request);</span><br><span class="line">        System.out.println(response.getData());</span><br><span class="line">        <span class="keyword">return</span> response.getHttpResponse().isSuccess();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ClientException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3、redis解决验证码有效时间问题</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation</span>(<span class="string">"发送短信方法"</span>)</span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/sendSms/&#123;phone&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">sendSms</span><span class="params">(@PathVariable String phone)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//1.redis获取验证码，获取到直接返回</span></span><br><span class="line">    String code = redisTemplate.opsForValue().get(<span class="string">"phone"</span>);</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(code)) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//生成随机验证码</span></span><br><span class="line">    code = RandomUtil.getFourBitRandom();</span><br><span class="line">    Map&lt;String,Object&gt; param = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    param.put(<span class="string">"code"</span>,code);</span><br><span class="line">    <span class="comment">//调用service方法发送短信</span></span><br><span class="line">    Boolean isSend = smsService.send(param,phone);</span><br><span class="line">    <span class="keyword">if</span> (isSend) &#123;</span><br><span class="line">        <span class="comment">//发送成功，将发送成功的验证码放到redis，同时设置有效时间</span></span><br><span class="line">        redisTemplate.opsForValue().set(<span class="string">"phone"</span>,code,<span class="number">5</span>, TimeUnit.MINUTES);</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error().message(<span class="string">"短信发送失败"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：&lt;/p&gt;
&lt;p&gt;单点登录&lt;/p&gt;
&lt;p&gt;阿里云短信服务&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术分享" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="谷粒学院项目" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>谷粒学院开发day11</title>
    <link href="https://liaotao421.github.io/posts/b5892632/"/>
    <id>https://liaotao421.github.io/posts/b5892632/</id>
    <published>2020-11-16T11:10:12.000Z</published>
    <updated>2020-11-25T15:44:25.909Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：</p><p>nuxt</p><p>项目开发</p></blockquote><a id="more"></a><p><img src="https://i.loli.net/2020/11/15/3tYh5HRFSnMoiKl.png" alt="image-20201115124025622"></p><h2 id="一、前台环境搭建-NUXT（读音-纳斯特）"><a href="#一、前台环境搭建-NUXT（读音-纳斯特）" class="headerlink" title="一、前台环境搭建 NUXT（读音 纳斯特）"></a>一、前台环境搭建 NUXT（读音 纳斯特）</h2><h3 id="1、什么是服务端渲染"><a href="#1、什么是服务端渲染" class="headerlink" title="1、什么是服务端渲染"></a>1、什么是服务端渲染</h3><p>服务端渲染又称SSR (Server Side Render)是在服务端完成页面的内容，而不是在客户端通过AJAX获取数据。 服务器端渲染(SSR)的优势主要在于：<strong>更好的 SEO</strong>，由于搜索引擎爬虫抓取工具可以直接查看完全渲染的页面。 如果你的应用程序初始展示 loading 菊花图，然后通过 Ajax 获取内容，抓取工具并不会等待异步完成后再进行页面内容的抓取。也就是说，如果 SEO 对你的站点至关重要，而你的页面又是异步获取内容，则你可能需要服务器端渲染(SSR)解决此问题。 另外，使用服务器端渲染，我们可以获得更快的内容到达时间(time-to-content)，无需等待所有的 JavaScript 都完成下载并执行，产生更好的用户体验，对于那些「内容到达时间(time-to-content)与转化率直接相关」的应用程序而言，服务器端渲染(SSR)至关重要。 <img src="https://i.loli.net/2020/11/15/6XJQoGNBi2AcHCq.png" alt="image-20201115125606658"></p><h3 id="2、NUXT"><a href="#2、NUXT" class="headerlink" title="2、NUXT"></a>2、NUXT</h3><p><img src="https://i.loli.net/2020/11/15/XRvzYrVcEDbNmyQ.png" alt="image-20201115185127474"> 项目启动报错：关闭eslintrc</p><h2 id="二、redis缓存"><a href="#二、redis缓存" class="headerlink" title="二、redis缓存"></a>二、redis缓存</h2><h3 id="1、redis简介"><a href="#1、redis简介" class="headerlink" title="1、redis简介"></a>1、redis简介</h3><p>Redis是当前比较热门的NOSQL系统之一，它是一个开源的使用ANSI c语言编写的key-value存储系统（区别于MySQL的二维表格的形式存储。）。和Memcache类似，但很大程度补偿了Memcache的不足。和Memcache一样，Redis数据都是缓存在计算机内存中，不同的是，Memcache只能将数据缓存到内存中，无法自动定期写入硬盘，这就表示，一断电或重启，内存清空，数据丢失。所以Memcache的应用场景适用于缓存无需持久化的数据。而Redis不同的是它会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，实现数据的持久化。 Redis的特点： 1，Redis读取的速度是110000次/s，写的速度是81000次/s； 2，原子 。Redis的所有操作都是原子性的，同时Redis还支持对几个操作全并后的原子性执行。 3，支持多种数据结构：string（字符串）；list（列表）；hash（哈希），set（集合）；zset(有序集合) 4，持久化，集群部署 5，支持过期时间，支持事务，消息订阅</p><h3 id="2、项目集成"><a href="#2、项目集成" class="headerlink" title="2、项目集成"></a>2、项目集成</h3><p><strong>缓存注解</strong> <strong>（1）缓存@Cacheable</strong> 根据方法对其返回结果进行缓存，下次请求时，如果缓存存在，则直接读取缓存数据返回；如果缓存不存在，则执行方法，并把返回的结果存入缓存中。一般用在查询方法上。一般用在<strong>查询</strong>方法上 查看源码，属性值如下：</p><p><strong>属性/方法名</strong></p><p><strong>解释</strong></p><p>value</p><p>缓存名，必填，它指定了你的缓存存放在哪块命名空间</p><p>cacheNames</p><p>与 value 差不多，二选一即可</p><p>key</p><p>可选属性，可以使用 SpEL 标签自定义缓存的key</p><p><strong>（2）缓存@CachePut</strong> 使用该注解标志的方法，每次都会执行，并将结果存入指定的缓存中。其他方法可以直接从响应的缓存中读取缓存数据，而不需要再去查询数据库。一般用在<strong>新增方法上</strong>。 查看源码，属性值如下：</p><p><strong>属性/方法名</strong></p><p><strong>解释</strong></p><p>value</p><p>缓存名，必填，它指定了你的缓存存放在哪块命名空间</p><p>cacheNames</p><p>与 value 差不多，二选一即可</p><p>key</p><p>可选属性，可以使用 SpEL 标签自定义缓存的key</p><p><strong>（3）缓存@CacheEvict</strong> 使用该注解标志的方法，会清空指定的缓存。一般用在<strong>更新或者删除</strong>方法上 查看源码，属性值如下：</p><p><strong>属性/方法名</strong></p><p><strong>解释</strong></p><p>value</p><p>缓存名，必填，它指定了你的缓存存放在哪块命名空间</p><p>cacheNames</p><p>与 value 差不多，二选一即可</p><p>key</p><p>可选属性，可以使用 SpEL 标签自定义缓存的key</p><p>allEntries</p><p>是否清空所有缓存，默认为 false。如果指定为 true，则方法调用后将立即清空所有的缓存</p><p>beforeInvocation</p><p>是否在方法执行前就清空，默认为 false。如果指定为 true，则在方法执行前就会清空缓存</p><p><strong>1、添加依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- redis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- spring2.X集成redis所需common-pool2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-pool2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>2、编写配置类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableCaching</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisConfig</span> <span class="keyword">extends</span> <span class="title">CachingConfigurerSupport</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="title">redisTemplate</span><span class="params">(RedisConnectionFactory factory)</span> </span>&#123;</span><br><span class="line">        RedisTemplate&lt;String, Object&gt; template = <span class="keyword">new</span> RedisTemplate&lt;&gt;();</span><br><span class="line">        RedisSerializer&lt;String&gt; redisSerializer = <span class="keyword">new</span> StringRedisSerializer();</span><br><span class="line">        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer(Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span><br><span class="line">        jackson2JsonRedisSerializer.setObjectMapper(om);</span><br><span class="line">        template.setConnectionFactory(factory);</span><br><span class="line">        <span class="comment">//key序列化方式</span></span><br><span class="line">        template.setKeySerializer(redisSerializer);</span><br><span class="line">        <span class="comment">//value序列化</span></span><br><span class="line">        template.setValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        <span class="comment">//value hashmap序列化</span></span><br><span class="line">        template.setHashValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        <span class="keyword">return</span> template;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CacheManager <span class="title">cacheManager</span><span class="params">(RedisConnectionFactory factory)</span> </span>&#123;</span><br><span class="line">        RedisSerializer&lt;String&gt; redisSerializer = <span class="keyword">new</span> StringRedisSerializer();</span><br><span class="line">        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer(Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">//解决查询缓存转换异常的问题</span></span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span><br><span class="line">        jackson2JsonRedisSerializer.setObjectMapper(om);</span><br><span class="line">        <span class="comment">// 配置序列化（解决乱码的问题）,过期时间600秒</span></span><br><span class="line">        RedisCacheConfiguration config = RedisCacheConfiguration.defaultCacheConfig()</span><br><span class="line">                .entryTtl(Duration.ofSeconds(<span class="number">600</span>))</span><br><span class="line">              .serializeKeysWith(RedisSerializationContext.SerializationPair.fromSerializer(redisSerializer))</span><br><span class="line">                .serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(jackson2JsonRedisSerializer))</span><br><span class="line">                .disableCachingNullValues();</span><br><span class="line">        RedisCacheManager cacheManager = RedisCacheManager.builder(factory)</span><br><span class="line">                .cacheDefaults(config)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">return</span> cacheManager;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3、启动redis服务</strong> windows:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server redis.windows.conf</span><br></pre></td></tr></table></figure><p>点击redis-cli.exe <strong>4、redis配置</strong> application.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.redis.host</span>=<span class="string">192.168.44.132</span></span><br><span class="line"><span class="meta">spring.redis.port</span>=<span class="string">6379</span></span><br><span class="line"><span class="meta">spring.redis.database</span>= <span class="string">0</span></span><br><span class="line"><span class="meta">spring.redis.timeout</span>=<span class="string">1800000</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.redis.lettuce.pool.max-active</span>=<span class="string">20</span></span><br><span class="line"><span class="meta">spring.redis.lettuce.pool.max-wait</span>=<span class="string">-1</span></span><br><span class="line"><span class="comment">#最大阻塞等待时间(负数表示没限制)</span></span><br><span class="line"><span class="meta">spring.redis.lettuce.pool.max-idle</span>=<span class="string">5</span></span><br><span class="line"><span class="meta">spring.redis.lettuce.pool.min-idle</span>=<span class="string">0</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：&lt;/p&gt;
&lt;p&gt;nuxt&lt;/p&gt;
&lt;p&gt;项目开发&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术分享" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="谷粒学院项目" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>谷粒学院开发day10</title>
    <link href="https://liaotao421.github.io/posts/c28e16a4/"/>
    <id>https://liaotao421.github.io/posts/c28e16a4/</id>
    <published>2020-11-15T12:11:34.000Z</published>
    <updated>2020-11-25T15:44:07.969Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：</p><p>springCloud</p><p>nacos</p><p>feign</p><p>hysrix</p></blockquote><a id="more"></a><p><img src="https://i.loli.net/2020/11/12/FXNAzlGn6BrRuVs.png" alt="image-20201112185212241"></p><h2 id="一、springCloud"><a href="#一、springCloud" class="headerlink" title="一、springCloud"></a>一、springCloud</h2><h3 id="1、什么是微服务"><a href="#1、什么是微服务" class="headerlink" title="1、什么是微服务"></a>1、什么是微服务</h3><ol><li>微服务是一种架构风格</li><li>把一个项目拆分成独立的多个服务 有多个服务 多服务独立运行 每个服务占用独立进程</li></ol><h3 id="2、为什么使用微服务"><a href="#2、为什么使用微服务" class="headerlink" title="2、为什么使用微服务"></a>2、为什么使用微服务</h3><p> 在传统的IT行业软件大多都是各种独立系统的堆砌，这些系统的问题总结来说就是扩展性差，可靠性不高，维护成本高。到后面引入了SOA服务化，但是，由于 SOA 早期均使用了总线模式，这种总线模式是与某种技术栈强绑定的，比如：J2EE。这导致很多企业的遗留系统很难对接，切换时间太长，成本太高，新系统稳定性的收敛也需要一些时间。</p><h3 id="3、微服务与单体架构区别"><a href="#3、微服务与单体架构区别" class="headerlink" title="3、微服务与单体架构区别"></a>3、微服务与单体架构区别</h3><p>（1）单体架构所有的模块全都耦合在一块，代码量大，维护困难。 ​ 微服务每个模块就相当于一个单独的项目，代码量明显减少，遇到问题也相对来说比较好解决。 （2）单体架构所有的模块都共用一个数据库，存储方式比较单一。 ​ 微服务每个模块都可以使用不同的存储方式（比如有的用redis，有的用mysql等），数据库也是单个模块对应自己的数据库。 （3）单体架构所有的模块开发所使用的技术一样。 ​ 微服务每个模块都可以使用不同的开发技术，开发模式更灵活。</p><h3 id="4、什么是springcloud"><a href="#4、什么是springcloud" class="headerlink" title="4、什么是springcloud"></a>4、什么是springcloud</h3><ol><li>springcloud 并不是一种技术，很多技术的集合，总称</li><li>springcloud中有很多框架（技术），我们使用springcloud里面这些框架技术实现微服务</li><li>使用springcloud依赖springboot</li></ol><h3 id="5、springcloud相关基础服务组件（后续都会学习）"><a href="#5、springcloud相关基础服务组件（后续都会学习）" class="headerlink" title="5、springcloud相关基础服务组件（后续都会学习）"></a>5、springcloud相关基础服务组件（后续都会学习）</h3><p>服务发现——Netflix Eureka （Nacos） 服务调用——Netflix Feign 熔断器——Netflix Hystrix 服务网关——Spring Cloud GateWay 分布式配置——Spring Cloud Config （Nacos） 消息总线 —— Spring Cloud Bus （Nacos）</p><h2 id="二、服务发现-搭建Nacos服务"><a href="#二、服务发现-搭建Nacos服务" class="headerlink" title="二、服务发现 搭建Nacos服务"></a>二、服务发现 搭建Nacos服务</h2><p><img src="https://i.loli.net/2020/11/12/4xI1skz25ilLaAX.png" alt="image-20201112202445788"></p><h3 id="1、什么是Nacos"><a href="#1、什么是Nacos" class="headerlink" title="1、什么是Nacos"></a>1、什么是Nacos</h3><p>阿里巴巴，开源项目，构建云原生应用的动态服务发现、配置管理和服务管理平台 项目中<strong>注册中心</strong> 使用nacos替代原生的 Eureka</p><h3 id="2、Nacos流程"><a href="#2、Nacos流程" class="headerlink" title="2、Nacos流程"></a>2、Nacos流程</h3><p><img src="https://i.loli.net/2020/11/12/yVCg7UwGXRjxPLo.png" alt="image-20201112203844454"></p><h3 id="3、服务注册"><a href="#3、服务注册" class="headerlink" title="3、服务注册"></a>3、服务注册</h3><p><strong>service父模块添加依赖</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p><strong>添加服务配置关系</strong></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#nacos服务地址</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.discovery.server-addr</span>=<span class="string">127.0.0.1:8848</span></span><br></pre></td></tr></table></figure><p><strong>启动类添加注解</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br></pre></td></tr></table></figure><h2 id="三、服务调用-Feign"><a href="#三、服务调用-Feign" class="headerlink" title="三、服务调用 Feign"></a>三、服务调用 Feign</h2><h3 id="1、Feign"><a href="#1、Feign" class="headerlink" title="1、Feign"></a>1、Feign</h3><ul><li>Feign是Netflix开发的声明式、模板化的HTTP客户端， Feign可以帮助我们更快捷、优雅地调用HTTP API。</li><li>Feign支持多种注解，例如Feign自带的注解或者JAX-RS注解等。</li><li>Spring Cloud对Feign进行了增强，使Feign支持了Spring MVC注解，并整合了Ribbon和Eureka，从而让Feign的使用更加方便。</li><li>Spring Cloud Feign是基于Netflix feign实现，整合了Spring Cloud Ribbon和Spring Cloud Hystrix，除了提供这两者的强大功能外，还提供了一种声明式的Web服务客户端定义的方式。</li><li>Spring Cloud Feign帮助我们定义和实现依赖服务接口的定义。在Spring Cloud feign的实现下，只需要创建一个接口并用注解方式配置它，即可完成服务提供方的接口绑定，简化了在使用Spring Cloud Ribbon时自行封装服务调用客户端的开发量。</li></ul><h3 id="2、服务调用"><a href="#2、服务调用" class="headerlink" title="2、服务调用"></a>2、服务调用</h3><p><strong>service父模块添加依赖</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--服务调用--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-openfeign&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p><strong>调用端启动类添加注解</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableFeignClients</span></span><br></pre></td></tr></table></figure><p><strong>创建包和接口</strong> 创建client包 @FeignClient注解用于指定从哪个服务中调用功能 ，名称与被调用的服务名保持一致。 @Component注解防止，在其他位置注入CodClient时idea报错 <strong>@PathVariable注解一定要指定参数名称，否则出错</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@FeignClient</span>(<span class="string">"service-vod"</span>)</span><br><span class="line"><span class="comment">//远程调用</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">VodClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义要调用方法的路径</span></span><br><span class="line">    <span class="meta">@DeleteMapping</span>(<span class="string">"/eduvod/video/deleteVideo/&#123;videoId&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">deleteVideoById</span><span class="params">(@PathVariable(<span class="string">"videoId"</span>)</span> String videoId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>在使用的地方注入接口调用方法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> VodClient vodClient;</span><br></pre></td></tr></table></figure><h2 id="四、熔断器"><a href="#四、熔断器" class="headerlink" title="四、熔断器"></a>四、熔断器</h2><h3 id="1、Spring-Cloud调用接口过程"><a href="#1、Spring-Cloud调用接口过程" class="headerlink" title="1、Spring Cloud调用接口过程"></a>1、Spring Cloud调用接口过程</h3><p><img src="https://i.loli.net/2020/11/15/jnltrOiwpZTg7hY.jpg" alt="img"></p><h3 id="2、Hystrix概念"><a href="#2、Hystrix概念" class="headerlink" title="2、Hystrix概念"></a>2、<strong>Hystrix概念</strong></h3><p>分布式：项目单独的服务部署在不同的服务器上 <img src="https://i.loli.net/2020/11/15/kFSo3MK2OrGsQnh.png" alt="image-20201115110521851"> Hystrix 是一个供分布式系统使用，提供延迟和容错功能，保证复杂的分布系统在面临不可避免的失败时，仍能有其弹性。 比如系统中有很多服务，当某些服务不稳定的时候，使用这些服务的用户线程将会阻塞，如果没有隔离机制，系统随时就有可能会挂掉，从而带来很大的风险。SpringCloud使用Hystrix组件提供断路器、资源隔离与自我修复功能。下图表示服务B触发了断路器，阻止了级联失败 <img src="https://i.loli.net/2020/11/15/n2ms4UVJI3FBeAt.jpg" alt="img"></p><h3 id="3、使用"><a href="#3、使用" class="headerlink" title="3、使用"></a>3、使用</h3><p><strong>1、添加依赖</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-netflix-ribbon&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--hystrix依赖，主要是用  @HystrixCommand --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-netflix-hystrix&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--服务注册--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;!--服务调用--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-openfeign&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p><strong>2、修改配置文件</strong></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启熔断机制</span></span><br><span class="line"><span class="meta">feign.hystrix.enabled</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"># 设置hystrix超时时间，默认1000ms</span></span><br><span class="line"><span class="meta">hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds</span>=<span class="string">6000</span></span><br></pre></td></tr></table></figure><p><strong>3、创建实体类继承VodClient实现里面的方法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VodClientImpl</span> <span class="keyword">implements</span> <span class="title">VodClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义的方法都是出错后执行</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">deleteVideoById</span><span class="params">(String videoId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> R.error().message(<span class="string">"出错了"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">deleteBatch</span><span class="params">(List videoIdList)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> R.error().message(<span class="string">"出错了"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4、修改client注解</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@FeignClient</span>(value = <span class="string">"service-vod"</span>,fallback = VodClientImpl<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">//远程调用</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">interface</span> <span class="title">VodClient</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：&lt;/p&gt;
&lt;p&gt;springCloud&lt;/p&gt;
&lt;p&gt;nacos&lt;/p&gt;
&lt;p&gt;feign&lt;/p&gt;
&lt;p&gt;hysrix&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术分享" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="谷粒学院项目" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>谷粒学院开发day09</title>
    <link href="https://liaotao421.github.io/posts/a2499f41/"/>
    <id>https://liaotao421.github.io/posts/a2499f41/</id>
    <published>2020-11-12T13:58:55.000Z</published>
    <updated>2020-11-25T15:43:29.731Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：</p><p>阿里云视频点播</p></blockquote><a id="more"></a><p><img src="https://i.loli.net/2020/11/10/6MtlurDnQoREqWS.png" alt="image-20201110174543203"></p><h2 id="一、阿里云视频点播"><a href="#一、阿里云视频点播" class="headerlink" title="一、阿里云视频点播"></a>一、阿里云视频点播</h2><h3 id="1、基本介绍"><a href="#1、基本介绍" class="headerlink" title="1、基本介绍"></a>1、基本介绍</h3><p>视频点播（ApsaraVideo for VoD）是集音视频采集、编辑、上传、自动化转码处理、媒体资源管理、分发加速于一体的一站式音视频点播解决方案。 <img src="https://i.loli.net/2020/11/10/ARmwGiOktUr1Eoj.png" alt="img"></p><h3 id="2、API与SDK"><a href="#2、API与SDK" class="headerlink" title="2、API与SDK"></a>2、API与SDK</h3><p><img src="https://i.loli.net/2020/11/10/xXKPLIujikUEVNR.png" alt="image-20201110205246625"></p><h3 id="3、操作"><a href="#3、操作" class="headerlink" title="3、操作"></a>3、操作</h3><p>参照 <a href="https://help.aliyun.com/document_detail/61064.html?spm=a2c4g.11186623.6.931.7c317bdcDqYUQx">官方文档</a> 数据库中需要存储加密视频</p><h3 id="4、手动安装依赖到本地仓库"><a href="#4、手动安装依赖到本地仓库" class="headerlink" title="4、手动安装依赖到本地仓库"></a>4、手动安装依赖到本地仓库</h3><p><img src="https://i.loli.net/2020/11/12/JUWxCHIBouwVXz9.png" alt="image-20201112132246351"> 使用maven命令进行安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install:install-file -DgroupId=com.aliyun -DartifactId=aliyun-sdk-vod-upload -Dversion=1.4.11 -Dpackaging=jar -Dfile=aliyun-java-vod-upload-1.4.11.jar</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">listen       9001;</span><br><span class="line">server_name  localhost;</span><br><span class="line"></span><br><span class="line">location ~ &#x2F;eduservice&#x2F; &#123;</span><br><span class="line">    proxy_pass http:&#x2F;&#x2F;localhost:8001;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ &#x2F;eduoss&#x2F; &#123;</span><br><span class="line">    proxy_pass http:&#x2F;&#x2F;localhost:8002;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ &#x2F;eduvod&#x2F; &#123;</span><br><span class="line">    proxy_pass http:&#x2F;&#x2F;localhost:8003;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5、跨域问题"><a href="#5、跨域问题" class="headerlink" title="5、跨域问题"></a>5、跨域问题</h3><p>报错 <img src="https://i.loli.net/2020/11/12/YMFBSzAXQ2UZJyE.png" alt="image-20201112160211660"> 乍一看是跨域问题，但是后台接口加了注解防止跨域，网上找了各种方法尝试也不行 结果莫名其妙加了配置nginx上传文件大小，离谱的是没有加这个配置并没有老师视频里出现的 413 (Request Entity Too Large) 异常</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">client_max_body_size</span> <span class="string">1024m;</span></span><br></pre></td></tr></table></figure><p>解决问题 难道说不配置nginx上传文件大小会引起跨域，百度试试，但是没有结果好像</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：&lt;/p&gt;
&lt;p&gt;阿里云视频点播&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术分享" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="谷粒学院项目" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>谷粒学院开发day08</title>
    <link href="https://liaotao421.github.io/posts/d54eafd7/"/>
    <id>https://liaotao421.github.io/posts/d54eafd7/</id>
    <published>2020-11-11T14:40:31.000Z</published>
    <updated>2020-11-25T15:43:04.989Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：</p><p>富文本编辑器</p><p>项目开发</p></blockquote><a id="more"></a><h2 id="一、富文本编辑器"><a href="#一、富文本编辑器" class="headerlink" title="一、富文本编辑器"></a>一、富文本编辑器</h2><p>Tinymce是一个传统javascript插件，默认不能用于Vue.js因此需要做一些特殊的整合步骤</p><h3 id="1、复制脚本库"><a href="#1、复制脚本库" class="headerlink" title="1、复制脚本库"></a>1、复制脚本库</h3><p>将脚本库复制到项目的static目录下（在vue-element-admin-master的static路径下）</p><h3 id="2、配置html变量"><a href="#2、配置html变量" class="headerlink" title="2、配置html变量"></a>2、配置html变量</h3><p>在 guli-admin/build/webpack.dev.conf.js 中添加配置 使在html页面中可是使用这里定义的BASE_URL变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">    ......,</span><br><span class="line">    templateParameters: &#123;</span><br><span class="line">        BASE_URL: config.dev.assetsPublicPath + config.dev.assetsSubDirectory</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="3、引入js脚本"><a href="#3、引入js脚本" class="headerlink" title="3、引入js脚本"></a>3、引入js脚本</h3><p>在guli-admin/index.html 中引入js脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&lt;%&#x3D; BASE_URL %&gt;&#x2F;tinymce4.7.5&#x2F;tinymce.min.js&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&lt;%&#x3D; BASE_URL %&gt;&#x2F;tinymce4.7.5&#x2F;langs&#x2F;zh_CN.js&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="4、复制组件"><a href="#4、复制组件" class="headerlink" title="4、复制组件"></a>4、复制组件</h3><p>src/components/Tinymce</p><h3 id="5、引入组件"><a href="#5、引入组件" class="headerlink" title="5、引入组件"></a>5、引入组件</h3><p>课程信息组件中引入 Tinymce</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Tinymce <span class="keyword">from</span> <span class="string">'@/components/Tinymce'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  components: &#123; Tinymce &#125;,</span><br><span class="line">  ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6、组件模板"><a href="#6、组件模板" class="headerlink" title="6、组件模板"></a>6、组件模板</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 课程简介--&gt;</span><br><span class="line">&lt;el-form-item label&#x3D;&quot;课程简介&quot;&gt;</span><br><span class="line">    &lt;tinymce :height&#x3D;&quot;300&quot; v-model&#x3D;&quot;courseInfo.description&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;el-form-item&gt;</span><br></pre></td></tr></table></figure><h3 id="7、组件样式"><a href="#7、组件样式" class="headerlink" title="7、组件样式"></a>7、组件样式</h3><p>在info.vue文件的最后添加如下代码，调整上传图片按钮的高度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style scoped&gt;</span><br><span class="line">.tinymce-container &#123;</span><br><span class="line">  line-height: 29px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><h3 id="8、图片的base64编码"><a href="#8、图片的base64编码" class="headerlink" title="8、图片的base64编码"></a>8、图片的base64编码</h3><p>Tinymce中的图片上传功能直接存储的是图片的base64编码，因此无需图片服务器</p><h2 id="二、多表连接查询"><a href="#二、多表连接查询" class="headerlink" title="二、多表连接查询"></a>二、多表连接查询</h2><p>涉及多张表的查询，多使用手写sql语句实现 <img src="https://i.loli.net/2020/11/10/srlVomLH3qgJCbd.png" alt="image-20201110110221774"></p><h3 id="1、内连接"><a href="#1、内连接" class="headerlink" title="1、内连接"></a>1、内连接</h3><p>只查询两张表有关联的数据</p><h3 id="2、左外连接"><a href="#2、左外连接" class="headerlink" title="2、左外连接"></a>2、左外连接</h3><p>左边所有数据，右边有关联数据</p><h3 id="3、右外连接"><a href="#3、右外连接" class="headerlink" title="3、右外连接"></a>3、右外连接</h3><p>右边所有数据，左边有关联数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ec.id,ec.price,ec.<span class="string">`lesson_num`</span>,</span><br><span class="line">       ecd.<span class="string">`description`</span>,</span><br><span class="line">       et.<span class="string">`name`</span>,</span><br><span class="line">       es1.<span class="string">`title`</span> <span class="keyword">AS</span> oneSubject,es2.<span class="string">`title`</span> <span class="keyword">AS</span> twoSubject</span><br><span class="line"><span class="keyword">FROM</span> edu_course ec <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> edu_course_description ecd <span class="keyword">ON</span> ec.<span class="string">`id`</span> = ecd.<span class="string">`id`</span> </span><br><span class="line">           <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> edu_teacher et <span class="keyword">ON</span> ec.<span class="string">`teacher_id`</span> = et.<span class="string">`id`</span></span><br><span class="line">           <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> edu_subject es1 <span class="keyword">ON</span> ec.<span class="string">`subject_parent_id`</span> = es1.<span class="string">`id`</span></span><br><span class="line">           <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> edu_subject es2 <span class="keyword">ON</span> ec.<span class="string">`subject_id`</span> = es2.<span class="string">`id`</span></span><br><span class="line">           <span class="keyword">WHERE</span> ec.id = <span class="number">18</span>;</span><br></pre></td></tr></table></figure><h2 id="三、maven加载问题"><a href="#三、maven加载问题" class="headerlink" title="三、maven加载问题"></a>三、maven加载问题</h2><p>maven在加载的时候，只会将.java文件进行编译</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.apache.ibatis.binding.BindingException: <span class="function">Invalid bound <span class="title">statement</span> <span class="params">(not found)</span>: com.cyfwlp.eduservice.mapper.EduCourseMapper.getPublishCourse</span></span><br></pre></td></tr></table></figure><p>解决方案：</p><ol><li>手动复制目录</li><li>将.xml文件放到resources中</li><li>推荐使用 通过配置实现</li></ol><p>pom.xml配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 项目打包时会将java目录中的*.xml文件也进行打包 --&gt;</span><br><span class="line">&lt;build&gt;</span><br><span class="line">    &lt;resources&gt;</span><br><span class="line">        &lt;resource&gt;</span><br><span class="line">            &lt;directory&gt;src&#x2F;main&#x2F;java&lt;&#x2F;directory&gt;</span><br><span class="line">            &lt;includes&gt;</span><br><span class="line">                &lt;include&gt;**&#x2F;*.xml&lt;&#x2F;include&gt;</span><br><span class="line">            &lt;&#x2F;includes&gt;</span><br><span class="line">            &lt;filtering&gt;false&lt;&#x2F;filtering&gt;</span><br><span class="line">        &lt;&#x2F;resource&gt;</span><br><span class="line">    &lt;&#x2F;resources&gt;</span><br><span class="line">&lt;&#x2F;build&gt;</span><br></pre></td></tr></table></figure><p>application.propertie配置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mybatis-plus.mapper-locations</span>=<span class="string">classpath:com/cyfwlp/eduservice/mapper/xml/*.xml</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：&lt;/p&gt;
&lt;p&gt;富文本编辑器&lt;/p&gt;
&lt;p&gt;项目开发&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术分享" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="谷粒学院项目" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>谷粒学院开发day07</title>
    <link href="https://liaotao421.github.io/posts/45f1b246/"/>
    <id>https://liaotao421.github.io/posts/45f1b246/</id>
    <published>2020-11-08T09:28:11.000Z</published>
    <updated>2020-11-25T15:42:42.317Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：</p><p>返回树形结构数据</p><p>项目开发</p></blockquote><a id="more"></a><p><img src="https://i.loli.net/2020/11/05/TUxW9GYgVQAKIJS.png" alt="image-20201105215237446"></p><h2 id="一、返回树形结构的数据"><a href="#一、返回树形结构的数据" class="headerlink" title="一、返回树形结构的数据"></a>一、返回树形结构的数据</h2><p>返回这种格式数据 <img src="https://i.loli.net/2020/11/06/dvs38kGFXmax57W.png" alt="image-20201106150753889"> <strong>第一步：针对返回数据创建对应的实体类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> liaotao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2020/11/6 15:09</span></span><br><span class="line"><span class="comment"> * 一级分类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OneSubject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> liaotao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2020/11/6 15:09</span></span><br><span class="line"><span class="comment"> * 二级分类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TwoSubject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>第二步：在两个实体类之间表示关系（一个一级分类有多个二级分类）</strong> <em>修改一级分类代码</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> liaotao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2020/11/6 15:09</span></span><br><span class="line"><span class="comment"> * 一级分类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OneSubject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;TwoSubject&gt; children = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>第三部：编写具体代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;OneSubject&gt; <span class="title">getAllOneTwoSubject</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//1.查询所有一级分类</span></span><br><span class="line">    QueryWrapper&lt;EduSubject&gt; wrapperOne = <span class="keyword">new</span> QueryWrapper&lt;EduSubject&gt;();</span><br><span class="line">    wrapperOne.eq(<span class="string">"parent_id"</span>,<span class="string">"0"</span>);</span><br><span class="line">    List&lt;EduSubject&gt; oneSubject = baseMapper.selectList(wrapperOne);</span><br><span class="line">    <span class="comment">// 或者自己调自己</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.查询所有二级分类</span></span><br><span class="line">    QueryWrapper&lt;EduSubject&gt; wrapperTwo = <span class="keyword">new</span> QueryWrapper&lt;EduSubject&gt;();</span><br><span class="line">    wrapperOne.ne(<span class="string">"parent_id"</span>,<span class="string">"0"</span>);</span><br><span class="line">    List&lt;EduSubject&gt; twoSubject = baseMapper.selectList(wrapperTwo);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建list存储最终封装的数据</span></span><br><span class="line">    ArrayList&lt;OneSubject&gt; finalSubjectList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.封装一级分类</span></span><br><span class="line">    <span class="comment">// 遍历封装</span></span><br><span class="line">    <span class="keyword">for</span> (EduSubject eduSubject : oneSubject) &#123;</span><br><span class="line">        OneSubject subject = <span class="keyword">new</span> OneSubject();</span><br><span class="line">        subject.setId(eduSubject.getId());</span><br><span class="line">        subject.setTitle(eduSubject.getTitle());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取每个一级分类对应的二级分类、</span></span><br><span class="line">        List&lt;TwoSubject&gt; twoFinalSubjectList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (EduSubject eduSubject1 : twoSubject) &#123;</span><br><span class="line">            <span class="comment">//判断二级分类parent_id 和 id</span></span><br><span class="line">            <span class="keyword">if</span> (eduSubject1.getParentId().equals(eduSubject.getId())) &#123;</span><br><span class="line">                TwoSubject subject1 = <span class="keyword">new</span> TwoSubject();</span><br><span class="line">                subject1.setId(eduSubject1.getId());</span><br><span class="line">                subject1.setTitle(eduSubject1.getTitle());</span><br><span class="line">                twoFinalSubjectList.add(subject1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        subject.setChildren(twoFinalSubjectList);</span><br><span class="line"></span><br><span class="line">        finalSubjectList.add(subject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.封装二级分类</span></span><br><span class="line">    <span class="keyword">return</span> finalSubjectList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、课程添加模块"><a href="#二、课程添加模块" class="headerlink" title="二、课程添加模块"></a>二、课程添加模块</h2><p>课程相关表直接关系 <img src="https://i.loli.net/2020/11/08/GyKSAoQTrc2BtEZ.png" alt="image-20201108101229467"> 1、课程添加 细节问题</p><ol><li>创建vo类用于表单数据封装</li><li>表单提交过来的数据添加到数据库 两张表 edu_couese edu_description</li><li>讲师和分类使用下拉列表 课程分类 二级联动</li></ol><p>vo类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyfwlp.eduservice.entity.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> liaotao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2020/11/8 10:28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CourseInfoVo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程ID"</span>)</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程讲师ID"</span>)</span><br><span class="line">    <span class="keyword">private</span> String teacherId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程专业ID"</span>)</span><br><span class="line">    <span class="keyword">private</span> String subjectId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程标题"</span>)</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程销售价格，设置为0则可免费观看"</span>)</span><br><span class="line">    <span class="comment">// 0.01 价格不能使用 double  精度问题</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"总课时"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer lessonNum;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程封面图片路径"</span>)</span><br><span class="line">    <span class="keyword">private</span> String cover;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程简介"</span>)</span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>serviceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加课程基本信息的方法</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveCourseInfo</span><span class="params">(CourseInfoVo courseInfoVo)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//1.添加到课程信息表</span></span><br><span class="line">    EduCourse eduCourse = <span class="keyword">new</span> EduCourse();</span><br><span class="line">    BeanUtils.copyProperties(courseInfoVo,eduCourse);</span><br><span class="line">    <span class="keyword">int</span> insert = baseMapper.insert(eduCourse);</span><br><span class="line">    <span class="keyword">if</span> (insert &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//添加失败</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>,<span class="string">"添加课程信息失败"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 得到添加后的课程id</span></span><br><span class="line">    String cid = eduCourse.getId();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.添加数据到课程简介表</span></span><br><span class="line">    <span class="comment">//需要调用其他service @Autowired</span></span><br><span class="line">    EduCourseDescription eduCourseDescription = <span class="keyword">new</span> EduCourseDescription();</span><br><span class="line">    BeanUtils.copyProperties(courseInfoVo,eduCourseDescription);</span><br><span class="line">    <span class="comment">//手动设置表述id为课程id</span></span><br><span class="line">    eduCourseDescription.setId(cid);</span><br><span class="line">    descriptionService.save(eduCourseDescription);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多的难点在于element ui的使用，结合官网在项目中灵活运用即可</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：&lt;/p&gt;
&lt;p&gt;返回树形结构数据&lt;/p&gt;
&lt;p&gt;项目开发&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术分享" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="谷粒学院项目" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>谷粒学院开发day06</title>
    <link href="https://liaotao421.github.io/posts/32f682d0/"/>
    <id>https://liaotao421.github.io/posts/32f682d0/</id>
    <published>2020-11-05T13:50:33.000Z</published>
    <updated>2020-11-25T15:42:05.867Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：</p><p>阿里云oss</p><p>nginx</p><p>easyExcel</p></blockquote><a id="more"></a><p><img src="https://i.loli.net/2020/11/03/Uy47tw8M2HLxvZs.png" alt="image-20201103123419627"></p><h2 id="一、阿里云oss存储服务"><a href="#一、阿里云oss存储服务" class="headerlink" title="一、阿里云oss存储服务"></a>一、阿里云oss存储服务</h2><p>前置准备：</p><ol><li>获取操作阿里云oss许可证 Accesskey 官网创建就行</li><li><a href="https://help.aliyun.com/document_detail/32011.html?spm=a2c4g.11186623.6.917.2a5c6328xhqaJG">官方文档</a></li></ol><p>参照官方文档使用难度不大</p><h2 id="二、nginx"><a href="#二、nginx" class="headerlink" title="二、nginx"></a>二、nginx</h2><p>nginx : 高性能的HTTP和反向代理web服务器 nginx主要使用：</p><ol><li>请求转发</li><li>负载均衡</li><li>动静分离</li></ol><p>项目中使用请求转发，根据请求路径转发到不同的服务 nginx 结束命令 (windows)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx.exe -s stop</span><br></pre></td></tr></table></figure><p>修改配置文件，在http{}里添加</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       9001;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    location ~ /eduservice/ &#123;</span><br><span class="line">    proxy_pass http://localhost:8001;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ /eduoss/ &#123;</span><br><span class="line">        proxy_pass http://localhost:8002;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再启动</p><h2 id="三、EasyExcel"><a href="#三、EasyExcel" class="headerlink" title="三、EasyExcel"></a>三、EasyExcel</h2><p>EasyExcel是阿里巴巴开源的一个excel处理框架，<strong>以使用简单、节省内存著称</strong>。 需要 poi依赖 和 EasyExcel依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;easyexcel&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.1.1&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;!--xls--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.poi&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;poi&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;$&#123;poi.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;!--xlsx--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.poi&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;poi-ooxml&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;$&#123;poi.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>1、Excel写操作 创建Excel对应实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoData</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置excel表头名称</span></span><br><span class="line">    <span class="meta">@ExcelProperty</span>(<span class="string">"学生编号"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer sno;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty</span>(<span class="string">"学生姓名"</span>)</span><br><span class="line">    <span class="keyword">private</span> String sname;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestEasyExcel</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//实现Excel写的操作</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.设置写入文件地址和Excel文件名称</span></span><br><span class="line">        String fileName = <span class="string">"F:\\write.xlsx"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.实现写操作</span></span><br><span class="line">        EasyExcel.write(fileName,DemoData.class).sheet("学生列表").doWrite(getData());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;DemoData&gt; <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;DemoData&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            DemoData demoData = <span class="keyword">new</span> DemoData();</span><br><span class="line">            demoData.setSno(i);</span><br><span class="line">            demoData.setSname(<span class="string">"jack"</span> + i);</span><br><span class="line">            list.add(demoData);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、Excel读操作 创建对应实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoData</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置excel表头名称</span></span><br><span class="line">    <span class="meta">@ExcelProperty</span>(value = <span class="string">"学生编号"</span>,index = <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer sno;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty</span>(value = <span class="string">"学生姓名"</span>,index = <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">private</span> String sname;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建监听进行Excel文件的读取</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> liaotao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2020/11/5 16:22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExcelListener</span> <span class="keyword">extends</span> <span class="title">AnalysisEventListener</span>&lt;<span class="title">DemoData</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 一行一行的读取Excel内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> demoData</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> analysisContext</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">invoke</span><span class="params">(DemoData demoData, AnalysisContext analysisContext)</span> </span>&#123;</span><br><span class="line">        System.out.println( <span class="string">"****"</span> + demoData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">invokeHeadMap</span><span class="params">(Map&lt;Integer, String&gt; headMap, AnalysisContext context)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"表头"</span> + headMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 读取完成后</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> analysisContext</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doAfterAllAnalysed</span><span class="params">(AnalysisContext analysisContext)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：&lt;/p&gt;
&lt;p&gt;阿里云oss&lt;/p&gt;
&lt;p&gt;nginx&lt;/p&gt;
&lt;p&gt;easyExcel&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术分享" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="谷粒学院项目" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>谷粒学院开发day05</title>
    <link href="https://liaotao421.github.io/posts/abffd36a/"/>
    <id>https://liaotao421.github.io/posts/abffd36a/</id>
    <published>2020-11-02T14:52:51.000Z</published>
    <updated>2020-11-25T15:41:13.497Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：</p><p>滑水的一天</p></blockquote><a id="more"></a><p><img src="https://i.loli.net/2020/11/25/67KQtM3DVFkjf1o.png" alt="image-20201029150822056"></p><h2 id="一、零碎知识"><a href="#一、零碎知识" class="headerlink" title="一、零碎知识"></a>一、零碎知识</h2><h3 id="1、好像没什么需要记的，水一篇把-滑稽-jpg"><a href="#1、好像没什么需要记的，水一篇把-滑稽-jpg" class="headerlink" title="1、好像没什么需要记的，水一篇把 滑稽.jpg"></a>1、好像没什么需要记的，水一篇把 滑稽.jpg</h3>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：&lt;/p&gt;
&lt;p&gt;滑水的一天&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术分享" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="谷粒学院项目" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>谷粒学院开发day04</title>
    <link href="https://liaotao421.github.io/posts/dcf8e3fc/"/>
    <id>https://liaotao421.github.io/posts/dcf8e3fc/</id>
    <published>2020-10-29T07:05:37.000Z</published>
    <updated>2020-11-25T15:40:48.748Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：</p><p>node.js、elementui</p></blockquote><a id="more"></a><p><img src="https://i.loli.net/2020/10/28/oLnbDJ53CuxOyt1.png" alt="image-20201028224654958"></p><h2 id="一、axios"><a href="#一、axios" class="headerlink" title="一、axios"></a>一、axios</h2><h4 id="1、跨域问题"><a href="#1、跨域问题" class="headerlink" title="1、跨域问题"></a><strong>1、跨域问题</strong></h4><p>1、什么是跨域 浏览器从一个域名的网页去请求另一个域名的资源时，域名、端口、协议任一不同，都是跨域 。前后端分离开发中，需要考虑ajax跨域的问题。 这里我们可以从服务端解决这个问题 2、配置 在Controller类上添加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CrossOrigin</span> <span class="comment">//跨域</span></span><br></pre></td></tr></table></figure><h4 id="2、axios"><a href="#2、axios" class="headerlink" title="2、axios"></a>2、axios</h4><p>axios是独立于vue的一个项目，基于promise用于浏览器和node.js的http客户端</p><ul><li>在浏览器中可以帮助我们完成 ajax请求的发送</li><li>在node.js中可以向远程接口发送请求</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;div v-for&#x3D;&quot;(item,index) in userList&quot;&gt;&#123;&#123;item&#125;&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;axios.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        new Vue(&#123;</span><br><span class="line">            el: &#39;#app&#39;,</span><br><span class="line">            &#x2F;&#x2F;固定结构</span><br><span class="line">            data: &#123; &#x2F;&#x2F;data定义变量和初始值</span><br><span class="line">                userList:[]</span><br><span class="line">            &#125;,</span><br><span class="line">            created()&#123;</span><br><span class="line">                &#x2F;&#x2F;调用定义的方法</span><br><span class="line">                this.getuserList();</span><br><span class="line">            &#125;,</span><br><span class="line">            methods:&#123;&#x2F;&#x2F;编写具体的方法</span><br><span class="line">                &#x2F;&#x2F;创建方法 查询所有用户数据</span><br><span class="line">                getuserList() &#123;</span><br><span class="line">                    &#x2F;&#x2F;使用axiox发送ajax请求</span><br><span class="line">                    axios.get(&quot;http:&#x2F;&#x2F;localhost:8002&#x2F;eduservice&#x2F;teacher&#x2F;findAll&quot;)</span><br><span class="line">                    &#x2F;&#x2F;请求成功执行then方法</span><br><span class="line">                    .then(response &#x3D;&gt; &#123;</span><br><span class="line">                        &#x2F;&#x2F; console.log(response.data.data.items);</span><br><span class="line">                        &#x2F;&#x2F; 数据复制给data定义的数组</span><br><span class="line">                        this.userList &#x3D; response.data.data.items</span><br><span class="line">                        console.log(this.userList);</span><br><span class="line">                    &#125;)</span><br><span class="line">                    &#x2F;&#x2F;请求失败实现catch方法</span><br><span class="line">                    .catch(error &#x3D;&gt; &#123;</span><br><span class="line">                        console.log(error);</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h2 id="二、element-ui"><a href="#二、element-ui" class="headerlink" title="二、element-ui"></a>二、element-ui</h2><p>element-ui 是饿了么前端出品的基于 Vue.js的 后台组件库，方便程序员进行页面快速布局和构建 官网： <a href="http://element-cn.eleme.io/#/zh-CN">http://element-cn.eleme.io/#/zh-CN</a></p><h2 id="三、Node-js"><a href="#三、Node-js" class="headerlink" title="三、Node.js"></a>三、Node.js</h2><h4 id="1、node-js是什么"><a href="#1、node-js是什么" class="headerlink" title="1、node.js是什么"></a>1、node.js是什么</h4><p>简单的说 Node.js 就是运行在服务端的 JavaScript。 Node.js是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好</p><h4 id="2、nodejs作用"><a href="#2、nodejs作用" class="headerlink" title="2、nodejs作用"></a>2、nodejs作用</h4><ol><li>JavaScript的运行环境，用于执行JavaScript环境，不需要浏览器，直接使用nodejs运行JavaScript代码</li><li>模拟服务器效果</li></ol><h4 id="3、vscode打开cmd窗口"><a href="#3、vscode打开cmd窗口" class="headerlink" title="3、vscode打开cmd窗口"></a>3、vscode打开cmd窗口</h4><p><img src="https://i.loli.net/2020/10/29/ztKWArQicPGLgwn.png" alt="image-20201029114819386"></p><h4 id="4、服务器端应用开发（了解）"><a href="#4、服务器端应用开发（了解）" class="headerlink" title="4、服务器端应用开发（了解）"></a>4、服务器端应用开发（了解）</h4><p>创建 02-server-app.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line">http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">request, response</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 发送 HTTP 头部 </span></span><br><span class="line">    <span class="comment">// HTTP 状态值: 200 : OK</span></span><br><span class="line">    <span class="comment">// 内容类型: text/plain</span></span><br><span class="line">    response.writeHead(<span class="number">200</span>, &#123;<span class="string">'Content-Type'</span>: <span class="string">'text/plain'</span>&#125;);</span><br><span class="line">    <span class="comment">// 发送响应数据 "Hello World"</span></span><br><span class="line">    response.end(<span class="string">'Hello Server'</span>);</span><br><span class="line">&#125;).listen(<span class="number">8888</span>);</span><br><span class="line"><span class="comment">// 终端打印如下信息</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Server running at http://127.0.0.1:8888/'</span>);</span><br></pre></td></tr></table></figure><p>运行服务器程序</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node 02-server-app.js</span><br></pre></td></tr></table></figure><p>服务器启动成功后，在浏览器中输入：<a href="http://localhost:8888/">http://localhost:8888/</a> 查看webserver成功运行，并输出html页面 停止服务：ctrl + c</p><h2 id="四、npm"><a href="#四、npm" class="headerlink" title="四、npm"></a>四、npm</h2><h4 id="1、npm是什么"><a href="#1、npm是什么" class="headerlink" title="1、npm是什么"></a>1、npm是什么</h4><p>NPM全称Node Package Manager，是Node.js包管理工具，是全球最大的模块生态系统，里面所有的模块都是开源免费的；也是Node.js的包管理工具，相当于前端的Maven</p><h4 id="2、npm具体操作"><a href="#2、npm具体操作" class="headerlink" title="2、npm具体操作"></a>2、npm具体操作</h4><p>（1）项目初始化 使用命令 npm init （使用默认配置 nmp init -y） 项目初始化之后，生成文件package.json 相当于后端pom.xml （2）下载js依赖 <strong>设置镜像地址</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">经过下面的配置，以后所有的 npm install 都会经过淘宝的镜像地址下载</span></span><br><span class="line">npm config set registry https://registry.npm.taobao.org </span><br><span class="line"><span class="meta">#</span><span class="bash">查看npm配置信息</span></span><br><span class="line">npm config list</span><br></pre></td></tr></table></figure><p>命令 npm install xxx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install jquery</span><br></pre></td></tr></table></figure><p>指定版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">如果安装时想指定特定的版本</span></span><br><span class="line">npm install jquery@2.1.x</span><br></pre></td></tr></table></figure><p>（3）根据配置文件下载依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><h2 id="五、bable"><a href="#五、bable" class="headerlink" title="五、bable"></a>五、bable</h2><h4 id="1、bable是什么"><a href="#1、bable是什么" class="headerlink" title="1、bable是什么"></a>1、bable是什么</h4><p>转码器 把es6的代码转换成es5的代码 <strong>实际开发</strong> 编写es6代码转换成es5运行</p><h4 id="2、bable使用"><a href="#2、bable使用" class="headerlink" title="2、bable使用"></a>2、bable使用</h4><p>1、安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --global babel-cli</span><br><span class="line"><span class="meta">#</span><span class="bash">查看是否安装成功</span></span><br><span class="line">babel --version</span><br></pre></td></tr></table></figure><p>2、编写es6代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 转码前</span></span><br><span class="line"><span class="comment">// 定义数据</span></span><br><span class="line"><span class="keyword">let</span> input = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="comment">// 将数组的每个元素 +1</span></span><br><span class="line">input = input.map(<span class="function"><span class="params">item</span> =&gt;</span> item + <span class="number">1</span>)</span><br><span class="line"><span class="built_in">console</span>.log(input)</span><br></pre></td></tr></table></figure><p>3、根目录下配置.babelrc</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"presets"</span>: [<span class="string">"es2015"</span>],</span><br><span class="line">    <span class="attr">"plugins"</span>: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、安装es2015的转码器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev babel-preset-es2015</span><br></pre></td></tr></table></figure><p>5、使用命令进行转码 （1）根据文件转码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">babel es6/01.js -o dist/001.js</span><br></pre></td></tr></table></figure><p>（2）根据文件夹转码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">babel es6 -d dist</span><br></pre></td></tr></table></figure><h2 id="六、模块化"><a href="#六、模块化" class="headerlink" title="六、模块化"></a>六、模块化</h2><h4 id="1、模块化是什么"><a href="#1、模块化是什么" class="headerlink" title="1、模块化是什么"></a>1、模块化是什么</h4><p>在前端中，js与js之间调用称为模块化</p><h4 id="2、es5模块化"><a href="#2、es5模块化" class="headerlink" title="2、es5模块化"></a>2、es5模块化</h4><p>01.js 代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 01.js创建js方法</span></span><br><span class="line"><span class="comment">// 定义成员：</span></span><br><span class="line"><span class="keyword">const</span> sum = <span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">parseInt</span>(a) + <span class="built_in">parseInt</span>(b)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> sub = <span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">parseInt</span>(a) - <span class="built_in">parseInt</span>(b)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置哪些方法可以被调用</span></span><br><span class="line"><span class="comment">// 导出成员：</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    sum: sum,</span><br><span class="line">    sub: sub,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>02.js 代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 02.js调用01.js方法</span></span><br><span class="line"><span class="comment">// 引入01.js文件</span></span><br><span class="line"><span class="keyword">const</span> m = equire(<span class="string">'./01.js'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用</span></span><br><span class="line"><span class="built_in">console</span>.log(m.sum(<span class="number">1</span>,<span class="number">2</span>));</span><br><span class="line"><span class="built_in">console</span>.log(m.sub(<span class="number">10</span>,<span class="number">4</span>));</span><br></pre></td></tr></table></figure><h4 id="3-1、es6模块化（1）"><a href="#3-1、es6模块化（1）" class="headerlink" title="3.1、es6模块化（1）"></a>3.1、es6模块化（1）</h4><p>01.js 代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义方法 设置哪些方法可以被其他的js调用</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">getList</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'getList'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'save'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>02.js 代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用01.js方法 引入01.js 调用</span></span><br><span class="line"><span class="keyword">import</span> &#123;getList,save&#125; <span class="keyword">from</span> <span class="string">'./01.js'</span></span><br><span class="line"><span class="comment">//调用方法</span></span><br><span class="line">getList();</span><br><span class="line">save();</span><br></pre></td></tr></table></figure><p><strong>注意：这时的程序无法运行的，因为ES6的模块化无法在Node.js中执行，需要用Babel编辑成ES5后再执行。</strong> 转换es5即可运行</p><h4 id="3-2、es6模块化（2）"><a href="#3-2、es6模块化（2）" class="headerlink" title="3.2、es6模块化（2）"></a>3.2、es6模块化（2）</h4><p>01.js 代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义方法 设置哪些方法可以被其他的js调用</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    getList() &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'getList'</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    update() &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'update'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>02.js 代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用01.js方法 引入01.js 调用</span></span><br><span class="line"><span class="keyword">import</span> m <span class="keyword">from</span> <span class="string">'./01.js'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//调用方法</span></span><br><span class="line">m.getList;</span><br><span class="line">m.update;</span><br></pre></td></tr></table></figure><p>同样需要转化为es5在node.js运行</p><h2 id="七、webpack"><a href="#七、webpack" class="headerlink" title="七、webpack"></a>七、webpack</h2><h4 id="1、webpack是什么"><a href="#1、webpack是什么" class="headerlink" title="1、webpack是什么"></a>1、webpack是什么</h4><p>Webpack 是一个前端资源加载/打包工具。它将根据模块的依赖关系进行静态分析，然后将这些模块按照指定的规则生成对应的静态资源。 从图中我们可以看出，Webpack 可以将多种静态资源 js、css、less 转换成一个静态文件，减少了页面的请求。 <img src="https://i.loli.net/2020/10/29/pLHRUQv3scewX1n.png" alt="img"></p><h4 id="2、webpack安装"><a href="#2、webpack安装" class="headerlink" title="2、webpack安装"></a>2、webpack安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 全局安装</span></span><br><span class="line">npm install -g webpack webpack-cli</span><br><span class="line"><span class="meta">#</span><span class="bash">查看版本</span></span><br><span class="line">webpack -v</span><br></pre></td></tr></table></figure><h4 id="3、webpack打包js文件"><a href="#3、webpack打包js文件" class="headerlink" title="3、webpack打包js文件"></a>3、webpack打包js文件</h4><p>src/common.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exports.info = <span class="function"><span class="keyword">function</span> (<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>src/utils.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exports.add = <span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>src/main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> common = <span class="built_in">require</span>(<span class="string">'./common,js'</span>);</span><br><span class="line"><span class="keyword">const</span> utils = <span class="built_in">require</span>(<span class="string">'./utils'</span>);</span><br><span class="line"></span><br><span class="line">common.info(<span class="string">'hello 123'</span> + utils.add(<span class="number">1</span>,<span class="number">2</span>));</span><br></pre></td></tr></table></figure><p>创建webpack配置文件，配置打包信息 webpack.config.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">"path"</span>); <span class="comment">//Node.js内置模块</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: <span class="string">'./src/main.js'</span>, <span class="comment">//配置入口文件</span></span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'./dist'</span>), <span class="comment">//输出路径，__dirname：当前文件所在路径</span></span><br><span class="line">        filename: <span class="string">'bundle.js'</span> <span class="comment">//输出文件</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用命令执行打包操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">webpack #有黄色警告</span><br><span class="line">webpack --mode=development #没有警告</span><br><span class="line"><span class="meta">#</span><span class="bash">执行后查看bundle.js 里面包含了上面两个js文件的内容并惊醒了代码压缩</span></span><br></pre></td></tr></table></figure><h4 id="4、webpack打包css文件"><a href="#4、webpack打包css文件" class="headerlink" title="4、webpack打包css文件"></a>4、webpack打包css文件</h4><p>style.css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>main.js引入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">'./style.css'</span>);</span><br></pre></td></tr></table></figure><p>安装<strong>style-loader和 css-loader</strong></p><blockquote><p>Webpack 本身只能处理 JavaScript 模块，如果要处理其他类型的文件，就需要使用 loader 进行转换。 Loader 可以理解为是模块和资源的转换器。 首先我们需要安装相关Loader插件，css-loader 是将 css 装载到 javascript；style-loader 是让 javascript 认识css</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev style-loader css-loader</span><br></pre></td></tr></table></figure><p>修改webpack.config.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">"path"</span>); <span class="comment">//Node.js内置模块</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="comment">//...,</span></span><br><span class="line">    output:&#123;&#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [  </span><br><span class="line">            &#123;  </span><br><span class="line">                test: <span class="regexp">/\.css$/</span>,    <span class="comment">//打包规则应用到以css结尾的文件上</span></span><br><span class="line">                use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>]</span><br><span class="line">            &#125;  </span><br><span class="line">        ]  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="八、搭建项目前端环境"><a href="#八、搭建项目前端环境" class="headerlink" title="八、搭建项目前端环境"></a>八、搭建项目前端环境</h2><h4 id="1、vue-admin-template"><a href="#1、vue-admin-template" class="headerlink" title="1、vue-admin-template"></a>1、vue-admin-template</h4><p>vue-element-admin是基于element-ui 的一套后台管理系统集成方案。 <strong>功能：</strong><a href="https://panjiachen.github.io/vue-element-admin-site/zh/guide/#功能">https://panjiachen.github.io/vue-element-admin-site/zh/guide/#功能</a> <strong>GitHub地址：</strong><a href="https://github.com/PanJiaChen/vue-element-admin">https://github.com/PanJiaChen/vue-element-admin</a> <strong>项目在线预览：</strong><a href="https://panjiachen.gitee.io/vue-element-admin/#/login?redirect=%2Fdashboard">https://panjiachen.gitee.io/vue-element-admin</a></p><h4 id="2、安装"><a href="#2、安装" class="headerlink" title="2、安装"></a>2、安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 解压压缩包</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入目录</span></span><br><span class="line">cd vue-element-admin-master</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装依赖</span></span><br><span class="line">npm install</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动。执行后，浏览器自动弹出并访问http://localhost:9527/</span></span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h4 id="3、项目基本结构"><a href="#3、项目基本结构" class="headerlink" title="3、项目基本结构"></a>3、项目基本结构</h4><p><img src="https://i.loli.net/2020/10/29/dKCcEh7FSHMJza9.png" alt="image-20201029145622822"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">. </span><br><span class="line">├── build <span class="comment">// 构建脚本</span></span><br><span class="line">├── config <span class="comment">// 全局配置 </span></span><br><span class="line">├── node_modules <span class="comment">// 项目依赖模块</span></span><br><span class="line">├── src <span class="comment">//项目源代码</span></span><br><span class="line">├── <span class="keyword">static</span> <span class="comment">// 静态资源</span></span><br><span class="line">└── package.jspon <span class="comment">// 项目信息和依赖配置</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">src </span><br><span class="line">├── api <span class="comment">// 各种接口 </span></span><br><span class="line">├── assets <span class="comment">// 图片等资源 </span></span><br><span class="line">├── components <span class="comment">// 各种公共组件，非公共组件在各自view下维护 </span></span><br><span class="line">├── icons <span class="comment">//svg icon </span></span><br><span class="line">├── router <span class="comment">// 路由表 </span></span><br><span class="line">├── store <span class="comment">// 存储 </span></span><br><span class="line">├── styles <span class="comment">// 各种样式 </span></span><br><span class="line">├── utils <span class="comment">// 公共工具，非公共工具，在各自view下维护 </span></span><br><span class="line">├── views <span class="comment">// 各种layout</span></span><br><span class="line">├── App.vue <span class="comment">//***项目顶层组件*** </span></span><br><span class="line">├── main.js <span class="comment">//***项目入口文件***</span></span><br><span class="line">└── permission.js <span class="comment">//认证入口</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：&lt;/p&gt;
&lt;p&gt;node.js、elementui&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术分享" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="谷粒学院项目" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>谷粒学院开发day03</title>
    <link href="https://liaotao421.github.io/posts/429c765f/"/>
    <id>https://liaotao421.github.io/posts/429c765f/</id>
    <published>2020-10-28T14:43:31.000Z</published>
    <updated>2020-11-25T15:40:10.207Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：</p><p>es6</p><p>vue入门</p></blockquote><a id="more"></a><p><img src="https://i.loli.net/2020/10/26/gkMJH9wX8RldApu.png" alt="image-20201026123546467"></p><h2 id="一、特定异常处理"><a href="#一、特定异常处理" class="headerlink" title="一、特定异常处理"></a>一、特定异常处理</h2><p>捕获 ArithmeticException 并处理 在GlobalExceptionHandler 添加以下方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//特定异常处理</span></span><br><span class="line"><span class="meta">@ExceptionHandler</span>(ArithmeticException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">R</span> <span class="title">error</span>(<span class="title">ArithmeticException</span> <span class="title">e</span>) </span>&#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">    <span class="keyword">return</span> R.error().message(<span class="string">"执行了ArithmeticException异常处理.."</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、自定义异常处理"><a href="#二、自定义异常处理" class="headerlink" title="二、自定义异常处理"></a>二、自定义异常处理</h2><p><strong>1、创建自定义异常类，继承RuntimeException， 写异常属性</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span> <span class="comment">//生成有参数的构造方法</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span> <span class="comment">//生成无参数的构造方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GuliException</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer code; <span class="comment">//状态码</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String msg; <span class="comment">//信息</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2、在GlobalExceptionHandler 添加以下方法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自定义异常处理</span></span><br><span class="line"><span class="meta">@ExceptionHandler</span>(GuliException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">R</span> <span class="title">error</span>(<span class="title">GuliException</span> <span class="title">e</span>) </span>&#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">    <span class="keyword">return</span> R.error().code(e.getCode()).message(e.getMessage());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3、执行自定义异常</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">10</span>/<span class="number">0</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>,<span class="string">"执行了自定义异常处理"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、统一日志处理"><a href="#三、统一日志处理" class="headerlink" title="三、统一日志处理"></a>三、统一日志处理</h2><p><strong>1、配置日志级别</strong> 日志记录器（Logger）的行为是分等级的。如下表所示： 分为：OFF、FATAL、<strong>ERROR、WARN、INFO、DEBUG</strong>、ALL 默认情况下，spring boot从控制台打印出来的日志级别只有INFO及以上级别，可以配置日志级别</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置日志级别</span></span><br><span class="line"><span class="meta">logging.level.root</span>=<span class="string">INFO</span></span><br></pre></td></tr></table></figure><p>这种方式只能<strong>将日志打印在控制台上</strong> <strong>2、Logback日志配置</strong> spring boot内部使用Logback作为日志实现的框架 （1）删除application.properties中的日志配置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#mybatis日志</span></span><br><span class="line"><span class="meta">mybatis-plus.configuration.log-impl</span>=<span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><p>（2）resources创建 logback-spring.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;configuration  scan&#x3D;&quot;true&quot; scanPeriod&#x3D;&quot;10 seconds&quot;&gt;</span><br><span class="line">    &lt;!-- 日志级别从低到高分为TRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR &lt; FATAL，如果设置为WARN，则低于WARN的信息都不会输出 --&gt;</span><br><span class="line">    &lt;!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true --&gt;</span><br><span class="line">    &lt;!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 --&gt;</span><br><span class="line">    &lt;!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;contextName&gt;logback&lt;&#x2F;contextName&gt;</span><br><span class="line">    &lt;!-- name的值是变量的名称，value的值时变量定义的值。通过定义的值会被插入到logger上下文中。定义变量后，可以使“$&#123;&#125;”来使用变量。 --&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;log.path&quot; value&#x3D;&quot;D:&#x2F;guli_log&#x2F;edu&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 彩色日志 --&gt;</span><br><span class="line">    &lt;!-- 配置格式变量：CONSOLE_LOG_PATTERN 彩色日志格式 --&gt;</span><br><span class="line">    &lt;!-- magenta:洋红 --&gt;</span><br><span class="line">    &lt;!-- boldMagenta:粗红--&gt;</span><br><span class="line">    &lt;!-- cyan:青色 --&gt;</span><br><span class="line">    &lt;!-- white:白色 --&gt;</span><br><span class="line">    &lt;!-- magenta:洋红 --&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;CONSOLE_LOG_PATTERN&quot;</span><br><span class="line">              value&#x3D;&quot;%yellow(%date&#123;yyyy-MM-dd HH:mm:ss&#125;) %highlight(%-5level) %blue(%thread) %blue(%file:%line) %green(%logger) %cyan(%msg%n)&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!--输出到控制台--&gt;</span><br><span class="line">    &lt;appender name&#x3D;&quot;CONSOLE&quot; class&#x3D;&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;</span><br><span class="line">        &lt;!--此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息--&gt;</span><br><span class="line">        &lt;!-- 例如：如果此处配置了INFO级别，则后面其他位置即使配置了DEBUG级别的日志，也不会被输出 --&gt;</span><br><span class="line">        &lt;filter class&#x3D;&quot;ch.qos.logback.classic.filter.ThresholdFilter&quot;&gt;</span><br><span class="line">            &lt;level&gt;INFO&lt;&#x2F;level&gt;</span><br><span class="line">        &lt;&#x2F;filter&gt;</span><br><span class="line">        &lt;encoder&gt;</span><br><span class="line">            &lt;Pattern&gt;$&#123;CONSOLE_LOG_PATTERN&#125;&lt;&#x2F;Pattern&gt;</span><br><span class="line">            &lt;!-- 设置字符集 --&gt;</span><br><span class="line">            &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt;</span><br><span class="line">        &lt;&#x2F;encoder&gt;</span><br><span class="line">    &lt;&#x2F;appender&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!--输出到文件--&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 时间滚动输出 level为 INFO 日志 --&gt;</span><br><span class="line">    &lt;appender name&#x3D;&quot;INFO_FILE&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</span><br><span class="line">        &lt;!-- 正在记录的日志文件的路径及文件名 --&gt;</span><br><span class="line">        &lt;file&gt;$&#123;log.path&#125;&#x2F;log_info.log&lt;&#x2F;file&gt;</span><br><span class="line">        &lt;!--日志文件输出格式--&gt;</span><br><span class="line">        &lt;encoder&gt;</span><br><span class="line">            &lt;pattern&gt;%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;50&#125; - %msg%n&lt;&#x2F;pattern&gt;</span><br><span class="line">            &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt;</span><br><span class="line">        &lt;&#x2F;encoder&gt;</span><br><span class="line">        &lt;!-- 日志记录器的滚动策略，按日期，按大小记录 --&gt;</span><br><span class="line">        &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</span><br><span class="line">            &lt;!-- 每天日志归档路径以及格式 --&gt;</span><br><span class="line">            &lt;fileNamePattern&gt;$&#123;log.path&#125;&#x2F;info&#x2F;log-info-%d&#123;yyyy-MM-dd&#125;.%i.log&lt;&#x2F;fileNamePattern&gt;</span><br><span class="line">            &lt;timeBasedFileNamingAndTriggeringPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;&gt;</span><br><span class="line">                &lt;maxFileSize&gt;100MB&lt;&#x2F;maxFileSize&gt;</span><br><span class="line">            &lt;&#x2F;timeBasedFileNamingAndTriggeringPolicy&gt;</span><br><span class="line">            &lt;!--日志文件保留天数--&gt;</span><br><span class="line">            &lt;maxHistory&gt;15&lt;&#x2F;maxHistory&gt;</span><br><span class="line">        &lt;&#x2F;rollingPolicy&gt;</span><br><span class="line">        &lt;!-- 此日志文件只记录info级别的 --&gt;</span><br><span class="line">        &lt;filter class&#x3D;&quot;ch.qos.logback.classic.filter.LevelFilter&quot;&gt;</span><br><span class="line">            &lt;level&gt;INFO&lt;&#x2F;level&gt;</span><br><span class="line">            &lt;onMatch&gt;ACCEPT&lt;&#x2F;onMatch&gt;</span><br><span class="line">            &lt;onMismatch&gt;DENY&lt;&#x2F;onMismatch&gt;</span><br><span class="line">        &lt;&#x2F;filter&gt;</span><br><span class="line">    &lt;&#x2F;appender&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 时间滚动输出 level为 WARN 日志 --&gt;</span><br><span class="line">    &lt;appender name&#x3D;&quot;WARN_FILE&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</span><br><span class="line">        &lt;!-- 正在记录的日志文件的路径及文件名 --&gt;</span><br><span class="line">        &lt;file&gt;$&#123;log.path&#125;&#x2F;log_warn.log&lt;&#x2F;file&gt;</span><br><span class="line">        &lt;!--日志文件输出格式--&gt;</span><br><span class="line">        &lt;encoder&gt;</span><br><span class="line">            &lt;pattern&gt;%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;50&#125; - %msg%n&lt;&#x2F;pattern&gt;</span><br><span class="line">            &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;!-- 此处设置字符集 --&gt;</span><br><span class="line">        &lt;&#x2F;encoder&gt;</span><br><span class="line">        &lt;!-- 日志记录器的滚动策略，按日期，按大小记录 --&gt;</span><br><span class="line">        &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</span><br><span class="line">            &lt;fileNamePattern&gt;$&#123;log.path&#125;&#x2F;warn&#x2F;log-warn-%d&#123;yyyy-MM-dd&#125;.%i.log&lt;&#x2F;fileNamePattern&gt;</span><br><span class="line">            &lt;timeBasedFileNamingAndTriggeringPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;&gt;</span><br><span class="line">                &lt;maxFileSize&gt;100MB&lt;&#x2F;maxFileSize&gt;</span><br><span class="line">            &lt;&#x2F;timeBasedFileNamingAndTriggeringPolicy&gt;</span><br><span class="line">            &lt;!--日志文件保留天数--&gt;</span><br><span class="line">            &lt;maxHistory&gt;15&lt;&#x2F;maxHistory&gt;</span><br><span class="line">        &lt;&#x2F;rollingPolicy&gt;</span><br><span class="line">        &lt;!-- 此日志文件只记录warn级别的 --&gt;</span><br><span class="line">        &lt;filter class&#x3D;&quot;ch.qos.logback.classic.filter.LevelFilter&quot;&gt;</span><br><span class="line">            &lt;level&gt;warn&lt;&#x2F;level&gt;</span><br><span class="line">            &lt;onMatch&gt;ACCEPT&lt;&#x2F;onMatch&gt;</span><br><span class="line">            &lt;onMismatch&gt;DENY&lt;&#x2F;onMismatch&gt;</span><br><span class="line">        &lt;&#x2F;filter&gt;</span><br><span class="line">    &lt;&#x2F;appender&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!-- 时间滚动输出 level为 ERROR 日志 --&gt;</span><br><span class="line">    &lt;appender name&#x3D;&quot;ERROR_FILE&quot; class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</span><br><span class="line">        &lt;!-- 正在记录的日志文件的路径及文件名 --&gt;</span><br><span class="line">        &lt;file&gt;$&#123;log.path&#125;&#x2F;log_error.log&lt;&#x2F;file&gt;</span><br><span class="line">        &lt;!--日志文件输出格式--&gt;</span><br><span class="line">        &lt;encoder&gt;</span><br><span class="line">            &lt;pattern&gt;%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;50&#125; - %msg%n&lt;&#x2F;pattern&gt;</span><br><span class="line">            &lt;charset&gt;UTF-8&lt;&#x2F;charset&gt; &lt;!-- 此处设置字符集 --&gt;</span><br><span class="line">        &lt;&#x2F;encoder&gt;</span><br><span class="line">        &lt;!-- 日志记录器的滚动策略，按日期，按大小记录 --&gt;</span><br><span class="line">        &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</span><br><span class="line">            &lt;fileNamePattern&gt;$&#123;log.path&#125;&#x2F;error&#x2F;log-error-%d&#123;yyyy-MM-dd&#125;.%i.log&lt;&#x2F;fileNamePattern&gt;</span><br><span class="line">            &lt;timeBasedFileNamingAndTriggeringPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;&gt;</span><br><span class="line">                &lt;maxFileSize&gt;100MB&lt;&#x2F;maxFileSize&gt;</span><br><span class="line">            &lt;&#x2F;timeBasedFileNamingAndTriggeringPolicy&gt;</span><br><span class="line">            &lt;!--日志文件保留天数--&gt;</span><br><span class="line">            &lt;maxHistory&gt;15&lt;&#x2F;maxHistory&gt;</span><br><span class="line">        &lt;&#x2F;rollingPolicy&gt;</span><br><span class="line">        &lt;!-- 此日志文件只记录ERROR级别的 --&gt;</span><br><span class="line">        &lt;filter class&#x3D;&quot;ch.qos.logback.classic.filter.LevelFilter&quot;&gt;</span><br><span class="line">            &lt;level&gt;ERROR&lt;&#x2F;level&gt;</span><br><span class="line">            &lt;onMatch&gt;ACCEPT&lt;&#x2F;onMatch&gt;</span><br><span class="line">            &lt;onMismatch&gt;DENY&lt;&#x2F;onMismatch&gt;</span><br><span class="line">        &lt;&#x2F;filter&gt;</span><br><span class="line">    &lt;&#x2F;appender&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--</span><br><span class="line">        &lt;logger&gt;用来设置某一个包或者具体的某一个类的日志打印级别、以及指定&lt;appender&gt;。</span><br><span class="line">        &lt;logger&gt;仅有一个name属性，</span><br><span class="line">        一个可选的level和一个可选的addtivity属性。</span><br><span class="line">        name:用来指定受此logger约束的某一个包或者具体的某一个类。</span><br><span class="line">        level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，</span><br><span class="line">              如果未设置此属性，那么当前logger将会继承上级的级别。</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">        使用mybatis的时候，sql语句是debug下才会打印，而这里我们只配置了info，所以想要查看sql语句的话，有以下两种操作：</span><br><span class="line">        第一种把&lt;root level&#x3D;&quot;INFO&quot;&gt;改成&lt;root level&#x3D;&quot;DEBUG&quot;&gt;这样就会打印sql，不过这样日志那边会出现很多其他消息</span><br><span class="line">        第二种就是单独给mapper下目录配置DEBUG模式，代码如下，这样配置sql语句会打印，其他还是正常DEBUG级别：</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;!--开发环境:打印控制台--&gt;</span><br><span class="line">    &lt;springProfile name&#x3D;&quot;dev&quot;&gt;</span><br><span class="line">        &lt;!--可以输出项目中的debug日志，包括mybatis的sql日志--&gt;</span><br><span class="line">        &lt;logger name&#x3D;&quot;com.guli&quot; level&#x3D;&quot;INFO&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--</span><br><span class="line">            root节点是必选节点，用来指定最基础的日志输出级别，只有一个level属性</span><br><span class="line">            level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，默认是DEBUG</span><br><span class="line">            可以包含零个或多个appender元素。</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;root level&#x3D;&quot;INFO&quot;&gt;</span><br><span class="line">            &lt;appender-ref ref&#x3D;&quot;CONSOLE&quot; &#x2F;&gt;</span><br><span class="line">            &lt;appender-ref ref&#x3D;&quot;INFO_FILE&quot; &#x2F;&gt;</span><br><span class="line">            &lt;appender-ref ref&#x3D;&quot;WARN_FILE&quot; &#x2F;&gt;</span><br><span class="line">            &lt;appender-ref ref&#x3D;&quot;ERROR_FILE&quot; &#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;root&gt;</span><br><span class="line">    &lt;&#x2F;springProfile&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!--生产环境:输出到文件--&gt;</span><br><span class="line">    &lt;springProfile name&#x3D;&quot;pro&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;root level&#x3D;&quot;INFO&quot;&gt;</span><br><span class="line">            &lt;appender-ref ref&#x3D;&quot;CONSOLE&quot; &#x2F;&gt;</span><br><span class="line">            &lt;appender-ref ref&#x3D;&quot;DEBUG_FILE&quot; &#x2F;&gt;</span><br><span class="line">            &lt;appender-ref ref&#x3D;&quot;INFO_FILE&quot; &#x2F;&gt;</span><br><span class="line">            &lt;appender-ref ref&#x3D;&quot;ERROR_FILE&quot; &#x2F;&gt;</span><br><span class="line">            &lt;appender-ref ref&#x3D;&quot;WARN_FILE&quot; &#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;root&gt;</span><br><span class="line">    &lt;&#x2F;springProfile&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;configuration&gt;</span><br></pre></td></tr></table></figure><p><strong>3、异常信息输出到文件</strong> （1）全局异常处理类加注解 @Slf4j</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalExceptionHandler</span> </span>&#123;</span><br></pre></td></tr></table></figure><p>（2）异常输出语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log.error(e.getMsg());</span><br></pre></td></tr></table></figure><p><strong>4、将日志堆栈信息输出到文件</strong> 定义工具类 guli-framework-common下创建util包，创建ExceptionUtil.java工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.guli.common.util;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExceptionUtil</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getMessage</span><span class="params">(Exception e)</span> </span>&#123;</span><br><span class="line">        StringWriter sw = <span class="keyword">null</span>;</span><br><span class="line">        PrintWriter pw = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            sw = <span class="keyword">new</span> StringWriter();</span><br><span class="line">            pw = <span class="keyword">new</span> PrintWriter(sw);</span><br><span class="line">            <span class="comment">// 将出错的栈信息输出到printWriter中</span></span><br><span class="line">            e.printStackTrace(pw);</span><br><span class="line">            pw.flush();</span><br><span class="line">            sw.flush();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (sw != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    sw.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e1) &#123;</span><br><span class="line">                    e1.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (pw != <span class="keyword">null</span>) &#123;</span><br><span class="line">                pw.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sw.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log.error(ExceptionUtil.getMessage(e));</span><br></pre></td></tr></table></figure><p>GuliException中创建toString方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"GuliException&#123;"</span> +</span><br><span class="line">        <span class="string">"message="</span> + <span class="keyword">this</span>.getMessage() +</span><br><span class="line">        <span class="string">", code="</span> + code +</span><br><span class="line">        <span class="string">'&#125;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、前端开发"><a href="#四、前端开发" class="headerlink" title="四、前端开发"></a>四、前端开发</h2><p><strong>1、vscode创建工作区</strong> （1）创建空文件夹 （2）使用vscode打开创建的空文件夹 （3）把文件夹保存为工作区</p><h2 id="五、ES6-入门"><a href="#五、ES6-入门" class="headerlink" title="五、ES6 入门"></a>五、ES6 入门</h2><p><img src="https://i.loli.net/2020/10/28/sBIaNg5cUOfJj9V.png" alt="image-20201028200939426"></p><h2 id="六、vue入门"><a href="#六、vue入门" class="headerlink" title="六、vue入门"></a>六、vue入门</h2><p>vue入门1 vue入门2 <strong>1、抽取vue代码片段</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;vue htm&quot;: &#123;</span><br><span class="line">        &quot;scope&quot;: &quot;html&quot;,</span><br><span class="line">        &quot;prefix&quot;: &quot;vuehtml&quot;,</span><br><span class="line">        &quot;body&quot;: [</span><br><span class="line">            &quot;&lt;!DOCTYPE html&gt;&quot;,</span><br><span class="line">            &quot;&lt;html lang&#x3D;\&quot;en\&quot;&gt;&quot;,</span><br><span class="line">            &quot;&quot;,</span><br><span class="line">            &quot;&lt;head&gt;&quot;,</span><br><span class="line">            &quot;    &lt;meta charset&#x3D;\&quot;UTF-8\&quot;&gt;&quot;,</span><br><span class="line">            &quot;    &lt;meta name&#x3D;\&quot;viewport\&quot; content&#x3D;\&quot;width&#x3D;device-width, initial-scale&#x3D;1.0\&quot;&gt;&quot;,</span><br><span class="line">            &quot;    &lt;meta http-equiv&#x3D;\&quot;X-UA-Compatible\&quot; content&#x3D;\&quot;ie&#x3D;edge\&quot;&gt;&quot;,</span><br><span class="line">            &quot;    &lt;title&gt;Document&lt;&#x2F;title&gt;&quot;,</span><br><span class="line">            &quot;&lt;&#x2F;head&gt;&quot;,</span><br><span class="line">            &quot;&quot;,</span><br><span class="line">            &quot;&lt;body&gt;&quot;,</span><br><span class="line">            &quot;    &lt;div id&#x3D;\&quot;app\&quot;&gt;&quot;,</span><br><span class="line">            &quot;&quot;,</span><br><span class="line">            &quot;    &lt;&#x2F;div&gt;&quot;,</span><br><span class="line">            &quot;    &lt;script src&#x3D;\&quot;vue.min.js\&quot;&gt;&lt;&#x2F;script&gt;&quot;,</span><br><span class="line">            &quot;    &lt;script&gt;&quot;,</span><br><span class="line">            &quot;        new Vue(&#123;&quot;,</span><br><span class="line">            &quot;            el: &#39;#app&#39;,&quot;,</span><br><span class="line">            &quot;            data: &#123;&quot;,</span><br><span class="line">            &quot;                $1&quot;,</span><br><span class="line">            &quot;            &#125;&quot;,</span><br><span class="line">            &quot;        &#125;)&quot;,</span><br><span class="line">            &quot;    &lt;&#x2F;script&gt;&quot;,</span><br><span class="line">            &quot;&lt;&#x2F;body&gt;&quot;,</span><br><span class="line">            &quot;&quot;,</span><br><span class="line">            &quot;&lt;&#x2F;html&gt;&quot;,</span><br><span class="line">        ],</span><br><span class="line">        &quot;description&quot;: &quot;my vue template in html&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="七、vue组件"><a href="#七、vue组件" class="headerlink" title="七、vue组件"></a>七、vue组件</h2><p>组件（Component）是 Vue.js 最强大的功能之一。 组件可以扩展 HTML 元素，封装可重用的代码。 组件系统让我们可以用独立可复用的小组件来构建大型应用，几乎任意类型的应用的界面都可以抽象为一个组件树： <img src="https://i.loli.net/2020/10/28/nILQqizpe6CB3FE.png" alt="img"> <strong>1、局部组件</strong> 定义组件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">'#app'</span>,</span><br><span class="line">    <span class="comment">// 定义局部组件，这里可以定义多个局部组件</span></span><br><span class="line">    components: &#123;</span><br><span class="line">        <span class="comment">//组件的名字</span></span><br><span class="line">        <span class="string">'Navbar'</span>: &#123;</span><br><span class="line">            <span class="comment">//组件的内容</span></span><br><span class="line">            template: <span class="string">'&lt;ul&gt;&lt;li&gt;首页&lt;/li&gt;&lt;li&gt;学员管理&lt;/li&gt;&lt;/ul&gt;'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>使用组件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;Navbar&gt;&lt;&#x2F;Navbar&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p><strong>2、全局组件</strong> 定义全局组件：components/Navbar.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义全局组件</span></span><br><span class="line">Vue.component(<span class="string">'Navbar'</span>, &#123;</span><br><span class="line">    template: <span class="string">'&lt;ul&gt;&lt;li&gt;首页&lt;/li&gt;&lt;li&gt;学员管理&lt;/li&gt;&lt;li&gt;讲师管理&lt;/li&gt;&lt;/ul&gt;'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;Navbar&gt;&lt;&#x2F;Navbar&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;components&#x2F;Navbar.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var app &#x3D; new Vue(&#123;</span><br><span class="line">        el: &#39;#app&#39;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p><strong>3、实例的生命周期</strong> <img src="https://i.loli.net/2020/10/28/qelPIHWiAxRLG6c.png" alt="Vue å®ä¾çå½å¨æ"> <strong>重点使用：</strong></p><ul><li>before</li><li>monted</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        new Vue(&#123;</span><br><span class="line">            el: &#39;#app&#39;,</span><br><span class="line">            data: &#123;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            &#x2F;&#x2F;页面渲染之前执行</span><br><span class="line">            created()&#123;</span><br><span class="line">                &#x2F;&#x2F;断点</span><br><span class="line">                debugger</span><br><span class="line">                console.log(&quot;created&quot;);</span><br><span class="line">            &#125;,</span><br><span class="line">            &#x2F;&#x2F;页面渲染之后执行</span><br><span class="line">            mounted()&#123;</span><br><span class="line">                debugger</span><br><span class="line">                console.log(&quot;monted&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h2 id="八、vue路由"><a href="#八、vue路由" class="headerlink" title="八、vue路由"></a>八、vue路由</h2><p>Vue.js 路由允许我们通过不同的 URL 访问不同的内容。 通过 Vue.js 可以实现多视图的单页Web应用（single page web application，SPA）。 Vue.js 路由需要载入 vue-router 库 <strong>1、引入js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"vue.min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script src="vue-router.min.js"&gt;&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure><p><strong>2、编写html</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;h1&gt;Hello App!&lt;&#x2F;h1&gt;</span><br><span class="line">    &lt;p&gt;</span><br><span class="line">        &lt;!-- 使用 router-link 组件来导航. --&gt;</span><br><span class="line">        &lt;!-- 通过传入 &#96;to&#96; 属性指定链接. --&gt;</span><br><span class="line">        &lt;!-- &lt;router-link&gt; 默认会被渲染成一个 &#96;&lt;a&gt;&#96; 标签 --&gt;</span><br><span class="line">        &lt;router-link to&#x3D;&quot;&#x2F;&quot;&gt;首页&lt;&#x2F;router-link&gt;</span><br><span class="line">        &lt;router-link to&#x3D;&quot;&#x2F;student&quot;&gt;会员管理&lt;&#x2F;router-link&gt;</span><br><span class="line">        &lt;router-link to&#x3D;&quot;&#x2F;teacher&quot;&gt;讲师管理&lt;&#x2F;router-link&gt;</span><br><span class="line">    &lt;&#x2F;p&gt;</span><br><span class="line">    &lt;!-- 路由出口 --&gt;</span><br><span class="line">    &lt;!-- 路由匹配到的组件将渲染在这里 --&gt;</span><br><span class="line">    &lt;router-view&gt;&lt;&#x2F;router-view&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p><strong>3、编写js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 1. 定义（路由）组件。</span></span><br><span class="line">    <span class="comment">// 可以从其他文件 import 进来</span></span><br><span class="line">    <span class="keyword">const</span> Welcome = &#123; <span class="attr">template</span>: <span class="string">'&lt;div&gt;欢迎&lt;/div&gt;'</span> &#125;</span><br><span class="line">    <span class="keyword">const</span> Student = &#123; <span class="attr">template</span>: <span class="string">'&lt;div&gt;student list&lt;/div&gt;'</span> &#125;</span><br><span class="line">    <span class="keyword">const</span> Teacher = &#123; <span class="attr">template</span>: <span class="string">'&lt;div&gt;teacher list&lt;/div&gt;'</span> &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 定义路由</span></span><br><span class="line">    <span class="comment">// 每个路由应该映射一个组件。</span></span><br><span class="line">    <span class="keyword">const</span> routes = [</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">'/'</span>, <span class="attr">redirect</span>: <span class="string">'/welcome'</span> &#125;, <span class="comment">//设置默认指向的路径</span></span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">'/welcome'</span>, <span class="attr">component</span>: Welcome &#125;,</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">'/student'</span>, <span class="attr">component</span>: Student &#125;,</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">'/teacher'</span>, <span class="attr">component</span>: Teacher &#125;</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3. 创建 router 实例，然后传 `routes` 配置</span></span><br><span class="line">    <span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">        routes <span class="comment">// （缩写）相当于 routes: routes</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4. 创建和挂载根实例。</span></span><br><span class="line">    <span class="comment">// 从而让整个应用都有路由功能</span></span><br><span class="line">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">'#app'</span>,</span><br><span class="line">        router</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 现在，应用已经启动了！</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：&lt;/p&gt;
&lt;p&gt;es6&lt;/p&gt;
&lt;p&gt;vue入门&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术分享" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="谷粒学院项目" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>谷粒学院开发day02</title>
    <link href="https://liaotao421.github.io/posts/359b46c9/"/>
    <id>https://liaotao421.github.io/posts/359b46c9/</id>
    <published>2020-10-26T04:38:10.000Z</published>
    <updated>2020-11-25T15:39:31.159Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：</p><p>swagger接口测试</p><p>统一返回结果与统一异常处理</p></blockquote><a id="more"></a><h2 id="1、前后端分离开发"><a href="#1、前后端分离开发" class="headerlink" title="1、前后端分离开发"></a>1、前后端分离开发</h2><p><img src="https://i.loli.net/2020/10/22/Gd9M6oRnjrHFwVt.png" alt="image-20201022213810834"></p><h2 id="2、数据库设计规约"><a href="#2、数据库设计规约" class="headerlink" title="2、数据库设计规约"></a>2、数据库设计规约</h2><p>以下规约只针对本模块，更全面的文档参考《阿里巴巴Java开发手册》：五、MySQL数据库 1、库名与应用名称尽量一致 2、表名、字段名必须使用小写字母或数字，禁止出现数字开头， 3、表名不使用复数名词 4、表的命名最好是加上“业务名称_表的作用”。如，edu_teacher 5、表必备三字段：id, gmt_create, gmt_modified 说明： 其中 id 必为主键，类型为 bigint unsigned、单表时自增、步长为 1。 （如果使用分库分表集群部署，则id类型为verchar，非自增，业务中使用分布式id生成器） gmt_create, gmt_modified 的类型均为 datetime 类型，前者现在时表示主动创建，后者过去分词表示被 动更新。 6、单表行数超过 500 万行或者单表容量超过 2GB，才推荐进行分库分表。 说明：如果预计三年后的数据量根本达不到这个级别，请不要在创建表时就分库分表。 7、表达是与否概念的字段，必须使用 is_xxx 的方式命名，数据类型是 unsigned tinyint （1 表示是，0 表示否）。 说明：任何字段如果为非负数，必须是 unsigned。 注意：POJO 类中的任何布尔类型的变量，都不要加 is 前缀。数据库表示是与否的值，使用 tinyint 类型，坚持 is_xxx 的 命名方式是为了明确其取值含义与取值范围。 正例：表达逻辑删除的字段名 is_deleted，1 表示删除，0 表示未删除。 8、小数类型为 decimal，禁止使用 float 和 double。 说明：float 和 double 在存储的时候，存在精度损失的问题，很可能在值的比较时，得到不 正确的结果。如果存储的数据范围超过 decimal 的范围，建议将数据拆成整数和小数分开存储。 9、如果存储的字符串长度几乎相等，使用 char 定长字符串类型。 10、varchar 是可变长字符串，不预先分配存储空间，长度不要超过 5000，如果存储长度大于此值，定义字段类型为 text，独立出来一张表，用主键来对应，避免影响其它字段索 引效率。 11、唯一索引名为 uk_字段名；普通索引名则为 idx_字段名。 说明：uk_ 即 unique key；idx_ 即 index 的简称 12、不得使用外键与级联，一切外键概念必须在应用层解决。外键与级联更新适用于单机低并发，不适合分布式、高并发集群；级联更新是强阻塞，存在数据库更新风暴的风险；外键影响数据库的插入速度。</p><h2 id="3、创建项目结构——父工程"><a href="#3、创建项目结构——父工程" class="headerlink" title="3、创建项目结构——父工程"></a>3、创建项目结构——父工程</h2><p><img src="https://i.loli.net/2020/10/22/ri8eG6IOKvVPs4J.png" alt="image-20201022230515811"> 1、创建springboot项目 guli_parent 2、删除src目录 3、配置pom.xml <strong>修改版本为 ：2.2.1.RELEASE</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;version&gt;2.2.1.RELEASE&lt;&#x2F;version&gt;</span><br></pre></td></tr></table></figure><p><strong>节点后面添加 pom类型</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;artifactId&gt;guli_parent&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;packaging&gt;pom&lt;&#x2F;packaging&gt;</span><br></pre></td></tr></table></figure><p><strong>删除pom.xml中的****<code>&lt;dependencies&gt;内容</code></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 以下内容删除 --&gt;</span><br><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;scope&gt;test&lt;&#x2F;scope&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure><p><strong>添加 确定依赖的版本</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;properties&gt;</span><br><span class="line">    &lt;java.version&gt;1.8&lt;&#x2F;java.version&gt;</span><br><span class="line">    &lt;guli.version&gt;0.0.1-SNAPSHOT&lt;&#x2F;guli.version&gt;</span><br><span class="line">    &lt;mybatis-plus.version&gt;3.0.5&lt;&#x2F;mybatis-plus.version&gt;</span><br><span class="line">    &lt;velocity.version&gt;2.0&lt;&#x2F;velocity.version&gt;</span><br><span class="line">    &lt;swagger.version&gt;2.7.0&lt;&#x2F;swagger.version&gt;</span><br><span class="line">    &lt;aliyun.oss.version&gt;2.8.3&lt;&#x2F;aliyun.oss.version&gt;</span><br><span class="line">    &lt;jodatime.version&gt;2.10.1&lt;&#x2F;jodatime.version&gt;</span><br><span class="line">    &lt;poi.version&gt;3.17&lt;&#x2F;poi.version&gt;</span><br><span class="line">    &lt;commons-fileupload.version&gt;1.3.1&lt;&#x2F;commons-fileupload.version&gt;</span><br><span class="line">    &lt;commons-io.version&gt;2.6&lt;&#x2F;commons-io.version&gt;</span><br><span class="line">    &lt;httpclient.version&gt;4.5.1&lt;&#x2F;httpclient.version&gt;</span><br><span class="line">    &lt;jwt.version&gt;0.7.0&lt;&#x2F;jwt.version&gt;</span><br><span class="line">    &lt;aliyun-java-sdk-core.version&gt;4.3.3&lt;&#x2F;aliyun-java-sdk-core.version&gt;</span><br><span class="line">    &lt;aliyun-sdk-oss.version&gt;3.1.0&lt;&#x2F;aliyun-sdk-oss.version&gt;</span><br><span class="line">    &lt;aliyun-java-sdk-vod.version&gt;2.15.2&lt;&#x2F;aliyun-java-sdk-vod.version&gt;</span><br><span class="line">    &lt;aliyun-java-vod-upload.version&gt;1.4.11&lt;&#x2F;aliyun-java-vod-upload.version&gt;</span><br><span class="line">    &lt;aliyun-sdk-vod-upload.version&gt;1.4.11&lt;&#x2F;aliyun-sdk-vod-upload.version&gt;</span><br><span class="line">    &lt;fastjson.version&gt;1.2.28&lt;&#x2F;fastjson.version&gt;</span><br><span class="line">    &lt;gson.version&gt;2.8.2&lt;&#x2F;gson.version&gt;</span><br><span class="line">    &lt;json.version&gt;20170516&lt;&#x2F;json.version&gt;</span><br><span class="line">    &lt;commons-dbutils.version&gt;1.7&lt;&#x2F;commons-dbutils.version&gt;</span><br><span class="line">    &lt;canal.client.version&gt;1.1.0&lt;&#x2F;canal.client.version&gt;</span><br><span class="line">    &lt;docker.image.prefix&gt;zx&lt;&#x2F;docker.image.prefix&gt;</span><br><span class="line">    &lt;cloud-alibaba.version&gt;0.2.2.RELEASE&lt;&#x2F;cloud-alibaba.version&gt;</span><br><span class="line">&lt;&#x2F;properties&gt;</span><br></pre></td></tr></table></figure><p><strong>配置 锁定依赖的版本</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencyManagement&gt;</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;!--Spring Cloud--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-dependencies&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;Hoxton.RELEASE&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;type&gt;pom&lt;&#x2F;type&gt;</span><br><span class="line">            &lt;scope&gt;import&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-alibaba-dependencies&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;cloud-alibaba.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;type&gt;pom&lt;&#x2F;type&gt;</span><br><span class="line">            &lt;scope&gt;import&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!--mybatis-plus 持久层--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.baomidou&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-plus-boot-starter&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;mybatis-plus.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!-- velocity 模板引擎, Mybatis Plus 代码生成器需要 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.velocity&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;velocity-engine-core&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;velocity.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!--swagger--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.springfox&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;springfox-swagger2&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;swagger.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!--swagger ui--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.springfox&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;springfox-swagger-ui&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;swagger.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!--aliyunOSS--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.aliyun.oss&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;aliyun-sdk-oss&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;aliyun.oss.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!--日期时间工具--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;joda-time&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;joda-time&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;jodatime.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!--xls--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.poi&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;poi&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;poi.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!--xlsx--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.poi&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;poi-ooxml&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;poi.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!--文件上传--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;commons-fileupload&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-fileupload&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;commons-fileupload.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!--commons-io--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;commons-io&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-io&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;commons-io.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!--httpclient--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.httpcomponents&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;httpclient&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;httpclient.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.google.code.gson&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;gson&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;gson.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!-- JWT --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.jsonwebtoken&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jjwt&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;jwt.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!--aliyun--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.aliyun&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;aliyun-java-sdk-core&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;aliyun-java-sdk-core.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.aliyun.oss&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;aliyun-sdk-oss&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;aliyun-sdk-oss.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.aliyun&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;aliyun-java-sdk-vod&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;aliyun-java-sdk-vod.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.aliyun&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;aliyun-java-vod-upload&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;aliyun-java-vod-upload.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.aliyun&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;aliyun-sdk-vod-upload&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;aliyun-sdk-vod-upload.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;fastjson&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;fastjson.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.json&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;json&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;json.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;commons-dbutils&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-dbutils&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;commons-dbutils.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba.otter&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;canal.client&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;canal.client.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;&#x2F;dependencies&gt;</span><br><span class="line">&lt;&#x2F;dependencyManagement&gt;</span><br></pre></td></tr></table></figure><h2 id="4、创建项目结构——service模块"><a href="#4、创建项目结构——service模块" class="headerlink" title="4、创建项目结构——service模块"></a>4、创建项目结构——service模块</h2><p>1、创建maven项目 service 2、 节点后面添加 pom类型</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>service<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、删除src 4、添加项目所需要的依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-starter-netflix-ribbon&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--hystrix依赖，主要是用  @HystrixCommand --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-starter-netflix-hystrix&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--服务注册--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;!--服务调用--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-starter-openfeign&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--mybatis-plus--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.baomidou&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mybatis-plus-boot-starter&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--mysql--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- velocity 模板引擎, Mybatis Plus 代码生成器需要 --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.velocity&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;velocity-engine-core&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--swagger--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;io.springfox&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;springfox-swagger2&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;io.springfox&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;springfox-swagger-ui&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--lombok用来简化实体类：需要安装lombok插件--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.projectlombok&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;lombok&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--xls--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.poi&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;poi&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.poi&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;poi-ooxml&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;commons-fileupload&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;commons-fileupload&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--httpclient--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.httpcomponents&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;httpclient&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;!--commons-io--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;commons-io&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;commons-io&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;!--gson--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.google.code.gson&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;gson&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;junit&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;junit&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;4.12&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure><p>5、在service下再创建maven子模块 <strong>完成创建后的项目目录结构</strong> <img src="https://i.loli.net/2020/10/22/gj9XmdPzqlxLH87.png" alt="image-20201022231508942"></p><h2 id="5、开发讲师管理模块"><a href="#5、开发讲师管理模块" class="headerlink" title="5、开发讲师管理模块"></a>5、开发讲师管理模块</h2><p><strong>1、创建application.properties配置文件</strong></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 服务端口</span></span><br><span class="line"><span class="meta">server.port</span>=<span class="string">8001</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务名 (spring-cloud用到)</span></span><br><span class="line"><span class="meta">spring.application.name</span>=<span class="string">service-edu</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 环境设置：dev、test、prod</span></span><br><span class="line"><span class="meta">spring.profiles.active</span>=<span class="string">dev</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql数据库连接</span></span><br><span class="line"><span class="meta">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/guli?</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">123456</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#mybatis日志</span></span><br><span class="line"><span class="meta">mybatis-plus.configuration.log-impl</span>=<span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><p><strong>2、编写controller service mapper 代码内容</strong> <strong>mp提供代码生成器，生成相关代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CodeGenerator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建代码生成器</span></span><br><span class="line">        AutoGenerator mpg = <span class="keyword">new</span> AutoGenerator();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、全局配置</span></span><br><span class="line">        GlobalConfig gc = <span class="keyword">new</span> GlobalConfig();</span><br><span class="line">        <span class="comment">/*String projectPath = System.getProperty("user.dir");*/</span></span><br><span class="line">        <span class="comment">//推荐使用绝对路径</span></span><br><span class="line">        gc.setOutputDir(<span class="string">"G:\\idea_project\\gulixueyuan\\guli_parent\\service\\service_edu"</span> + <span class="string">"/src/main/java"</span>);</span><br><span class="line">        gc.setAuthor(<span class="string">"liaotao"</span>);</span><br><span class="line">        gc.setOpen(<span class="keyword">false</span>); <span class="comment">//生成后是否打开资源管理器</span></span><br><span class="line">        gc.setFileOverride(<span class="keyword">false</span>); <span class="comment">//重新生成时文件是否覆盖</span></span><br><span class="line">        gc.setServiceName(<span class="string">"%sService"</span>); <span class="comment">//去掉Service接口的首字母I</span></span><br><span class="line">        gc.setIdType(IdType.ID_WORKER); <span class="comment">//主键策略</span></span><br><span class="line">        gc.setDateType(DateType.ONLY_DATE);<span class="comment">//定义生成的实体类中日期类型</span></span><br><span class="line">        gc.setSwagger2(<span class="keyword">true</span>);<span class="comment">//开启Swagger2模式</span></span><br><span class="line"></span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、数据源配置</span></span><br><span class="line">        DataSourceConfig dsc = <span class="keyword">new</span> DataSourceConfig();</span><br><span class="line">        dsc.setUrl(<span class="string">"jdbc:mysql://localhost:3306/guli"</span>);</span><br><span class="line">        dsc.setDriverName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">"root"</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">"123456"</span>);</span><br><span class="line">        dsc.setDbType(DbType.MYSQL);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、包配置</span></span><br><span class="line">        PackageConfig pc = <span class="keyword">new</span> PackageConfig();</span><br><span class="line">        pc.setModuleName(<span class="string">"eduservice"</span>); <span class="comment">//模块名</span></span><br><span class="line">        pc.setParent(<span class="string">"com.cyfwlp"</span>);</span><br><span class="line">        <span class="comment">//生成 com.cyfwlp.eduservice</span></span><br><span class="line">        pc.setController(<span class="string">"controller"</span>);</span><br><span class="line">        pc.setEntity(<span class="string">"entity"</span>);</span><br><span class="line">        pc.setService(<span class="string">"service"</span>);</span><br><span class="line">        pc.setMapper(<span class="string">"mapper"</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5、策略配置</span></span><br><span class="line">        StrategyConfig strategy = <span class="keyword">new</span> StrategyConfig();</span><br><span class="line">        <span class="comment">//加表的名称</span></span><br><span class="line">        strategy.setInclude(<span class="string">"edu_teacher"</span>);</span><br><span class="line"></span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);<span class="comment">//数据库表映射到实体的命名策略</span></span><br><span class="line">        strategy.setTablePrefix(pc.getModuleName() + <span class="string">"_"</span>); <span class="comment">//生成实体时去掉表前缀</span></span><br><span class="line"></span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);<span class="comment">//数据库表字段映射到实体的命名策略</span></span><br><span class="line">        strategy.setEntityLombokModel(<span class="keyword">true</span>); <span class="comment">// lombok 模型 @Accessors(chain = true) setter链式操作</span></span><br><span class="line"></span><br><span class="line">        strategy.setRestControllerStyle(<span class="keyword">true</span>); <span class="comment">//restful api风格控制器</span></span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="keyword">true</span>); <span class="comment">//url中驼峰转连字符</span></span><br><span class="line"></span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6、执行</span></span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3、编写controller</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/eduservice/teacher"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EduTeacherController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注入service</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EduTeacherService teacherService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.查询讲师表中的所有数据</span></span><br><span class="line">    <span class="comment">//rest风格</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findAll"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;EduTeacher&gt; <span class="title">findAllTeacher</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> teacherService.list(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4、编写springboot启动类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EduApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(EduApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>5、编写配置类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan</span>(<span class="string">"com.cyfwlp.eduservice.mapper"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EduConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>6、统一返回的json时间格式</strong></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#返回json的全局时间格式</span></span><br><span class="line"><span class="meta">spring.jackson.date-format</span>=<span class="string">yyyy-MM-dd HH:mm:ss</span></span><br><span class="line"><span class="meta">spring.jackson.time-zone</span>=<span class="string">GMT+8</span></span><br></pre></td></tr></table></figure><h2 id="6、整合swagger进行接口测试"><a href="#6、整合swagger进行接口测试" class="headerlink" title="6、整合swagger进行接口测试"></a>6、整合swagger进行接口测试</h2><p>前后端分离开发模式中，api文档是最好的沟通方式。 Swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务。</p><ol><li>及时性 (接口变更后，能够及时准确地通知相关前后端开发人员)</li><li>规范性 (并且保证接口的规范性，如接口的地址，请求方式，参数及响应格式和错误信息)</li><li>一致性 (接口信息一致，不会出现因开发人员拿到的文档版本不一致，而出现分歧)</li><li>可测性 (直接在接口文档上进行测试，以方便理解业务)</li></ol><p><strong>1、guli_parent下建立子模块common，common再创建子模块service_base</strong> common引入相关依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided &lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--mybatis-plus--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.baomidou&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-plus-boot-starter&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided &lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--lombok用来简化实体类：需要安装lombok插件--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.projectlombok&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;lombok&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided &lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--swagger--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.springfox&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;springfox-swagger2&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided &lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.springfox&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;springfox-swagger-ui&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided &lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- redis --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-data-redis&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- spring2.X集成redis所需common-pool2</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.commons&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-pool2&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.6.0&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;--&gt;</span><br><span class="line">    &lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure><p><strong>2、在模块service-base中，创建swagger的配置类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger</span>2 <span class="comment">//</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">webApiConfig</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .groupName(<span class="string">"webApi"</span>)</span><br><span class="line">                .apiInfo(webApiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                .paths(Predicates.not(PathSelectors.regex(<span class="string">"/admin/.*"</span>)))</span><br><span class="line">                .paths(Predicates.not(PathSelectors.regex(<span class="string">"/error.*"</span>)))</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ApiInfo <span class="title">webApiInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">                .title(<span class="string">"网站-课程中心API文档"</span>)</span><br><span class="line">                .description(<span class="string">"本文档描述了课程中心微服务接口定义"</span>)</span><br><span class="line">                .version(<span class="string">"1.0"</span>)</span><br><span class="line">                .contact(<span class="keyword">new</span> Contact(<span class="string">"Helen"</span>, <span class="string">"http://atguigu.com"</span>, <span class="string">"55317332@qq.com"</span>))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3、service_edu引入service_base</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.cyfwlp&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;service_base&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;0.0.1-SNAPSHOT&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure><p><strong>4、启动类添加 @ComponentScan注解，设置包扫描的规则</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(basePackages = &#123;<span class="string">"com.cyfwlp"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EduApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(EduApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>5、访问swagger</strong> <a href="http://localhost:8002/swagger-ui.html/">http://localhost:8002/swagger-ui.html/</a> 参数说明 定义在类上：@Api 定义在方法上：@ApiOperation 定义在参数上：@ApiParam</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Api</span>(description=<span class="string">"讲师管理"</span>)</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/admin/edu/teacher"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TeacherAdminController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TeacherService teacherService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"所有讲师列表"</span>)</span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Teacher&gt; <span class="title">list</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> teacherService.list(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"根据ID删除讲师"</span>)</span><br><span class="line">    <span class="meta">@DeleteMapping</span>(<span class="string">"&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">removeById</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            @ApiParam(name = <span class="string">"id"</span>, value = <span class="string">"讲师ID"</span>, required = <span class="keyword">true</span>)</span></span></span><br><span class="line"><span class="function">            @PathVariable String id)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> teacherService.removeById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7、统一返回数据格式"><a href="#7、统一返回数据格式" class="headerlink" title="7、统一返回数据格式"></a>7、统一返回数据格式</h2><p>项目中我们会将响应封装成json返回，一般我们会将所有接口的数据格式统一， 使前端(iOS Android, Web)对数据的操作更一致、轻松。一般情况下，统一返回数据格式没有固定的格式，只要能描述清楚返回的数据状态以及要返回的具体数据就可以。但是一般会包含状态码、返回消息、数据这几部分内容 例如，我们的系统要求返回的基本数据格式如下： <strong>列表：</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"success"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"code"</span>: <span class="number">20000</span>,</span><br><span class="line">  <span class="attr">"message"</span>: <span class="string">"成功"</span>,</span><br><span class="line">  <span class="attr">"data"</span>: &#123;</span><br><span class="line">    <span class="attr">"items"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="string">"1"</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"刘德华"</span>,</span><br><span class="line">        <span class="attr">"intro"</span>: <span class="string">"毕业于师范大学数学系，热爱教育事业，执教数学思维6年有余"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>分页：</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"success"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"code"</span>: <span class="number">20000</span>,</span><br><span class="line">  <span class="attr">"message"</span>: <span class="string">"成功"</span>,</span><br><span class="line">  <span class="attr">"data"</span>: &#123;</span><br><span class="line">    <span class="attr">"total"</span>: <span class="number">17</span>,</span><br><span class="line">    <span class="attr">"rows"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="string">"1"</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"刘德华"</span>,</span><br><span class="line">        <span class="attr">"intro"</span>: <span class="string">"毕业于师范大学数学系，热爱教育事业，执教数学思维6年有余"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>没有返回数据：</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"success"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"code"</span>: <span class="number">20000</span>,</span><br><span class="line">  <span class="attr">"message"</span>: <span class="string">"成功"</span>,</span><br><span class="line">  <span class="attr">"data"</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>失败：</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"success"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"code"</span>: <span class="number">20001</span>,</span><br><span class="line">  <span class="attr">"message"</span>: <span class="string">"失败"</span>,</span><br><span class="line">  <span class="attr">"data"</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>因此，我们定义统一结果</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"success"</span>: 布尔, <span class="comment">//响应是否成功</span></span><br><span class="line">  <span class="attr">"code"</span>: 数字, <span class="comment">//响应码</span></span><br><span class="line">  <span class="attr">"message"</span>: 字符串, <span class="comment">//返回消息</span></span><br><span class="line">  <span class="attr">"data"</span>: HashMap <span class="comment">//返回数据，放在键值对中</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1、在common模块创建子模块 common_utils 2、创建interface，定义数据返回状态码 （或者使用枚举类）</p><ul><li>成功 20000</li><li>失败 20001</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ResultCode</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Integer SUCCESS = <span class="number">20000</span>; <span class="comment">//成功</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Integer ERROR = <span class="number">20001</span>; <span class="comment">//失败</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、定义返回的数据格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">R</span> </span>&#123;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"是否成功"</span>)</span><br><span class="line">    <span class="keyword">private</span> Boolean success;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"返回码"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"返回消息"</span>)</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"返回数据"</span>)</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, Object&gt; data = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造方法私有化</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">R</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> R <span class="title">ok</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        R r = <span class="keyword">new</span> R();</span><br><span class="line">        r.setSuccess(<span class="keyword">true</span>);</span><br><span class="line">        r.setCode(ResultCode.SUCCESS);</span><br><span class="line">        r.setMessage(<span class="string">"成功"</span>);</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> R <span class="title">error</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        R r = <span class="keyword">new</span> R();</span><br><span class="line">        r.setSuccess(<span class="keyword">false</span>);</span><br><span class="line">        r.setCode(ResultCode.ERROR);</span><br><span class="line">        r.setMessage(<span class="string">"失败"</span>);</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">success</span><span class="params">(Boolean success)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setSuccess(success);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">message</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setMessage(message);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">code</span><span class="params">(Integer code)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setCode(code);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">data</span><span class="params">(String key, Object value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data.put(key, value);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">data</span><span class="params">(Map&lt;String, Object&gt; map)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setData(map);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、使用方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation</span>(value = <span class="string">"所有讲师列表"</span>)</span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/findAll"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">findAllTeacher</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    List&lt;EduTeacher&gt; list = teacherService.list(<span class="keyword">null</span>);</span><br><span class="line">    <span class="comment">//链式编程</span></span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">"items"</span>,list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8、全局异常处理"><a href="#8、全局异常处理" class="headerlink" title="8、全局异常处理"></a>8、全局异常处理</h2><p>在service-base中创建统一异常处理类GlobalExceptionHandler.java：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalExceptionHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 指定出现什么异常执行这个方法</span></span><br><span class="line">    <span class="meta">@ResponseBody</span> <span class="comment">//为了返回数据</span></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(Exception<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">R</span> <span class="title">error</span>(<span class="title">Exception</span> <span class="title">e</span>) </span>&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> R.error().message(<span class="string">"执行了全局异常处理.."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：&lt;/p&gt;
&lt;p&gt;swagger接口测试&lt;/p&gt;
&lt;p&gt;统一返回结果与统一异常处理&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术分享" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="谷粒学院项目" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>谷粒学院开发day01</title>
    <link href="https://liaotao421.github.io/posts/ac921773/"/>
    <id>https://liaotao421.github.io/posts/ac921773/</id>
    <published>2020-10-23T15:21:48.000Z</published>
    <updated>2020-11-25T15:38:55.062Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：</p><p>项目简介、mybatisPlus</p></blockquote><a id="more"></a><h2 id="1、项目功能模块"><a href="#1、项目功能模块" class="headerlink" title="1、项目功能模块"></a>1、项目功能模块</h2><p><img src="https://i.loli.net/2020/10/21/YEe5wgdvnxkFmlb.png" alt="image-20201021214203595"></p><h2 id="2、项目使用的技术"><a href="#2、项目使用的技术" class="headerlink" title="2、项目使用的技术"></a>2、项目使用的技术</h2><p><img src="https://i.loli.net/2020/10/21/lmgKYdqvU4QusO9.png" alt="image-20201021214214734"></p><h2 id="3、MybatisPlus"><a href="#3、MybatisPlus" class="headerlink" title="3、MybatisPlus"></a>3、MybatisPlus</h2><p><a href="https://github.com/baomidou/mybatis-plus">MyBatis-Plus</a>（简称 MP）是一个 <a href="http://www.mybatis.org/mybatis-3/">MyBatis</a> 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生</p><h3 id="（1）mybatisPlus快速入门"><a href="#（1）mybatisPlus快速入门" class="headerlink" title="（1）mybatisPlus快速入门"></a>（1）mybatisPlus快速入门</h3><p><strong>spingboot版本：2.1.1</strong> 1、引入依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--mybatis-plus--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.baomidou&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mybatis-plus-boot-starter&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.0.5&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--mysql--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;5.1.32&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--lombok用来简化实体类--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.projectlombok&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;lombok&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>2、配置application.properties <strong>注意mysql版本不同对应的驱动类名不同</strong></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#mysql数据库连接</span></span><br><span class="line"><span class="meta">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/mybatis_plus</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><p>3、编写代码 <strong>@Data注解，不需要手动写get，set方法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tao.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>mapper继承 BaseMapper接口，不需要编写xxxMapper.xml</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BaseMapper</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteById</span><span class="params">(Serializable var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteByMap</span><span class="params">(@Param(<span class="string">"cm"</span>)</span> Map&lt;String, Object&gt; var1)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">delete</span><span class="params">(@Param(<span class="string">"ew"</span>)</span> Wrapper&lt;T&gt; var1)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteBatchIds</span><span class="params">(@Param(<span class="string">"coll"</span>)</span> Collection&lt;? extends Serializable&gt; var1)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateById</span><span class="params">(@Param(<span class="string">"et"</span>)</span> T var1)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(@Param(<span class="string">"et"</span>)</span> T var1, @<span class="title">Param</span><span class="params">(<span class="string">"ew"</span>)</span> Wrapper&lt;T&gt; var2)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">T <span class="title">selectById</span><span class="params">(Serializable var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;T&gt; <span class="title">selectBatchIds</span><span class="params">(@Param(<span class="string">"coll"</span>)</span> Collection&lt;? extends Serializable&gt; var1)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;T&gt; <span class="title">selectByMap</span><span class="params">(@Param(<span class="string">"cm"</span>)</span> Map&lt;String, Object&gt; var1)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">T <span class="title">selectOne</span><span class="params">(@Param(<span class="string">"ew"</span>)</span> Wrapper&lt;T&gt; var1)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Integer <span class="title">selectCount</span><span class="params">(@Param(<span class="string">"ew"</span>)</span> Wrapper&lt;T&gt; var1)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;T&gt; <span class="title">selectList</span><span class="params">(@Param(<span class="string">"ew"</span>)</span> Wrapper&lt;T&gt; var1)</span>;</span><br><span class="line"></span><br><span class="line">    List&lt;Map&lt;String, Object&gt;&gt; selectMaps(<span class="meta">@Param</span>(<span class="string">"ew"</span>) Wrapper&lt;T&gt; var1);</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Object&gt; <span class="title">selectObjs</span><span class="params">(@Param(<span class="string">"ew"</span>)</span> Wrapper&lt;T&gt; var1)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">IPage&lt;T&gt; <span class="title">selectPage</span><span class="params">(IPage&lt;T&gt; var1, @Param(<span class="string">"ew"</span>)</span> Wrapper&lt;T&gt; var2)</span>;</span><br><span class="line"></span><br><span class="line">    IPage&lt;Map&lt;String, Object&gt;&gt; selectMapsPage(IPage&lt;T&gt; var1, <span class="meta">@Param</span>(<span class="string">"ew"</span>) Wrapper&lt;T&gt; var2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>启动类指定扫描mappers位置</strong> @MapperScan注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@MapperScan</span>(<span class="string">"com.tao.mapper"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Mpdemo1010Application</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(Mpdemo1010Application<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>查看sql日志</strong></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#mybatis日志</span></span><br><span class="line"><span class="meta">mybatis-plus.configuration.log-impl</span>=<span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><h3 id="（2）主键策略"><a href="#（2）主键策略" class="headerlink" title="（2）主键策略"></a>（2）主键策略</h3><p><strong>1、自动增长 anto increment</strong> 分表：用户表数据过于庞大，分到几张表中进行存储 <img src="https://i.loli.net/2020/10/21/YstfITrauOj6QAP.png" alt="image-20201021230158974"> 缺点：在新的表添加数据时需要查询到上一张表最后一条数据id <strong>2、UUID 每次操作生成随机的唯一的值</strong> <img src="https://i.loli.net/2020/10/21/yISfbRxCDmv6r1a.png" alt="image-20201021230313887"> 缺点：排序不方便 <strong>3、Redis实现</strong> ​ 当使用数据库来生成ID性能不够要求的时候，我们可以尝试使用Redis来生成ID。这主要依赖于Redis是单线程的，所以也可以用生成全局唯一的ID。可以用Redis的原子操作 INCR和INCRBY来实现。 <strong>4、Twitter的snowflake（雪花）算法（mp使用）</strong> ​ snowflake是Twitter开源的分布式ID生成算法，结果是一个long型的ID。其核心思想是：使用41bit作为毫秒数，10bit作为机器的ID（5个bit是数据中心，5个bit的机器ID），12bit作为毫秒内的流水号（意味着每个节点在每毫秒可以产生 4096 个 ID），最后还有一个符号位，永远是0。具体实现的代码可以参看<a href="https://github.com/twitter/snowflake。">https://github.com/twitter/snowflake。</a> <strong>配置主键策略</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableId</span>(type = IdType.AUTO)</span><br><span class="line"><span class="comment">//IdType</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> IdType &#123;</span><br><span class="line">    AUTO(<span class="number">0</span>),<span class="comment">//自动增长</span></span><br><span class="line">    NONE(<span class="number">1</span>),<span class="comment">//输入</span></span><br><span class="line">    INPUT(<span class="number">2</span>),<span class="comment">//设置id值</span></span><br><span class="line">    UUID(<span class="number">4</span>),<span class="comment">//使用uuid</span></span><br><span class="line">    <span class="comment">//mp自带策略</span></span><br><span class="line">    ID_WORKER(<span class="number">3</span>), <span class="comment">//mp自带策略，默认策略，会生成19位值，数字类型使用这种策略</span></span><br><span class="line">    ID_WORKER_STR(<span class="number">5</span>);<span class="comment">//mp自带策略，会生成19位值，字符串类型使用这种策略</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（3）自动填充"><a href="#（3）自动填充" class="headerlink" title="（3）自动填充"></a>（3）自动填充</h3><p> 项目中经常会遇到一些数据，每次都使用相同的方式填充，例如记录的<strong>创建时间</strong>，<strong>更新时间</strong>等。我们可以使用MyBatis Plus的自动填充功能，完成这些字段的赋值工作。 原始方式：手动设置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">user.setUpdateTime(<span class="keyword">new</span> Date());</span><br></pre></td></tr></table></figure><p>mp方式： <strong>1、在实体类里面进行需要自动填充的属性上面加注解 @TableField</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableField</span>(fill = FieldFill.INSERT)</span><br><span class="line"><span class="keyword">private</span> Date createTime;</span><br><span class="line"><span class="meta">@TableField</span>(fill = FieldFill.INSERT_UPDATE)</span><br><span class="line"><span class="keyword">private</span> Date updateTime;</span><br></pre></td></tr></table></figure><p><strong>2、创建类，实现接口MetaObjectHandler，实现接口里的方法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title">MetaObjectHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用mp进行插入操作时，这个方法执行</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">"createTime"</span>,<span class="keyword">new</span> Date(),metaObject);</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">"updateTime"</span>,<span class="keyword">new</span> Date(),metaObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">////使用mp进行修改操作时，这个方法执行</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">"updateTime"</span>,<span class="keyword">new</span> Date(),metaObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在实际开发中选择使用，实现功能即可</p></blockquote><h3 id="（4）乐观锁"><a href="#（4）乐观锁" class="headerlink" title="（4）乐观锁"></a>（4）乐观锁</h3><p>悲观锁：串行 乐观锁：</p><ul><li>取出记录时，获取当前version</li><li>更新时，带上这个version</li><li>执行更新时， set version = newVersion where version = oldVersion</li><li>如果version不对，就更新失败</li></ul><p>使用场景：12306抢火车票 mp使用乐观锁： 1、实体类对应version属性添加@Version注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Version</span></span><br><span class="line"><span class="keyword">private</span> Integer version;<span class="comment">//版本号</span></span><br></pre></td></tr></table></figure><p>2、配置乐观锁插件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@MapperScan</span>(<span class="string">"com.tao.mapper"</span>)</span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MpConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 乐观锁插件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> OptimisticLockerInterceptor <span class="title">optimisticLockerInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> OptimisticLockerInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、修改时需先查询再修改</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testOptimisticLocker</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//需先查询再修改</span></span><br><span class="line">    User user = userMapper.selectById(<span class="number">1319239623661387777L</span>);</span><br><span class="line">    user.setAge(<span class="number">200</span>);</span><br><span class="line">    <span class="keyword">int</span> row = userMapper.updateById(user);</span><br><span class="line">    System.out.println(row);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（5）分页查询"><a href="#（5）分页查询" class="headerlink" title="（5）分页查询"></a>（5）分页查询</h3><p>mp实现分页查询 1、配置分页插件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分页插件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PaginationInterceptor <span class="title">paginationInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> PaginationInterceptor();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、编写分页代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Page&lt;User&gt; page = <span class="keyword">new</span> Page&lt;User&gt;(<span class="number">1</span>,<span class="number">3</span>); <span class="comment">//参数 当前页，每页记录数</span></span><br><span class="line">    userMapper.selectPage(page, <span class="keyword">null</span>);<span class="comment">// 第二个参数条件</span></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"当前页"</span> +  page.getCurrent());</span><br><span class="line">    System.out.println(<span class="string">"页数"</span> +  page.getPages());</span><br><span class="line">    System.out.println(<span class="string">"当前数据"</span> + page.getRecords());</span><br><span class="line">    System.out.println(<span class="string">"每页大小"</span> + page.getSize());</span><br><span class="line">    System.out.println(<span class="string">"总条数"</span> + page.getTotal());</span><br><span class="line">    System.out.println(<span class="string">"是否下一页 "</span>+page.hasNext());</span><br><span class="line">    System.out.println(<span class="string">"是否前一页"</span> + page.hasPrevious());</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（6）逻辑删除"><a href="#（6）逻辑删除" class="headerlink" title="（6）逻辑删除"></a>（6）逻辑删除</h3><p>1、数据表添加字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`user`</span> <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> <span class="string">`deleted`</span> <span class="built_in">boolean</span></span><br></pre></td></tr></table></figure><p>2、属性上添加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableLogic</span></span><br><span class="line"><span class="keyword">private</span> Integer deleted; <span class="comment">//逻辑删除</span></span><br></pre></td></tr></table></figure><p>3、配置逻辑删除插件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ISqlInjector <span class="title">sqlInjector</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> LogicSqlInjector();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果： 删除时执行update</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">userMapper.deleteById(<span class="number">1319249424579670018L</span>);</span><br><span class="line"></span><br><span class="line">==&gt;  Preparing: UPDATE user SET deleted=<span class="number">1</span> WHERE id=? AND deleted=<span class="number">0</span> </span><br><span class="line">==&gt; Parameters: <span class="number">1319249424579670018</span>(Long)</span><br><span class="line">&lt;==    Updates: <span class="number">1</span></span><br></pre></td></tr></table></figure><p>查询时加上条件where deleted = 0</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; users = userMapper.selectList(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">Preparing: SELECT id,name,age,email,create_time,update_time,version,deleted FROM user WHERE deleted=<span class="number">0</span> </span><br><span class="line">==&gt; Parameters: </span><br><span class="line">&lt;==      Total: <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="（7）性能分析"><a href="#（7）性能分析" class="headerlink" title="（7）性能分析"></a>（7）性能分析</h3><p>1、配置性能分析插件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * SQL 执行性能分析插件</span></span><br><span class="line"><span class="comment">    * 开发环境使用，线上不推荐。 maxTime 指的是 sql 最大执行时长</span></span><br><span class="line"><span class="comment">    * 项目开发的环境</span></span><br><span class="line"><span class="comment">    * dev： 开发环境</span></span><br><span class="line"><span class="comment">    * test：测试环境</span></span><br><span class="line"><span class="comment">    * prod：生产环境</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> <span class="meta">@Bean</span></span><br><span class="line"><span class="comment">//表示当前插件对什么环境起作用</span></span><br><span class="line"><span class="meta">@Profile</span>(&#123;<span class="string">"dev"</span>,<span class="string">"test"</span>&#125;)<span class="comment">// 设置 dev test 环境开启</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PerformanceInterceptor <span class="title">performanceInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    PerformanceInterceptor performanceInterceptor = <span class="keyword">new</span> PerformanceInterceptor();</span><br><span class="line">    performanceInterceptor.setMaxTime(<span class="number">100</span>);<span class="comment">//ms，超过此处设置的ms则sql不执行</span></span><br><span class="line">    performanceInterceptor.setFormat(<span class="keyword">true</span>);</span><br><span class="line">    <span class="keyword">return</span> performanceInterceptor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、设置springboot dev环境</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#环境设置：dev、test、prod</span></span><br><span class="line"><span class="meta">spring.profiles.active</span>=<span class="string">dev</span></span><br></pre></td></tr></table></figure><h3 id="（8）复杂条件查询"><a href="#（8）复杂条件查询" class="headerlink" title="（8）复杂条件查询"></a>（8）复杂条件查询</h3><p>使用<strong>QueryWrapper</strong>构建查询条件 ge gt le lr ： &gt;= &gt; &lt;= &lt; eq ne ： == &lt;&gt; like： 模糊查询 orderByDesc： 排序 between ： 范围 last ：在sql语句的最后拼接一段sql语句 select：查询指定列的值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQueryWrapper</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//创建QueryWrapper对象</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    <span class="comment">//通过QueryWrapper设置查询条件</span></span><br><span class="line">    <span class="comment">// ge,gt,le,lt</span></span><br><span class="line">    <span class="comment">// 查询age&gt;=30的记录</span></span><br><span class="line">    <span class="comment">/*wrapper.ge("age",30);*/</span></span><br><span class="line">    <span class="comment">// eq,ne == !=</span></span><br><span class="line">    <span class="comment">/*wrapper.eq("name","lisi");*/</span></span><br><span class="line">    <span class="comment">// between</span></span><br><span class="line">    <span class="comment">/*wrapper.between("age",10,100);*/</span></span><br><span class="line">    <span class="comment">// like</span></span><br><span class="line">    <span class="comment">/*wrapper.like("name","东方");*/</span></span><br><span class="line">    <span class="comment">// orderByDesc</span></span><br><span class="line">    <span class="comment">// last 直接拼接到sql</span></span><br><span class="line">    <span class="comment">/*wrapper.last("limit 1");*/</span></span><br><span class="line">    <span class="comment">// select 查询指定的列</span></span><br><span class="line">    wrapper.select(<span class="string">"name"</span>);</span><br><span class="line">    List&lt;User&gt; users = userMapper.selectList(wrapper);</span><br><span class="line">    <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：&lt;/p&gt;
&lt;p&gt;项目简介、mybatisPlus&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术分享" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="谷粒学院项目" scheme="https://liaotao421.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
</feed>
